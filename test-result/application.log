10 Sep 2011 22:09:13,183 INFO  ~ Starting /Users/ketiljensen/dev/play/CourseBooking
10 Sep 2011 22:09:13,189 WARN  ~ Declaring modules in application.conf is deprecated. Use dependencies.yml instead (module.secure)
10 Sep 2011 22:09:13,190 INFO  ~ Module secure is available (/Users/ketiljensen/tools/play/modules/secure)
10 Sep 2011 22:09:13,191 INFO  ~ Module crud is available (/Users/ketiljensen/tools/play/modules/crud)
10 Sep 2011 22:09:13,191 INFO  ~ Module playapps is available (/Users/ketiljensen/dev/play/CourseBooking/modules/playapps-1.4)
10 Sep 2011 22:09:14,345 WARN  ~ You're running Play! in DEV mode
10 Sep 2011 22:09:14,507 INFO  ~ Listening for HTTP on port 9000 (Waiting a first request to start) ...
10 Sep 2011 22:09:23,129 DEBUG ~ Creating new CacheManager with default config
10 Sep 2011 22:09:23,131 DEBUG ~ Configuring ehcache from classpath.
10 Sep 2011 22:09:23,151 DEBUG ~ Configuring ehcache from ehcache.xml found in the classpath: jar:file:/Users/ketiljensen/tools/play/framework/play-1.2.3.jar!/ehcache.xml
10 Sep 2011 22:09:23,165 DEBUG ~ Configuring ehcache from URL: jar:file:/Users/ketiljensen/tools/play/framework/play-1.2.3.jar!/ehcache.xml
10 Sep 2011 22:09:23,165 DEBUG ~ Configuring ehcache from InputStream
10 Sep 2011 22:09:23,216 DEBUG ~ Ignoring ehcache attribute xmlns:xsi
10 Sep 2011 22:09:23,216 DEBUG ~ Ignoring ehcache attribute xsi:noNamespaceSchemaLocation
10 Sep 2011 22:09:23,219 DEBUG ~ Disk Store Path: /var/folders/xI/xIH3ZtbiG-Kq8Nf62iu0R++++TI/-Tmp-/
10 Sep 2011 22:09:23,231 DEBUG ~ propertiesString is null.
10 Sep 2011 22:09:23,233 DEBUG ~ No disk store path defined. Skipping disk store path conflict test.
10 Sep 2011 22:09:23,233 DEBUG ~ No CacheManagerEventListenerFactory class specified. Skipping...
10 Sep 2011 22:09:23,251 DEBUG ~ No BootstrapCacheLoaderFactory class specified. Skipping...
10 Sep 2011 22:09:23,251 DEBUG ~ CacheWriter factory not configured. Skipping...
10 Sep 2011 22:09:23,252 DEBUG ~ No CacheExceptionHandlerFactory class specified. Skipping...
10 Sep 2011 22:09:23,277 DEBUG ~ Initialized net.sf.ehcache.store.MemoryStore for play
10 Sep 2011 22:09:23,280 DEBUG ~ Initialised cache: play
10 Sep 2011 22:09:23,733 INFO  ~ Connected to jdbc:h2:mem:play;MODE=MYSQL
10 Sep 2011 22:09:23,906 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@1d286180
10 Sep 2011 22:09:23,906 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@1d286180
10 Sep 2011 22:09:23,906 DEBUG ~ Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1d286180
10 Sep 2011 22:09:23,908 DEBUG ~ Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@653cca0e
10 Sep 2011 22:09:23,910 DEBUG ~ Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e677ea2
10 Sep 2011 22:09:23,913 DEBUG ~ Adding type registration yes_no -> org.hibernate.type.YesNoType@38093b59
10 Sep 2011 22:09:23,917 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@ee67c12
10 Sep 2011 22:09:23,917 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@ee67c12
10 Sep 2011 22:09:23,917 DEBUG ~ Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@ee67c12
10 Sep 2011 22:09:23,919 DEBUG ~ Adding type registration character -> org.hibernate.type.CharacterType@631e1aa5
10 Sep 2011 22:09:23,920 DEBUG ~ Adding type registration char -> org.hibernate.type.CharacterType@631e1aa5
10 Sep 2011 22:09:23,920 DEBUG ~ Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@631e1aa5
10 Sep 2011 22:09:23,923 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@73b8cdd5
10 Sep 2011 22:09:23,923 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@73b8cdd5
10 Sep 2011 22:09:23,923 DEBUG ~ Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73b8cdd5
10 Sep 2011 22:09:23,928 DEBUG ~ Adding type registration integer -> org.hibernate.type.IntegerType@1667e92a
10 Sep 2011 22:09:23,928 DEBUG ~ Adding type registration int -> org.hibernate.type.IntegerType@1667e92a
10 Sep 2011 22:09:23,928 DEBUG ~ Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1667e92a
10 Sep 2011 22:09:23,956 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@68111f9b
10 Sep 2011 22:09:23,956 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@68111f9b
10 Sep 2011 22:09:23,956 DEBUG ~ Adding type registration java.lang.Long -> org.hibernate.type.LongType@68111f9b
10 Sep 2011 22:09:23,959 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@3a1af2bc
10 Sep 2011 22:09:23,959 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@3a1af2bc
10 Sep 2011 22:09:23,959 DEBUG ~ Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3a1af2bc
10 Sep 2011 22:09:23,960 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@21c8dfe6
10 Sep 2011 22:09:23,960 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@21c8dfe6
10 Sep 2011 22:09:23,961 DEBUG ~ Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@21c8dfe6
10 Sep 2011 22:09:23,963 DEBUG ~ Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1af2f973
10 Sep 2011 22:09:23,963 DEBUG ~ Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1af2f973
10 Sep 2011 22:09:23,968 DEBUG ~ Adding type registration big_integer -> org.hibernate.type.BigIntegerType@39126d91
10 Sep 2011 22:09:23,968 DEBUG ~ Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@39126d91
10 Sep 2011 22:09:23,970 DEBUG ~ Adding type registration string -> org.hibernate.type.StringType@42d73fb7
10 Sep 2011 22:09:23,970 DEBUG ~ Adding type registration java.lang.String -> org.hibernate.type.StringType@42d73fb7
10 Sep 2011 22:09:23,971 DEBUG ~ Adding type registration url -> org.hibernate.type.UrlType@417d7c01
10 Sep 2011 22:09:23,971 DEBUG ~ Adding type registration java.net.URL -> org.hibernate.type.UrlType@417d7c01
10 Sep 2011 22:09:23,976 DEBUG ~ Adding type registration date -> org.hibernate.type.DateType@650b5efb
10 Sep 2011 22:09:23,976 DEBUG ~ Adding type registration java.sql.Date -> org.hibernate.type.DateType@650b5efb
10 Sep 2011 22:09:23,978 DEBUG ~ Adding type registration time -> org.hibernate.type.TimeType@51ef4970
10 Sep 2011 22:09:23,978 DEBUG ~ Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51ef4970
10 Sep 2011 22:09:23,984 DEBUG ~ Adding type registration timestamp -> org.hibernate.type.TimestampType@6facdcb9
10 Sep 2011 22:09:23,984 DEBUG ~ Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6facdcb9
10 Sep 2011 22:09:23,984 DEBUG ~ Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6facdcb9
10 Sep 2011 22:09:23,985 DEBUG ~ Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d14382d
10 Sep 2011 22:09:23,987 DEBUG ~ Adding type registration calendar -> org.hibernate.type.CalendarType@4726cdd1
10 Sep 2011 22:09:23,987 DEBUG ~ Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4726cdd1
10 Sep 2011 22:09:23,987 DEBUG ~ Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4726cdd1
10 Sep 2011 22:09:23,988 DEBUG ~ Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@18571615
10 Sep 2011 22:09:23,990 DEBUG ~ Adding type registration locale -> org.hibernate.type.LocaleType@77fef1a0
10 Sep 2011 22:09:23,990 DEBUG ~ Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77fef1a0
10 Sep 2011 22:09:23,991 DEBUG ~ Adding type registration currency -> org.hibernate.type.CurrencyType@2dbe1f3e
10 Sep 2011 22:09:23,991 DEBUG ~ Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2dbe1f3e
10 Sep 2011 22:09:23,992 DEBUG ~ Adding type registration timezone -> org.hibernate.type.TimeZoneType@2e1df471
10 Sep 2011 22:09:23,992 DEBUG ~ Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2e1df471
10 Sep 2011 22:09:23,993 DEBUG ~ Adding type registration class -> org.hibernate.type.ClassType@3b25bbd3
10 Sep 2011 22:09:23,994 DEBUG ~ Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b25bbd3
10 Sep 2011 22:09:23,997 DEBUG ~ Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3bd29ee4
10 Sep 2011 22:09:23,997 DEBUG ~ Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3bd29ee4
10 Sep 2011 22:09:23,998 DEBUG ~ Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7a79ae56
10 Sep 2011 22:09:23,999 DEBUG ~ Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@25203875
10 Sep 2011 22:09:24,000 DEBUG ~ Adding type registration binary -> org.hibernate.type.BinaryType@58e4d7f7
10 Sep 2011 22:09:24,000 DEBUG ~ Adding type registration byte[] -> org.hibernate.type.BinaryType@58e4d7f7
10 Sep 2011 22:09:24,000 DEBUG ~ Adding type registration [B -> org.hibernate.type.BinaryType@58e4d7f7
10 Sep 2011 22:09:24,002 DEBUG ~ Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c3a5635
10 Sep 2011 22:09:24,002 DEBUG ~ Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c3a5635
10 Sep 2011 22:09:24,002 DEBUG ~ Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c3a5635
10 Sep 2011 22:09:24,003 DEBUG ~ Adding type registration image -> org.hibernate.type.ImageType@4e877a44
10 Sep 2011 22:09:24,004 DEBUG ~ Adding type registration characters -> org.hibernate.type.CharArrayType@5a0d2bee
10 Sep 2011 22:09:24,004 DEBUG ~ Adding type registration char[] -> org.hibernate.type.CharArrayType@5a0d2bee
10 Sep 2011 22:09:24,004 DEBUG ~ Adding type registration [C -> org.hibernate.type.CharArrayType@5a0d2bee
10 Sep 2011 22:09:24,006 DEBUG ~ Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@759f6a57
10 Sep 2011 22:09:24,006 DEBUG ~ Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@759f6a57
10 Sep 2011 22:09:24,006 DEBUG ~ Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@759f6a57
10 Sep 2011 22:09:24,007 DEBUG ~ Adding type registration text -> org.hibernate.type.TextType@65499154
10 Sep 2011 22:09:24,015 DEBUG ~ Adding type registration blob -> org.hibernate.type.BlobType@6597d63b
10 Sep 2011 22:09:24,015 DEBUG ~ Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6597d63b
10 Sep 2011 22:09:24,017 DEBUG ~ Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3294e4f4
10 Sep 2011 22:09:24,018 DEBUG ~ Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@3aae43b8
10 Sep 2011 22:09:24,023 DEBUG ~ Adding type registration clob -> org.hibernate.type.ClobType@4679cf8c
10 Sep 2011 22:09:24,023 DEBUG ~ Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4679cf8c
10 Sep 2011 22:09:24,024 DEBUG ~ Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27077aa7
10 Sep 2011 22:09:24,024 DEBUG ~ Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@69dc8f2
10 Sep 2011 22:09:24,025 DEBUG ~ Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@8bfc25c
10 Sep 2011 22:09:24,026 DEBUG ~ Adding type registration serializable -> org.hibernate.type.SerializableType@2d95bbec
10 Sep 2011 22:09:24,030 DEBUG ~ Adding type registration object -> org.hibernate.type.ObjectType@30c028cc
10 Sep 2011 22:09:24,030 DEBUG ~ Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30c028cc
10 Sep 2011 22:09:24,031 DEBUG ~ Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cf5b814
10 Sep 2011 22:09:24,031 DEBUG ~ Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@28084850
10 Sep 2011 22:09:24,031 DEBUG ~ Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@37c390b8
10 Sep 2011 22:09:24,031 DEBUG ~ Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8523ca2
10 Sep 2011 22:09:24,031 DEBUG ~ Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f0ab3f2
10 Sep 2011 22:09:24,031 DEBUG ~ Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@47abfd68
10 Sep 2011 22:09:24,031 DEBUG ~ Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6c89db9a
10 Sep 2011 22:09:24,031 DEBUG ~ Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4eb09321
10 Sep 2011 22:09:24,058 INFO  ~ Hibernate Commons Annotations 3.2.0.Final
10 Sep 2011 22:09:24,065 INFO  ~ Hibernate 3.6.1.Final
10 Sep 2011 22:09:24,066 INFO  ~ hibernate.properties not found
10 Sep 2011 22:09:24,070 INFO  ~ Bytecode provider name : javassist
10 Sep 2011 22:09:24,074 INFO  ~ using JDK 1.4 java.sql.Timestamp handling
10 Sep 2011 22:09:24,138 DEBUG ~ Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
10 Sep 2011 22:09:24,139 DEBUG ~ Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
10 Sep 2011 22:09:24,139 DEBUG ~ Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
10 Sep 2011 22:09:24,139 DEBUG ~ Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
10 Sep 2011 22:09:24,141 DEBUG ~ Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
10 Sep 2011 22:09:24,142 DEBUG ~ Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
10 Sep 2011 22:09:24,143 DEBUG ~ Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
10 Sep 2011 22:09:24,143 DEBUG ~ Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
10 Sep 2011 22:09:24,144 DEBUG ~ Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
10 Sep 2011 22:09:24,144 DEBUG ~ Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
10 Sep 2011 22:09:24,145 DEBUG ~ Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
10 Sep 2011 22:09:24,145 DEBUG ~ Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
10 Sep 2011 22:09:24,145 DEBUG ~ Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
10 Sep 2011 22:09:24,146 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
10 Sep 2011 22:09:24,147 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
10 Sep 2011 22:09:24,149 INFO  ~ Hibernate EntityManager 3.6.0.Final
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@1d286180
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@1d286180
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1d286180
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@653cca0e
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e677ea2
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration yes_no -> org.hibernate.type.YesNoType@38093b59
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@ee67c12
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@ee67c12
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@ee67c12
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration character -> org.hibernate.type.CharacterType@631e1aa5
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration char -> org.hibernate.type.CharacterType@631e1aa5
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@631e1aa5
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@73b8cdd5
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@73b8cdd5
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73b8cdd5
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration integer -> org.hibernate.type.IntegerType@1667e92a
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration int -> org.hibernate.type.IntegerType@1667e92a
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1667e92a
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@68111f9b
10 Sep 2011 22:09:24,150 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@68111f9b
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration java.lang.Long -> org.hibernate.type.LongType@68111f9b
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@3a1af2bc
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@3a1af2bc
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3a1af2bc
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@21c8dfe6
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@21c8dfe6
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@21c8dfe6
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1af2f973
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1af2f973
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration big_integer -> org.hibernate.type.BigIntegerType@39126d91
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@39126d91
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration string -> org.hibernate.type.StringType@42d73fb7
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration java.lang.String -> org.hibernate.type.StringType@42d73fb7
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration url -> org.hibernate.type.UrlType@417d7c01
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration java.net.URL -> org.hibernate.type.UrlType@417d7c01
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration date -> org.hibernate.type.DateType@650b5efb
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration java.sql.Date -> org.hibernate.type.DateType@650b5efb
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration time -> org.hibernate.type.TimeType@51ef4970
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51ef4970
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration timestamp -> org.hibernate.type.TimestampType@6facdcb9
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6facdcb9
10 Sep 2011 22:09:24,151 DEBUG ~ Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6facdcb9
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d14382d
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration calendar -> org.hibernate.type.CalendarType@4726cdd1
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4726cdd1
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4726cdd1
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@18571615
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration locale -> org.hibernate.type.LocaleType@77fef1a0
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77fef1a0
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration currency -> org.hibernate.type.CurrencyType@2dbe1f3e
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2dbe1f3e
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration timezone -> org.hibernate.type.TimeZoneType@2e1df471
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2e1df471
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration class -> org.hibernate.type.ClassType@3b25bbd3
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b25bbd3
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3bd29ee4
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3bd29ee4
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7a79ae56
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@25203875
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration binary -> org.hibernate.type.BinaryType@58e4d7f7
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration byte[] -> org.hibernate.type.BinaryType@58e4d7f7
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration [B -> org.hibernate.type.BinaryType@58e4d7f7
10 Sep 2011 22:09:24,152 DEBUG ~ Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c3a5635
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c3a5635
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c3a5635
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration image -> org.hibernate.type.ImageType@4e877a44
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration characters -> org.hibernate.type.CharArrayType@5a0d2bee
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration char[] -> org.hibernate.type.CharArrayType@5a0d2bee
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration [C -> org.hibernate.type.CharArrayType@5a0d2bee
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@759f6a57
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@759f6a57
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@759f6a57
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration text -> org.hibernate.type.TextType@65499154
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration blob -> org.hibernate.type.BlobType@6597d63b
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6597d63b
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3294e4f4
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@3aae43b8
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration clob -> org.hibernate.type.ClobType@4679cf8c
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4679cf8c
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27077aa7
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@69dc8f2
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@8bfc25c
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration serializable -> org.hibernate.type.SerializableType@2d95bbec
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration object -> org.hibernate.type.ObjectType@30c028cc
10 Sep 2011 22:09:24,153 DEBUG ~ Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30c028cc
10 Sep 2011 22:09:24,154 DEBUG ~ Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7022e3ac
10 Sep 2011 22:09:24,154 DEBUG ~ Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2916ab8
10 Sep 2011 22:09:24,154 DEBUG ~ Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@18f55759
10 Sep 2011 22:09:24,154 DEBUG ~ Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1339a0dc
10 Sep 2011 22:09:24,154 DEBUG ~ Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2c6fd560
10 Sep 2011 22:09:24,154 DEBUG ~ Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6221a86a
10 Sep 2011 22:09:24,154 DEBUG ~ Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@fb7f97b
10 Sep 2011 22:09:24,154 DEBUG ~ Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@775c024c
10 Sep 2011 22:09:24,154 DEBUG ~ Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
10 Sep 2011 22:09:24,154 DEBUG ~ Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
10 Sep 2011 22:09:24,154 DEBUG ~ Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
10 Sep 2011 22:09:24,154 DEBUG ~ Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
10 Sep 2011 22:09:24,154 DEBUG ~ Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
10 Sep 2011 22:09:24,154 DEBUG ~ Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
10 Sep 2011 22:09:24,154 DEBUG ~ Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
10 Sep 2011 22:09:24,154 DEBUG ~ Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
10 Sep 2011 22:09:24,154 DEBUG ~ Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
10 Sep 2011 22:09:24,154 DEBUG ~ Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
10 Sep 2011 22:09:24,154 DEBUG ~ Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
10 Sep 2011 22:09:24,155 DEBUG ~ Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
10 Sep 2011 22:09:24,155 DEBUG ~ Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
10 Sep 2011 22:09:24,155 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
10 Sep 2011 22:09:24,155 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
10 Sep 2011 22:09:24,216 DEBUG ~ Processing hbm.xml files
10 Sep 2011 22:09:24,216 DEBUG ~ Process annotated classes
10 Sep 2011 22:09:24,231 INFO  ~ Binding entity from annotated class: models.Location
10 Sep 2011 22:09:24,458 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
10 Sep 2011 22:09:24,460 DEBUG ~ no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
10 Sep 2011 22:09:24,466 DEBUG ~ Import with entity name Location
10 Sep 2011 22:09:24,471 INFO  ~ Bind entity models.Location on table Location
10 Sep 2011 22:09:24,501 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Location), mappingColumn=id, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,504 DEBUG ~ binding property id with lazy=false
10 Sep 2011 22:09:24,506 DEBUG ~ building SimpleValue for id
10 Sep 2011 22:09:24,508 DEBUG ~ Building property id
10 Sep 2011 22:09:24,510 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Location), mappingColumn=address, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,510 DEBUG ~ binding property address with lazy=false
10 Sep 2011 22:09:24,510 DEBUG ~ building SimpleValue for address
10 Sep 2011 22:09:24,510 DEBUG ~ Building property address
10 Sep 2011 22:09:24,512 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='location'}
10 Sep 2011 22:09:24,512 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Location), mappingColumn=courses, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,513 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Location), mappingColumn=null, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,526 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Location), mappingColumn=element, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,527 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Location), mappingColumn=courses_KEY, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,528 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='courses_KEY', referencedColumn='null', mappedBy='null'}
10 Sep 2011 22:09:24,529 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='location'}
10 Sep 2011 22:09:24,529 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='location'}
10 Sep 2011 22:09:24,530 DEBUG ~ Collection role: models.Location.courses
10 Sep 2011 22:09:24,533 DEBUG ~ Building property courses
10 Sep 2011 22:09:24,533 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Location), mappingColumn=map, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,533 DEBUG ~ binding property map with lazy=false
10 Sep 2011 22:09:24,534 DEBUG ~ building SimpleValue for map
10 Sep 2011 22:09:24,535 DEBUG ~ Building property map
10 Sep 2011 22:09:24,535 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Location), mappingColumn=mapUrl, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,535 DEBUG ~ binding property mapUrl with lazy=false
10 Sep 2011 22:09:24,535 DEBUG ~ building SimpleValue for mapUrl
10 Sep 2011 22:09:24,535 DEBUG ~ Building property mapUrl
10 Sep 2011 22:09:24,535 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Location), mappingColumn=name, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,535 DEBUG ~ binding property name with lazy=false
10 Sep 2011 22:09:24,535 DEBUG ~ building SimpleValue for name
10 Sep 2011 22:09:24,535 DEBUG ~ Building property name
10 Sep 2011 22:09:24,535 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Location), mappingColumn=postal, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,535 DEBUG ~ binding property postal with lazy=false
10 Sep 2011 22:09:24,535 DEBUG ~ building SimpleValue for postal
10 Sep 2011 22:09:24,535 DEBUG ~ Building property postal
10 Sep 2011 22:09:24,535 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Location), mappingColumn=telephoneNumber, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,536 DEBUG ~ binding property telephoneNumber with lazy=false
10 Sep 2011 22:09:24,536 DEBUG ~ building SimpleValue for telephoneNumber
10 Sep 2011 22:09:24,536 DEBUG ~ Building property telephoneNumber
10 Sep 2011 22:09:24,536 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Location), mappingColumn=url, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,536 DEBUG ~ binding property url with lazy=false
10 Sep 2011 22:09:24,536 DEBUG ~ building SimpleValue for url
10 Sep 2011 22:09:24,536 DEBUG ~ Building property url
10 Sep 2011 22:09:24,537 INFO  ~ Binding entity from annotated class: models.Evaluation
10 Sep 2011 22:09:24,538 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
10 Sep 2011 22:09:24,538 DEBUG ~ no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
10 Sep 2011 22:09:24,538 DEBUG ~ Import with entity name Evaluation
10 Sep 2011 22:09:24,538 INFO  ~ Bind entity models.Evaluation on table Evaluation
10 Sep 2011 22:09:24,540 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Evaluation), mappingColumn=id, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,540 DEBUG ~ binding property id with lazy=false
10 Sep 2011 22:09:24,540 DEBUG ~ building SimpleValue for id
10 Sep 2011 22:09:24,540 DEBUG ~ Building property id
10 Sep 2011 22:09:24,540 INFO  ~ Binding entity from annotated class: models.Presentation
10 Sep 2011 22:09:24,540 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
10 Sep 2011 22:09:24,540 DEBUG ~ no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
10 Sep 2011 22:09:24,540 DEBUG ~ Import with entity name Presentation
10 Sep 2011 22:09:24,540 INFO  ~ Bind entity models.Presentation on table Presentation
10 Sep 2011 22:09:24,546 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Presentation), mappingColumn=id, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,550 DEBUG ~ binding property id with lazy=false
10 Sep 2011 22:09:24,550 DEBUG ~ building SimpleValue for id
10 Sep 2011 22:09:24,550 DEBUG ~ Building property id
10 Sep 2011 22:09:24,550 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Presentation), mappingColumn=event, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,550 DEBUG ~ binding property event with lazy=false
10 Sep 2011 22:09:24,550 DEBUG ~ building SimpleValue for event
10 Sep 2011 22:09:24,550 DEBUG ~ Building property event
10 Sep 2011 22:09:24,550 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Presentation), mappingColumn=location, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,550 DEBUG ~ binding property location with lazy=false
10 Sep 2011 22:09:24,550 DEBUG ~ building SimpleValue for location
10 Sep 2011 22:09:24,550 DEBUG ~ Building property location
10 Sep 2011 22:09:24,550 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Presentation), mappingColumn=name, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,551 DEBUG ~ binding property name with lazy=false
10 Sep 2011 22:09:24,551 DEBUG ~ building SimpleValue for name
10 Sep 2011 22:09:24,551 DEBUG ~ Building property name
10 Sep 2011 22:09:24,551 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
10 Sep 2011 22:09:24,553 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Presentation), mappingColumn=presenter, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,555 DEBUG ~ Building property presenter
10 Sep 2011 22:09:24,555 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Presentation), mappingColumn=url, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,555 DEBUG ~ binding property url with lazy=false
10 Sep 2011 22:09:24,556 DEBUG ~ building SimpleValue for url
10 Sep 2011 22:09:24,556 DEBUG ~ Building property url
10 Sep 2011 22:09:24,556 INFO  ~ Binding entity from annotated class: models.Site
10 Sep 2011 22:09:24,556 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
10 Sep 2011 22:09:24,556 DEBUG ~ no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
10 Sep 2011 22:09:24,556 DEBUG ~ Import with entity name Site
10 Sep 2011 22:09:24,556 INFO  ~ Bind entity models.Site on table Site
10 Sep 2011 22:09:24,558 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Site), mappingColumn=id, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,558 DEBUG ~ binding property id with lazy=false
10 Sep 2011 22:09:24,558 DEBUG ~ building SimpleValue for id
10 Sep 2011 22:09:24,558 DEBUG ~ Building property id
10 Sep 2011 22:09:24,558 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Site), mappingColumn=description, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,559 DEBUG ~ binding property description with lazy=false
10 Sep 2011 22:09:24,559 DEBUG ~ building SimpleValue for description
10 Sep 2011 22:09:24,559 DEBUG ~ Building property description
10 Sep 2011 22:09:24,559 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Site), mappingColumn=name, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,559 DEBUG ~ binding property name with lazy=false
10 Sep 2011 22:09:24,559 DEBUG ~ building SimpleValue for name
10 Sep 2011 22:09:24,559 DEBUG ~ Building property name
10 Sep 2011 22:09:24,559 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Site), mappingColumn=url, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,559 DEBUG ~ binding property url with lazy=false
10 Sep 2011 22:09:24,559 DEBUG ~ building SimpleValue for url
10 Sep 2011 22:09:24,559 DEBUG ~ Building property url
10 Sep 2011 22:09:24,559 INFO  ~ Binding entity from annotated class: models.User
10 Sep 2011 22:09:24,559 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
10 Sep 2011 22:09:24,559 DEBUG ~ no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
10 Sep 2011 22:09:24,560 DEBUG ~ Import with entity name User
10 Sep 2011 22:09:24,560 INFO  ~ Bind entity models.User on table User
10 Sep 2011 22:09:24,564 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=id, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,564 DEBUG ~ binding property id with lazy=false
10 Sep 2011 22:09:24,564 DEBUG ~ building SimpleValue for id
10 Sep 2011 22:09:24,564 DEBUG ~ Building property id
10 Sep 2011 22:09:24,565 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=email, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,565 DEBUG ~ binding property email with lazy=false
10 Sep 2011 22:09:24,565 DEBUG ~ building SimpleValue for email
10 Sep 2011 22:09:24,565 DEBUG ~ Building property email
10 Sep 2011 22:09:24,565 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=fullName, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,565 DEBUG ~ binding property fullName with lazy=false
10 Sep 2011 22:09:24,565 DEBUG ~ building SimpleValue for fullName
10 Sep 2011 22:09:24,565 DEBUG ~ Building property fullName
10 Sep 2011 22:09:24,565 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=isAdmin, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,565 DEBUG ~ binding property isAdmin with lazy=false
10 Sep 2011 22:09:24,565 DEBUG ~ building SimpleValue for isAdmin
10 Sep 2011 22:09:24,565 DEBUG ~ Building property isAdmin
10 Sep 2011 22:09:24,565 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=password, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,566 DEBUG ~ binding property password with lazy=false
10 Sep 2011 22:09:24,566 DEBUG ~ building SimpleValue for password
10 Sep 2011 22:09:24,566 DEBUG ~ Building property password
10 Sep 2011 22:09:24,566 INFO  ~ Binding entity from annotated class: models.Instructor
10 Sep 2011 22:09:24,566 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
10 Sep 2011 22:09:24,566 DEBUG ~ no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
10 Sep 2011 22:09:24,566 DEBUG ~ Import with entity name Instructor
10 Sep 2011 22:09:24,566 INFO  ~ Bind entity models.Instructor on table Instructor
10 Sep 2011 22:09:24,569 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=id, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,569 DEBUG ~ binding property id with lazy=false
10 Sep 2011 22:09:24,569 DEBUG ~ building SimpleValue for id
10 Sep 2011 22:09:24,569 DEBUG ~ Building property id
10 Sep 2011 22:09:24,570 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=bio, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,570 DEBUG ~ binding property bio with lazy=false
10 Sep 2011 22:09:24,570 DEBUG ~ building SimpleValue for bio
10 Sep 2011 22:09:24,570 DEBUG ~ Building property bio
10 Sep 2011 22:09:24,570 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
10 Sep 2011 22:09:24,570 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=books, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,570 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=null, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,570 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=element, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,570 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,570 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
10 Sep 2011 22:09:24,570 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
10 Sep 2011 22:09:24,570 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
10 Sep 2011 22:09:24,571 DEBUG ~ Collection role: models.Instructor.books
10 Sep 2011 22:09:24,571 DEBUG ~ Building property books
10 Sep 2011 22:09:24,571 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='instructor'}
10 Sep 2011 22:09:24,571 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=courses, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,571 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=null, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,571 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=element, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,571 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=courses_KEY, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,571 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='courses_KEY', referencedColumn='null', mappedBy='null'}
10 Sep 2011 22:09:24,571 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='instructor'}
10 Sep 2011 22:09:24,571 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='instructor'}
10 Sep 2011 22:09:24,571 DEBUG ~ Collection role: models.Instructor.courses
10 Sep 2011 22:09:24,571 DEBUG ~ Building property courses
10 Sep 2011 22:09:24,572 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=image, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,572 DEBUG ~ binding property image with lazy=false
10 Sep 2011 22:09:24,572 DEBUG ~ building SimpleValue for image
10 Sep 2011 22:09:24,572 DEBUG ~ Building property image
10 Sep 2011 22:09:24,572 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=largeImage, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,572 DEBUG ~ binding property largeImage with lazy=false
10 Sep 2011 22:09:24,572 DEBUG ~ building SimpleValue for largeImage
10 Sep 2011 22:09:24,572 DEBUG ~ Building property largeImage
10 Sep 2011 22:09:24,572 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=name, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,572 DEBUG ~ binding property name with lazy=false
10 Sep 2011 22:09:24,572 DEBUG ~ building SimpleValue for name
10 Sep 2011 22:09:24,572 DEBUG ~ Building property name
10 Sep 2011 22:09:24,572 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
10 Sep 2011 22:09:24,572 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=presentations, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,573 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=null, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,573 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=element, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,573 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=presentations_KEY, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,573 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='presentations_KEY', referencedColumn='null', mappedBy='null'}
10 Sep 2011 22:09:24,573 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
10 Sep 2011 22:09:24,573 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
10 Sep 2011 22:09:24,573 DEBUG ~ Collection role: models.Instructor.presentations
10 Sep 2011 22:09:24,573 DEBUG ~ Building property presentations
10 Sep 2011 22:09:24,573 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=resume, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,573 DEBUG ~ binding property resume with lazy=false
10 Sep 2011 22:09:24,573 DEBUG ~ building SimpleValue for resume
10 Sep 2011 22:09:24,573 DEBUG ~ Building property resume
10 Sep 2011 22:09:24,573 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=twitterId, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,574 DEBUG ~ binding property twitterId with lazy=false
10 Sep 2011 22:09:24,574 DEBUG ~ building SimpleValue for twitterId
10 Sep 2011 22:09:24,574 DEBUG ~ Building property twitterId
10 Sep 2011 22:09:24,574 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Instructor), mappingColumn=website, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,574 DEBUG ~ binding property website with lazy=false
10 Sep 2011 22:09:24,574 DEBUG ~ building SimpleValue for website
10 Sep 2011 22:09:24,574 DEBUG ~ Building property website
10 Sep 2011 22:09:24,574 INFO  ~ Binding entity from annotated class: models.Course
10 Sep 2011 22:09:24,574 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
10 Sep 2011 22:09:24,574 DEBUG ~ no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
10 Sep 2011 22:09:24,574 DEBUG ~ Import with entity name Course
10 Sep 2011 22:09:24,574 INFO  ~ Bind entity models.Course on table Course
10 Sep 2011 22:09:24,580 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=id, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,580 DEBUG ~ binding property id with lazy=false
10 Sep 2011 22:09:24,580 DEBUG ~ building SimpleValue for id
10 Sep 2011 22:09:24,580 DEBUG ~ Building property id
10 Sep 2011 22:09:24,580 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=description, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,580 DEBUG ~ binding property description with lazy=false
10 Sep 2011 22:09:24,580 DEBUG ~ building SimpleValue for description
10 Sep 2011 22:09:24,580 DEBUG ~ Building property description
10 Sep 2011 22:09:24,581 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=earlyBird, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,581 DEBUG ~ binding property earlyBird with lazy=false
10 Sep 2011 22:09:24,581 DEBUG ~ building SimpleValue for earlyBird
10 Sep 2011 22:09:24,581 DEBUG ~ Building property earlyBird
10 Sep 2011 22:09:24,581 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=earlyBirdEndDate, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,581 DEBUG ~ binding property earlyBirdEndDate with lazy=false
10 Sep 2011 22:09:24,581 DEBUG ~ building SimpleValue for earlyBirdEndDate
10 Sep 2011 22:09:24,581 DEBUG ~ Building property earlyBirdEndDate
10 Sep 2011 22:09:24,581 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,581 DEBUG ~ binding property endDate with lazy=false
10 Sep 2011 22:09:24,581 DEBUG ~ building SimpleValue for endDate
10 Sep 2011 22:09:24,581 DEBUG ~ Building property endDate
10 Sep 2011 22:09:24,581 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
10 Sep 2011 22:09:24,581 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=instructor, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,582 DEBUG ~ Building property instructor
10 Sep 2011 22:09:24,582 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
10 Sep 2011 22:09:24,582 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=location, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,582 DEBUG ~ Building property location
10 Sep 2011 22:09:24,582 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=maxNumberOfParticipants, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,582 DEBUG ~ binding property maxNumberOfParticipants with lazy=false
10 Sep 2011 22:09:24,582 DEBUG ~ building SimpleValue for maxNumberOfParticipants
10 Sep 2011 22:09:24,582 DEBUG ~ Building property maxNumberOfParticipants
10 Sep 2011 22:09:24,582 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=name, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,582 DEBUG ~ binding property name with lazy=false
10 Sep 2011 22:09:24,582 DEBUG ~ building SimpleValue for name
10 Sep 2011 22:09:24,583 DEBUG ~ Building property name
10 Sep 2011 22:09:24,583 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
10 Sep 2011 22:09:24,583 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=participants, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,583 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=null, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,583 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=element, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,583 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=participants_KEY, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,583 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='participants_KEY', referencedColumn='null', mappedBy='null'}
10 Sep 2011 22:09:24,583 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
10 Sep 2011 22:09:24,583 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
10 Sep 2011 22:09:24,583 DEBUG ~ Collection role: models.Course.participants
10 Sep 2011 22:09:24,583 DEBUG ~ Building property participants
10 Sep 2011 22:09:24,583 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=price, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,584 DEBUG ~ binding property price with lazy=false
10 Sep 2011 22:09:24,584 DEBUG ~ building SimpleValue for price
10 Sep 2011 22:09:24,584 DEBUG ~ Building property price
10 Sep 2011 22:09:24,584 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Course), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,584 DEBUG ~ binding property startDate with lazy=false
10 Sep 2011 22:09:24,584 DEBUG ~ building SimpleValue for startDate
10 Sep 2011 22:09:24,584 DEBUG ~ Building property startDate
10 Sep 2011 22:09:24,584 INFO  ~ Binding entity from annotated class: models.Book
10 Sep 2011 22:09:24,584 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
10 Sep 2011 22:09:24,584 DEBUG ~ no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
10 Sep 2011 22:09:24,584 DEBUG ~ Import with entity name Book
10 Sep 2011 22:09:24,584 INFO  ~ Bind entity models.Book on table Book
10 Sep 2011 22:09:24,586 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,586 DEBUG ~ binding property id with lazy=false
10 Sep 2011 22:09:24,586 DEBUG ~ building SimpleValue for id
10 Sep 2011 22:09:24,586 DEBUG ~ Building property id
10 Sep 2011 22:09:24,587 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
10 Sep 2011 22:09:24,587 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,587 DEBUG ~ Building property author
10 Sep 2011 22:09:24,587 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=externalUrl, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,587 DEBUG ~ binding property externalUrl with lazy=false
10 Sep 2011 22:09:24,587 DEBUG ~ building SimpleValue for externalUrl
10 Sep 2011 22:09:24,587 DEBUG ~ Building property externalUrl
10 Sep 2011 22:09:24,587 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=imageUrl, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,587 DEBUG ~ binding property imageUrl with lazy=false
10 Sep 2011 22:09:24,587 DEBUG ~ building SimpleValue for imageUrl
10 Sep 2011 22:09:24,587 DEBUG ~ Building property imageUrl
10 Sep 2011 22:09:24,588 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,588 DEBUG ~ binding property title with lazy=false
10 Sep 2011 22:09:24,588 DEBUG ~ building SimpleValue for title
10 Sep 2011 22:09:24,588 DEBUG ~ Building property title
10 Sep 2011 22:09:24,588 INFO  ~ Binding entity from annotated class: models.Participant
10 Sep 2011 22:09:24,588 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
10 Sep 2011 22:09:24,588 DEBUG ~ no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
10 Sep 2011 22:09:24,588 DEBUG ~ Import with entity name Participant
10 Sep 2011 22:09:24,588 INFO  ~ Bind entity models.Participant on table Participant
10 Sep 2011 22:09:24,591 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Participant), mappingColumn=id, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,591 DEBUG ~ binding property id with lazy=false
10 Sep 2011 22:09:24,592 DEBUG ~ building SimpleValue for id
10 Sep 2011 22:09:24,592 DEBUG ~ Building property id
10 Sep 2011 22:09:24,592 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Participant), mappingColumn=address, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,592 DEBUG ~ binding property address with lazy=false
10 Sep 2011 22:09:24,592 DEBUG ~ building SimpleValue for address
10 Sep 2011 22:09:24,592 DEBUG ~ Building property address
10 Sep 2011 22:09:24,592 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Participant), mappingColumn=billed, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,592 DEBUG ~ binding property billed with lazy=false
10 Sep 2011 22:09:24,592 DEBUG ~ building SimpleValue for billed
10 Sep 2011 22:09:24,592 DEBUG ~ Building property billed
10 Sep 2011 22:09:24,592 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Participant), mappingColumn=company, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,592 DEBUG ~ binding property company with lazy=false
10 Sep 2011 22:09:24,592 DEBUG ~ building SimpleValue for company
10 Sep 2011 22:09:24,592 DEBUG ~ Building property company
10 Sep 2011 22:09:24,593 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
10 Sep 2011 22:09:24,593 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Participant), mappingColumn=course, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,593 DEBUG ~ Building property course
10 Sep 2011 22:09:24,593 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Participant), mappingColumn=email, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,593 DEBUG ~ binding property email with lazy=false
10 Sep 2011 22:09:24,593 DEBUG ~ building SimpleValue for email
10 Sep 2011 22:09:24,593 DEBUG ~ Building property email
10 Sep 2011 22:09:24,593 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Participant), mappingColumn=name, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,593 DEBUG ~ binding property name with lazy=false
10 Sep 2011 22:09:24,593 DEBUG ~ building SimpleValue for name
10 Sep 2011 22:09:24,593 DEBUG ~ Building property name
10 Sep 2011 22:09:24,593 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Participant), mappingColumn=orgNumber, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,594 DEBUG ~ binding property orgNumber with lazy=false
10 Sep 2011 22:09:24,594 DEBUG ~ building SimpleValue for orgNumber
10 Sep 2011 22:09:24,594 DEBUG ~ Building property orgNumber
10 Sep 2011 22:09:24,594 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Participant), mappingColumn=paymentReceived, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,594 DEBUG ~ binding property paymentReceived with lazy=false
10 Sep 2011 22:09:24,594 DEBUG ~ building SimpleValue for paymentReceived
10 Sep 2011 22:09:24,594 DEBUG ~ Building property paymentReceived
10 Sep 2011 22:09:24,594 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Participant), mappingColumn=telephonenumber, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,594 DEBUG ~ binding property telephonenumber with lazy=false
10 Sep 2011 22:09:24,594 DEBUG ~ building SimpleValue for telephonenumber
10 Sep 2011 22:09:24,594 DEBUG ~ Building property telephonenumber
10 Sep 2011 22:09:24,594 INFO  ~ Binding entity from annotated class: models.CourseInterest
10 Sep 2011 22:09:24,594 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
10 Sep 2011 22:09:24,594 DEBUG ~ no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
10 Sep 2011 22:09:24,595 DEBUG ~ Import with entity name CourseInterest
10 Sep 2011 22:09:24,595 INFO  ~ Bind entity models.CourseInterest on table CourseInterest
10 Sep 2011 22:09:24,596 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CourseInterest), mappingColumn=id, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,596 DEBUG ~ binding property id with lazy=false
10 Sep 2011 22:09:24,597 DEBUG ~ building SimpleValue for id
10 Sep 2011 22:09:24,597 DEBUG ~ Building property id
10 Sep 2011 22:09:24,597 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CourseInterest), mappingColumn=courseName, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,597 DEBUG ~ binding property courseName with lazy=false
10 Sep 2011 22:09:24,597 DEBUG ~ building SimpleValue for courseName
10 Sep 2011 22:09:24,597 DEBUG ~ Building property courseName
10 Sep 2011 22:09:24,597 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CourseInterest), mappingColumn=email, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,597 DEBUG ~ binding property email with lazy=false
10 Sep 2011 22:09:24,597 DEBUG ~ building SimpleValue for email
10 Sep 2011 22:09:24,597 DEBUG ~ Building property email
10 Sep 2011 22:09:24,597 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CourseInterest), mappingColumn=participantName, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,597 DEBUG ~ binding property participantName with lazy=false
10 Sep 2011 22:09:24,597 DEBUG ~ building SimpleValue for participantName
10 Sep 2011 22:09:24,597 DEBUG ~ Building property participantName
10 Sep 2011 22:09:24,598 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CourseInterest), mappingColumn=telephoneNumber, insertable=true, updatable=true, unique=false}
10 Sep 2011 22:09:24,598 DEBUG ~ binding property telephoneNumber with lazy=false
10 Sep 2011 22:09:24,598 DEBUG ~ building SimpleValue for telephoneNumber
10 Sep 2011 22:09:24,598 DEBUG ~ Building property telephoneNumber
10 Sep 2011 22:09:24,598 DEBUG ~ Setting SimpleValue typeName for id
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for address
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for map
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for mapUrl
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for name
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for postal
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for telephoneNumber
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for url
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for id
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for id
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for event
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for location
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for name
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for url
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for id
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for description
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for name
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for url
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for id
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for email
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for fullName
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for isAdmin
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for password
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for id
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for bio
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for image
10 Sep 2011 22:09:24,599 DEBUG ~ Setting SimpleValue typeName for largeImage
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for name
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for resume
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for twitterId
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for website
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for id
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for description
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for earlyBird
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for earlyBirdEndDate
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for endDate
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for maxNumberOfParticipants
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for name
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for price
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for startDate
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for id
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for externalUrl
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for imageUrl
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for title
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for id
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for address
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for billed
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for company
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for email
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for name
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for orgNumber
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for paymentReceived
10 Sep 2011 22:09:24,600 DEBUG ~ Setting SimpleValue typeName for telephonenumber
10 Sep 2011 22:09:24,601 DEBUG ~ Setting SimpleValue typeName for id
10 Sep 2011 22:09:24,601 DEBUG ~ Setting SimpleValue typeName for courseName
10 Sep 2011 22:09:24,601 DEBUG ~ Setting SimpleValue typeName for email
10 Sep 2011 22:09:24,601 DEBUG ~ Setting SimpleValue typeName for participantName
10 Sep 2011 22:09:24,601 DEBUG ~ Setting SimpleValue typeName for telephoneNumber
10 Sep 2011 22:09:24,601 DEBUG ~ processing fk mappings (*ToOne and JoinedSubclass)
10 Sep 2011 22:09:24,606 DEBUG ~ processing extends queue
10 Sep 2011 22:09:24,606 DEBUG ~ processing extends queue
10 Sep 2011 22:09:24,606 DEBUG ~ processing collection mappings
10 Sep 2011 22:09:24,606 DEBUG ~ Second pass for collection: models.Instructor.presentations
10 Sep 2011 22:09:24,606 DEBUG ~ Binding a OneToMany: models.Instructor.presentations through an association table
10 Sep 2011 22:09:24,609 DEBUG ~ Mapped collection key: Instructor_id, element: presentations_id
10 Sep 2011 22:09:24,609 DEBUG ~ Second pass for collection: models.Instructor.books
10 Sep 2011 22:09:24,610 DEBUG ~ Binding a OneToMany: models.Instructor.books through an association table
10 Sep 2011 22:09:24,610 DEBUG ~ Mapped collection key: Instructor_id, element: books_id
10 Sep 2011 22:09:24,610 DEBUG ~ Second pass for collection: models.Location.courses
10 Sep 2011 22:09:24,610 DEBUG ~ Binding a OneToMany: models.Location.courses through a foreign key
10 Sep 2011 22:09:24,611 INFO  ~ Mapping collection: models.Location.courses -> Course
10 Sep 2011 22:09:24,611 DEBUG ~ Retrieving property models.Course.location
10 Sep 2011 22:09:24,611 DEBUG ~ Mapped collection key: location_id, one-to-many: models.Course
10 Sep 2011 22:09:24,611 DEBUG ~ Second pass for collection: models.Instructor.courses
10 Sep 2011 22:09:24,611 DEBUG ~ Binding a OneToMany: models.Instructor.courses through a foreign key
10 Sep 2011 22:09:24,611 INFO  ~ Mapping collection: models.Instructor.courses -> Course
10 Sep 2011 22:09:24,611 DEBUG ~ Retrieving property models.Course.instructor
10 Sep 2011 22:09:24,611 DEBUG ~ Mapped collection key: instructor_id, one-to-many: models.Course
10 Sep 2011 22:09:24,611 DEBUG ~ Second pass for collection: models.Course.participants
10 Sep 2011 22:09:24,611 DEBUG ~ Binding a OneToMany: models.Course.participants through a foreign key
10 Sep 2011 22:09:24,611 INFO  ~ Mapping collection: models.Course.participants -> Participant
10 Sep 2011 22:09:24,611 DEBUG ~ Retrieving property models.Participant.course
10 Sep 2011 22:09:24,612 DEBUG ~ Mapped collection key: course_id, one-to-many: models.Participant
10 Sep 2011 22:09:24,612 DEBUG ~ processing native query and ResultSetMapping mappings
10 Sep 2011 22:09:24,612 DEBUG ~ processing association property references
10 Sep 2011 22:09:24,612 DEBUG ~ processing foreign key constraints
10 Sep 2011 22:09:24,612 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:24,612 DEBUG ~ resolving reference to class: models.Location
10 Sep 2011 22:09:24,612 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:24,612 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:24,612 DEBUG ~ resolving reference to class: models.Book
10 Sep 2011 22:09:24,612 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:24,612 DEBUG ~ resolving reference to class: models.Presentation
10 Sep 2011 22:09:24,612 DEBUG ~ resolving reference to class: models.Course
10 Sep 2011 22:09:24,612 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:24,616 INFO  ~ Hibernate Validator not found: ignoring
10 Sep 2011 22:09:24,634 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.Course.
10 Sep 2011 22:09:24,637 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.Course.
10 Sep 2011 22:09:24,638 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.Course.
10 Sep 2011 22:09:24,640 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.Location.
10 Sep 2011 22:09:24,641 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.Location.
10 Sep 2011 22:09:24,642 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.Location.
10 Sep 2011 22:09:24,643 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.Evaluation.
10 Sep 2011 22:09:24,644 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.Evaluation.
10 Sep 2011 22:09:24,644 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.Evaluation.
10 Sep 2011 22:09:24,646 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.Participant.
10 Sep 2011 22:09:24,648 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.Participant.
10 Sep 2011 22:09:24,648 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.Participant.
10 Sep 2011 22:09:24,650 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.Book.
10 Sep 2011 22:09:24,651 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.Book.
10 Sep 2011 22:09:24,651 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.Book.
10 Sep 2011 22:09:24,652 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.User.
10 Sep 2011 22:09:24,654 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.User.
10 Sep 2011 22:09:24,654 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.User.
10 Sep 2011 22:09:24,655 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.Site.
10 Sep 2011 22:09:24,662 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.Site.
10 Sep 2011 22:09:24,663 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.Site.
10 Sep 2011 22:09:24,665 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.Instructor.
10 Sep 2011 22:09:24,668 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.Instructor.
10 Sep 2011 22:09:24,668 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.Instructor.
10 Sep 2011 22:09:24,674 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.CourseInterest.
10 Sep 2011 22:09:24,679 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.CourseInterest.
10 Sep 2011 22:09:24,679 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.CourseInterest.
10 Sep 2011 22:09:24,680 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.Presentation.
10 Sep 2011 22:09:24,681 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.Presentation.
10 Sep 2011 22:09:24,682 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.Presentation.
10 Sep 2011 22:09:24,687 DEBUG ~ No JNDI name configured for binding Ejb3Configuration
10 Sep 2011 22:09:24,691 DEBUG ~ Preparing to build session factory with filters : {}
10 Sep 2011 22:09:24,691 DEBUG ~ Processing hbm.xml files
10 Sep 2011 22:09:24,691 DEBUG ~ Process annotated classes
10 Sep 2011 22:09:24,691 DEBUG ~ processing fk mappings (*ToOne and JoinedSubclass)
10 Sep 2011 22:09:24,691 DEBUG ~ processing extends queue
10 Sep 2011 22:09:24,691 DEBUG ~ processing extends queue
10 Sep 2011 22:09:24,691 DEBUG ~ processing collection mappings
10 Sep 2011 22:09:24,691 DEBUG ~ processing native query and ResultSetMapping mappings
10 Sep 2011 22:09:24,691 DEBUG ~ processing association property references
10 Sep 2011 22:09:24,691 DEBUG ~ processing foreign key constraints
10 Sep 2011 22:09:24,691 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:24,691 DEBUG ~ resolving reference to class: models.Location
10 Sep 2011 22:09:24,691 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:24,691 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:24,691 DEBUG ~ resolving reference to class: models.Book
10 Sep 2011 22:09:24,691 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:24,691 DEBUG ~ resolving reference to class: models.Presentation
10 Sep 2011 22:09:24,691 DEBUG ~ resolving reference to class: models.Course
10 Sep 2011 22:09:24,691 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:24,693 DEBUG ~ Legacy Validator not present in classpath, ignoring event listener registration
10 Sep 2011 22:09:24,695 DEBUG ~ Search not present in classpath, ignoring event listener registration.
10 Sep 2011 22:09:24,695 INFO  ~ Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
10 Sep 2011 22:09:24,702 INFO  ~ Initializing connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
10 Sep 2011 22:09:24,705 INFO  ~ Using provided datasource
10 Sep 2011 22:09:24,712 INFO  ~ Database ->
       name : H2
    version : 1.3.149 (2011-01-07)
      major : 1
      minor : 3
10 Sep 2011 22:09:24,713 INFO  ~ Driver ->
       name : H2 JDBC Driver
    version : 1.3.149 (2011-01-07)
      major : 1
      minor : 3
10 Sep 2011 22:09:24,734 INFO  ~ Using dialect: org.hibernate.dialect.H2Dialect
10 Sep 2011 22:09:24,743 INFO  ~ Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
10 Sep 2011 22:09:24,744 INFO  ~ Transaction strategy: org.hibernate.transaction.JDBCTransactionFactory
10 Sep 2011 22:09:24,746 INFO  ~ No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
10 Sep 2011 22:09:24,746 INFO  ~ Automatic flush during beforeCompletion(): disabled
10 Sep 2011 22:09:24,746 INFO  ~ Automatic session close at end of transaction: disabled
10 Sep 2011 22:09:24,746 INFO  ~ JDBC batch size: 15
10 Sep 2011 22:09:24,746 INFO  ~ JDBC batch updates for versioned data: disabled
10 Sep 2011 22:09:24,746 INFO  ~ Scrollable result sets: enabled
10 Sep 2011 22:09:24,747 DEBUG ~ Wrap result sets: disabled
10 Sep 2011 22:09:24,747 INFO  ~ JDBC3 getGeneratedKeys(): enabled
10 Sep 2011 22:09:24,747 INFO  ~ Connection release mode: auto
10 Sep 2011 22:09:24,747 INFO  ~ Default batch fetch size: 1
10 Sep 2011 22:09:24,747 INFO  ~ Generate SQL with comments: disabled
10 Sep 2011 22:09:24,747 INFO  ~ Order SQL updates by primary key: disabled
10 Sep 2011 22:09:24,747 INFO  ~ Order SQL inserts for batching: disabled
10 Sep 2011 22:09:24,747 INFO  ~ Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
10 Sep 2011 22:09:24,749 INFO  ~ Using ASTQueryTranslatorFactory
10 Sep 2011 22:09:24,749 INFO  ~ Query language substitutions: {}
10 Sep 2011 22:09:24,749 INFO  ~ JPA-QL strict compliance: enabled
10 Sep 2011 22:09:24,749 INFO  ~ Second-level cache: enabled
10 Sep 2011 22:09:24,749 INFO  ~ Query cache: disabled
10 Sep 2011 22:09:24,749 INFO  ~ Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
10 Sep 2011 22:09:24,750 INFO  ~ Optimize cache for minimal puts: disabled
10 Sep 2011 22:09:24,752 INFO  ~ Structured second-level cache entries: disabled
10 Sep 2011 22:09:24,757 INFO  ~ Statistics: disabled
10 Sep 2011 22:09:24,757 INFO  ~ Deleted entity synthetic identifier rollback: disabled
10 Sep 2011 22:09:24,757 INFO  ~ Default entity-mode: pojo
10 Sep 2011 22:09:24,757 INFO  ~ Named query checking : enabled
10 Sep 2011 22:09:24,757 INFO  ~ Check Nullability in Core (should be disabled when Bean Validation is on): enabled
10 Sep 2011 22:09:24,771 INFO  ~ building session factory
10 Sep 2011 22:09:24,776 DEBUG ~ Statistics initialized [enabled=false]}
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@1d286180
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@1d286180
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1d286180
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@653cca0e
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e677ea2
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration yes_no -> org.hibernate.type.YesNoType@38093b59
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@ee67c12
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@ee67c12
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@ee67c12
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration character -> org.hibernate.type.CharacterType@631e1aa5
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration char -> org.hibernate.type.CharacterType@631e1aa5
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@631e1aa5
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@73b8cdd5
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@73b8cdd5
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73b8cdd5
10 Sep 2011 22:09:24,777 DEBUG ~ Adding type registration integer -> org.hibernate.type.IntegerType@1667e92a
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration int -> org.hibernate.type.IntegerType@1667e92a
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1667e92a
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@68111f9b
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@68111f9b
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration java.lang.Long -> org.hibernate.type.LongType@68111f9b
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@3a1af2bc
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@3a1af2bc
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3a1af2bc
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@21c8dfe6
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@21c8dfe6
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@21c8dfe6
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1af2f973
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1af2f973
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration big_integer -> org.hibernate.type.BigIntegerType@39126d91
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@39126d91
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration string -> org.hibernate.type.StringType@42d73fb7
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration java.lang.String -> org.hibernate.type.StringType@42d73fb7
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration url -> org.hibernate.type.UrlType@417d7c01
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration java.net.URL -> org.hibernate.type.UrlType@417d7c01
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration date -> org.hibernate.type.DateType@650b5efb
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration java.sql.Date -> org.hibernate.type.DateType@650b5efb
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration time -> org.hibernate.type.TimeType@51ef4970
10 Sep 2011 22:09:24,778 DEBUG ~ Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51ef4970
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration timestamp -> org.hibernate.type.TimestampType@6facdcb9
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6facdcb9
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6facdcb9
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d14382d
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration calendar -> org.hibernate.type.CalendarType@4726cdd1
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4726cdd1
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4726cdd1
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@18571615
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration locale -> org.hibernate.type.LocaleType@77fef1a0
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77fef1a0
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration currency -> org.hibernate.type.CurrencyType@2dbe1f3e
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2dbe1f3e
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration timezone -> org.hibernate.type.TimeZoneType@2e1df471
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2e1df471
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration class -> org.hibernate.type.ClassType@3b25bbd3
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b25bbd3
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3bd29ee4
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3bd29ee4
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7a79ae56
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@25203875
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration binary -> org.hibernate.type.BinaryType@58e4d7f7
10 Sep 2011 22:09:24,779 DEBUG ~ Adding type registration byte[] -> org.hibernate.type.BinaryType@58e4d7f7
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration [B -> org.hibernate.type.BinaryType@58e4d7f7
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c3a5635
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c3a5635
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c3a5635
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration image -> org.hibernate.type.ImageType@4e877a44
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration characters -> org.hibernate.type.CharArrayType@5a0d2bee
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration char[] -> org.hibernate.type.CharArrayType@5a0d2bee
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration [C -> org.hibernate.type.CharArrayType@5a0d2bee
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@759f6a57
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@759f6a57
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@759f6a57
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration text -> org.hibernate.type.TextType@65499154
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration blob -> org.hibernate.type.BlobType@6597d63b
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6597d63b
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3294e4f4
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@3aae43b8
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration clob -> org.hibernate.type.ClobType@4679cf8c
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4679cf8c
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27077aa7
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@69dc8f2
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@8bfc25c
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration serializable -> org.hibernate.type.SerializableType@2d95bbec
10 Sep 2011 22:09:24,780 DEBUG ~ Adding type registration object -> org.hibernate.type.ObjectType@30c028cc
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30c028cc
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30084a74
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@70501e4e
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1bf5cc7d
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@264430e2
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@46e5590e
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7b39ca7e
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f1d5566
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ed1a34a
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@3e661a11
10 Sep 2011 22:09:24,781 INFO  ~ Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@69dc8f2
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@21397218
10 Sep 2011 22:09:24,781 INFO  ~ Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@8bfc25c
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5213d99c
10 Sep 2011 22:09:24,781 INFO  ~ Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@3294e4f4
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3590efa8
10 Sep 2011 22:09:24,781 INFO  ~ Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@27077aa7
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration clob -> org.hibernate.type.ClobType@77310e0a
10 Sep 2011 22:09:24,781 INFO  ~ Type registration [clob] overrides previous : org.hibernate.type.ClobType@4679cf8c
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77310e0a
10 Sep 2011 22:09:24,781 INFO  ~ Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@4679cf8c
10 Sep 2011 22:09:24,781 DEBUG ~ Adding type registration blob -> org.hibernate.type.BlobType@120df416
10 Sep 2011 22:09:24,782 INFO  ~ Type registration [blob] overrides previous : org.hibernate.type.BlobType@6597d63b
10 Sep 2011 22:09:24,782 DEBUG ~ Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@120df416
10 Sep 2011 22:09:24,782 INFO  ~ Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@6597d63b
10 Sep 2011 22:09:24,782 DEBUG ~ Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1533badd
10 Sep 2011 22:09:24,782 INFO  ~ Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@3aae43b8
10 Sep 2011 22:09:24,784 DEBUG ~ Session factory constructed with filter configurations : {}
10 Sep 2011 22:09:24,784 DEBUG ~ instantiating session factory with properties: {java.vendor=Apple Inc., sun.java.launcher=SUN_STANDARD, application.path=/Users/ketiljensen/dev/play/CourseBooking, sun.management.compiler=HotSpot 64-Bit Server Compiler, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Mac OS X, sun.boot.class.path=/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsfd.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Frameworks/JavaVM.framework/Frameworks/JavaRuntimeSupport.framework/Resources/Java/JavaRuntimeSupport.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/laf.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/sunrsasign.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_24-b07-334-10M3326, hibernate.connection.autocommit=true, user.name=ketiljensen, com.mchange.v2.log.MLog=com.mchange.v2.log.FallbackMLog, awt.nativeDoubleBuffering=true, hibernate.connection.release_mode=auto, user.language=en, sun.boot.library.path=/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Libraries, java.version=1.6.0_24, user.timezone=Europe/Oslo, sun.arch.data.model=64, com.mchange.v2.log.FallbackMLog.DEFAULT_CUTOFF_LEVEL=OFF, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.endorsed.dirs=/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=MacRoman, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=US, java.home=/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home, java.vm.info=mixed mode, os.version=10.6.7, hibernate.transaction.factory_class=org.hibernate.transaction.JDBCTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=19.1-b02-334, java.awt.printerjob=apple.awt.CPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=apple.awt.CToolkit, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, user.home=/Users/ketiljensen, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create-drop, java.library.path=.:/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, java.vendor.url=http://www.apple.com/, java.vm.vendor=Apple Inc., gopherProxySet=false, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=/Users/ketiljensen/dev/play/CourseBooking/conf:/Users/ketiljensen/tools/play/framework/play-1.2.3.jar:/Users/ketiljensen/tools/play/modules/testrunner/lib/play-testrunner.jar:/Users/ketiljensen/dev/play/CourseBooking/modules/playapps-1.4/lib/play-playapps.jar:/Users/ketiljensen/tools/play/framework/lib/activation-1.1.1.jar:/Users/ketiljensen/tools/play/framework/lib/antlr-2.7.6.jar:/Users/ketiljensen/tools/play/framework/lib/asm-all-3.3.1.jar:/Users/ketiljensen/tools/play/framework/lib/async-http-client-1.6.3.jar:/Users/ketiljensen/tools/play/framework/lib/bcprov-jdk15-1.45.jar:/Users/ketiljensen/tools/play/framework/lib/c3p0-0.9.1.2.jar:/Users/ketiljensen/tools/play/framework/lib/cglib-nodep-2.2.jar:/Users/ketiljensen/tools/play/framework/lib/commons-beanutils-1.8.3.jar:/Users/ketiljensen/tools/play/framework/lib/commons-codec-1.4.jar:/Users/ketiljensen/tools/play/framework/lib/commons-collections-3.2.1.jar:/Users/ketiljensen/tools/play/framework/lib/commons-email-1.2.jar:/Users/ketiljensen/tools/play/framework/lib/commons-fileupload-1.2.2.jar:/Users/ketiljensen/tools/play/framework/lib/commons-io-2.0.1.jar:/Users/ketiljensen/tools/play/framework/lib/commons-javaflow-1066591.jar:/Users/ketiljensen/tools/play/framework/lib/commons-lang-2.6.jar:/Users/ketiljensen/tools/play/framework/lib/commons-logging-1.1.1.jar:/Users/ketiljensen/tools/play/framework/lib/dom4j-1.6.1.jar:/Users/ketiljensen/tools/play/framework/lib/ehcache-core-2.0.0.jar:/Users/ketiljensen/tools/play/framework/lib/ezmorph-1.0.3.jar:/Users/ketiljensen/tools/play/framework/lib/geronimo-servlet_2.5_spec-1.2.jar:/Users/ketiljensen/tools/play/framework/lib/groovy-all-1.7.7.jar:/Users/ketiljensen/tools/play/framework/lib/gson-1.7.1.jar:/Users/ketiljensen/tools/play/framework/lib/h2-1.3.149.jar:/Users/ketiljensen/tools/play/framework/lib/hibernate-commons-annotations-3.2.0.Final.jar:/Users/ketiljensen/tools/play/framework/lib/hibernate-core-3.6.1.Final.jar:/Users/ketiljensen/tools/play/framework/lib/hibernate-entitymanager-3.6.0.Final.jar:/Users/ketiljensen/tools/play/framework/lib/hibernate-jpa-2.0-api-1.0.0.Final.jar:/Users/ketiljensen/tools/play/framework/lib/ivy-2.2.0.jar:/Users/ketiljensen/tools/play/framework/lib/jamon-2.7.jar:/Users/ketiljensen/tools/play/framework/lib/javassist-3.9.0.GA.jar:/Users/ketiljensen/tools/play/framework/lib/javax.inject-1.0.jar:/Users/ketiljensen/tools/play/framework/lib/jaxen-1.1.jar:/Users/ketiljensen/tools/play/framework/lib/jj-imaging.jar:/Users/ketiljensen/tools/play/framework/lib/jj-simplecaptcha.jar:/Users/ketiljensen/tools/play/framework/lib/jj-textile.jar:/Users/ketiljensen/tools/play/framework/lib/jj-wikitext.jar:/Users/ketiljensen/tools/play/framework/lib/joda-time-1.6.jar:/Users/ketiljensen/tools/play/framework/lib/jregex-1.2_01.jar:/Users/ketiljensen/tools/play/framework/lib/jsr107cache-1.0.jar:/Users/ketiljensen/tools/play/framework/lib/jta-1.1.jar:/Users/ketiljensen/tools/play/framework/lib/junit-4.8.1.jar:/Users/ketiljensen/tools/play/framework/lib/log4j-1.2.15.jar:/Users/ketiljensen/tools/play/framework/lib/mail-1.4.3.jar:/Users/ketiljensen/tools/play/framework/lib/memcached-2.6.jar:/Users/ketiljensen/tools/play/framework/lib/mysql-connector-java-5.1.13.jar:/Users/ketiljensen/tools/play/framework/lib/netty-3.2.4.Final.jar:/Users/ketiljensen/tools/play/framework/lib/org.eclipse.jdt.core-3.6.0.jar:/Users/ketiljensen/tools/play/framework/lib/oval-1.50.jar:/Users/ketiljensen/tools/play/framework/lib/postgresql-9.0.jar:/Users/ketiljensen/tools/play/framework/lib/signpost-core-1.2.jar:/Users/ketiljensen/tools/play/framework/lib/slf4j-api-1.6.1.jar:/Users/ketiljensen/tools/play/framework/lib/slf4j-log4j12-1.6.1.jar:/Users/ketiljensen/tools/play/framework/lib/snakeyaml-1.7.jar:/Users/ketiljensen/tools/play/framework/lib/xstream-1.3.jar:/Users/ketiljensen/tools/play/framework/play-1.2.3.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, java.io.tmpdir=/var/folders/xI/xIH3ZtbiG-Kq8Nf62iu0R++++TI/-Tmp-/, java.vendor.url.bug=http://bugreport.apple.com/, play.id=test, mrj.build=10M3326, os.arch=x86_64, java.awt.graphicsenv=apple.awt.CGraphicsEnvironment, java.ext.dirs=/Library/Java/Extensions:/System/Library/Java/Extensions:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext, mrj.version=1060.1.6.0_24-334, user.dir=/Users/ketiljensen/dev/play/CourseBooking, javax.persistence.transaction=RESOURCE_LOCAL, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, play.debug=yes, file.encoding=utf-8, hibernate.use_identifier_rollback=false, java.specification.version=1.6}
10 Sep 2011 22:09:24,802 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:24,803 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:24,803 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:24,803 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:24,803 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:24,803 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:24,803 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:24,803 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:24,803 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:24,803 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:24,901 DEBUG ~ Static SQL for entity: models.Course
10 Sep 2011 22:09:24,901 DEBUG ~  Version select: select id from Course where id =?
10 Sep 2011 22:09:24,901 DEBUG ~  Snapshot select: select course_.id, course_.description as descript2_6_, course_.earlyBird as earlyBird6_, course_.earlyBirdEndDate as earlyBir4_6_, course_.endDate as endDate6_, course_.instructor_id as instructor10_6_, course_.location_id as location11_6_, course_.maxNumberOfParticipants as maxNumbe6_6_, course_.name as name6_, course_.price as price6_, course_.startDate as startDate6_ from Course course_ where course_.id=?
10 Sep 2011 22:09:24,901 DEBUG ~  Insert 0: insert into Course (description, earlyBird, earlyBirdEndDate, endDate, instructor_id, location_id, maxNumberOfParticipants, name, price, startDate, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10 Sep 2011 22:09:24,901 DEBUG ~  Update 0: update Course set description=?, earlyBird=?, earlyBirdEndDate=?, endDate=?, instructor_id=?, location_id=?, maxNumberOfParticipants=?, name=?, price=?, startDate=? where id=?
10 Sep 2011 22:09:24,902 DEBUG ~  Delete 0: delete from Course where id=?
10 Sep 2011 22:09:24,902 DEBUG ~  Identity insert: insert into Course (id, description, earlyBird, earlyBirdEndDate, endDate, instructor_id, location_id, maxNumberOfParticipants, name, price, startDate) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10 Sep 2011 22:09:24,917 DEBUG ~ Static SQL for entity: models.Location
10 Sep 2011 22:09:24,917 DEBUG ~  Version select: select id from Location where id =?
10 Sep 2011 22:09:24,917 DEBUG ~  Snapshot select: select location_.id, location_.address as address0_, location_.map as map0_, location_.mapUrl as mapUrl0_, location_.name as name0_, location_.postal as postal0_, location_.telephoneNumber as telephon7_0_, location_.url as url0_ from Location location_ where location_.id=?
10 Sep 2011 22:09:24,917 DEBUG ~  Insert 0: insert into Location (address, map, mapUrl, name, postal, telephoneNumber, url, id) values (?, ?, ?, ?, ?, ?, ?, ?)
10 Sep 2011 22:09:24,917 DEBUG ~  Update 0: update Location set address=?, map=?, mapUrl=?, name=?, postal=?, telephoneNumber=?, url=? where id=?
10 Sep 2011 22:09:24,917 DEBUG ~  Delete 0: delete from Location where id=?
10 Sep 2011 22:09:24,917 DEBUG ~  Identity insert: insert into Location (id, address, map, mapUrl, name, postal, telephoneNumber, url) values (null, ?, ?, ?, ?, ?, ?, ?)
10 Sep 2011 22:09:24,922 DEBUG ~ Static SQL for entity: models.Evaluation
10 Sep 2011 22:09:24,922 DEBUG ~  Version select: select id from Evaluation where id =?
10 Sep 2011 22:09:24,922 DEBUG ~  Snapshot select: select evaluation_.id from Evaluation evaluation_ where evaluation_.id=?
10 Sep 2011 22:09:24,922 DEBUG ~  Insert 0: insert into Evaluation (id) values (?)
10 Sep 2011 22:09:24,922 DEBUG ~  Update 0: null
10 Sep 2011 22:09:24,922 DEBUG ~  Delete 0: delete from Evaluation where id=?
10 Sep 2011 22:09:24,922 DEBUG ~  Identity insert: insert into Evaluation (id) values (null)
10 Sep 2011 22:09:24,940 DEBUG ~ Static SQL for entity: models.Participant
10 Sep 2011 22:09:24,940 DEBUG ~  Version select: select id from Participant where id =?
10 Sep 2011 22:09:24,940 DEBUG ~  Snapshot select: select participan_.id, participan_.address as address8_, participan_.billed as billed8_, participan_.company as company8_, participan_.course_id as course10_8_, participan_.email as email8_, participan_.name as name8_, participan_.orgNumber as orgNumber8_, participan_.paymentReceived as paymentR8_8_, participan_.telephonenumber as telephon9_8_ from Participant participan_ where participan_.id=?
10 Sep 2011 22:09:24,940 DEBUG ~  Insert 0: insert into Participant (address, billed, company, course_id, email, name, orgNumber, paymentReceived, telephonenumber, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10 Sep 2011 22:09:24,940 DEBUG ~  Update 0: update Participant set address=?, billed=?, company=?, course_id=?, email=?, name=?, orgNumber=?, paymentReceived=?, telephonenumber=? where id=?
10 Sep 2011 22:09:24,940 DEBUG ~  Delete 0: delete from Participant where id=?
10 Sep 2011 22:09:24,940 DEBUG ~  Identity insert: insert into Participant (id, address, billed, company, course_id, email, name, orgNumber, paymentReceived, telephonenumber) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10 Sep 2011 22:09:24,957 DEBUG ~ Static SQL for entity: models.Book
10 Sep 2011 22:09:24,957 DEBUG ~  Version select: select id from Book where id =?
10 Sep 2011 22:09:24,957 DEBUG ~  Snapshot select: select book_.id, book_.author_id as author5_7_, book_.externalUrl as external2_7_, book_.imageUrl as imageUrl7_, book_.title as title7_ from Book book_ where book_.id=?
10 Sep 2011 22:09:24,957 DEBUG ~  Insert 0: insert into Book (author_id, externalUrl, imageUrl, title, id) values (?, ?, ?, ?, ?)
10 Sep 2011 22:09:24,957 DEBUG ~  Update 0: update Book set author_id=?, externalUrl=?, imageUrl=?, title=? where id=?
10 Sep 2011 22:09:24,957 DEBUG ~  Delete 0: delete from Book where id=?
10 Sep 2011 22:09:24,957 DEBUG ~  Identity insert: insert into Book (id, author_id, externalUrl, imageUrl, title) values (null, ?, ?, ?, ?)
10 Sep 2011 22:09:24,974 DEBUG ~ Static SQL for entity: models.User
10 Sep 2011 22:09:24,974 DEBUG ~  Version select: select id from User where id =?
10 Sep 2011 22:09:24,974 DEBUG ~  Snapshot select: select user_.id, user_.email as email4_, user_.fullName as fullName4_, user_.isAdmin as isAdmin4_, user_.password as password4_ from User user_ where user_.id=?
10 Sep 2011 22:09:24,974 DEBUG ~  Insert 0: insert into User (email, fullName, isAdmin, password, id) values (?, ?, ?, ?, ?)
10 Sep 2011 22:09:24,975 DEBUG ~  Update 0: update User set email=?, fullName=?, isAdmin=?, password=? where id=?
10 Sep 2011 22:09:24,975 DEBUG ~  Delete 0: delete from User where id=?
10 Sep 2011 22:09:24,975 DEBUG ~  Identity insert: insert into User (id, email, fullName, isAdmin, password) values (null, ?, ?, ?, ?)
10 Sep 2011 22:09:24,980 DEBUG ~ Static SQL for entity: models.Site
10 Sep 2011 22:09:24,980 DEBUG ~  Version select: select id from Site where id =?
10 Sep 2011 22:09:24,980 DEBUG ~  Snapshot select: select site_.id, site_.description as descript2_3_, site_.name as name3_, site_.url as url3_ from Site site_ where site_.id=?
10 Sep 2011 22:09:24,980 DEBUG ~  Insert 0: insert into Site (description, name, url, id) values (?, ?, ?, ?)
10 Sep 2011 22:09:24,980 DEBUG ~  Update 0: update Site set description=?, name=?, url=? where id=?
10 Sep 2011 22:09:24,980 DEBUG ~  Delete 0: delete from Site where id=?
10 Sep 2011 22:09:24,980 DEBUG ~  Identity insert: insert into Site (id, description, name, url) values (null, ?, ?, ?)
10 Sep 2011 22:09:24,992 DEBUG ~ Static SQL for entity: models.Instructor
10 Sep 2011 22:09:24,992 DEBUG ~  Version select: select id from Instructor where id =?
10 Sep 2011 22:09:24,992 DEBUG ~  Snapshot select: select instructor_.id, instructor_.bio as bio5_, instructor_.image as image5_, instructor_.largeImage as largeImage5_, instructor_.name as name5_, instructor_.resume as resume5_, instructor_.twitterId as twitterId5_, instructor_.website as website5_ from Instructor instructor_ where instructor_.id=?
10 Sep 2011 22:09:24,992 DEBUG ~  Insert 0: insert into Instructor (bio, image, largeImage, name, resume, twitterId, website, id) values (?, ?, ?, ?, ?, ?, ?, ?)
10 Sep 2011 22:09:24,992 DEBUG ~  Update 0: update Instructor set bio=?, image=?, largeImage=?, name=?, resume=?, twitterId=?, website=? where id=?
10 Sep 2011 22:09:24,992 DEBUG ~  Delete 0: delete from Instructor where id=?
10 Sep 2011 22:09:24,992 DEBUG ~  Identity insert: insert into Instructor (id, bio, image, largeImage, name, resume, twitterId, website) values (null, ?, ?, ?, ?, ?, ?, ?)
10 Sep 2011 22:09:24,998 DEBUG ~ Static SQL for entity: models.CourseInterest
10 Sep 2011 22:09:24,998 DEBUG ~  Version select: select id from CourseInterest where id =?
10 Sep 2011 22:09:24,998 DEBUG ~  Snapshot select: select courseinte_.id, courseinte_.courseName as courseName9_, courseinte_.email as email9_, courseinte_.participantName as particip4_9_, courseinte_.telephoneNumber as telephon5_9_ from CourseInterest courseinte_ where courseinte_.id=?
10 Sep 2011 22:09:24,998 DEBUG ~  Insert 0: insert into CourseInterest (courseName, email, participantName, telephoneNumber, id) values (?, ?, ?, ?, ?)
10 Sep 2011 22:09:24,998 DEBUG ~  Update 0: update CourseInterest set courseName=?, email=?, participantName=?, telephoneNumber=? where id=?
10 Sep 2011 22:09:24,998 DEBUG ~  Delete 0: delete from CourseInterest where id=?
10 Sep 2011 22:09:24,998 DEBUG ~  Identity insert: insert into CourseInterest (id, courseName, email, participantName, telephoneNumber) values (null, ?, ?, ?, ?)
10 Sep 2011 22:09:25,004 DEBUG ~ Static SQL for entity: models.Presentation
10 Sep 2011 22:09:25,004 DEBUG ~  Version select: select id from Presentation where id =?
10 Sep 2011 22:09:25,004 DEBUG ~  Snapshot select: select presentati_.id, presentati_.event as event2_, presentati_.location as location2_, presentati_.name as name2_, presentati_.presenter_id as presenter6_2_, presentati_.url as url2_ from Presentation presentati_ where presentati_.id=?
10 Sep 2011 22:09:25,004 DEBUG ~  Insert 0: insert into Presentation (event, location, name, presenter_id, url, id) values (?, ?, ?, ?, ?, ?)
10 Sep 2011 22:09:25,004 DEBUG ~  Update 0: update Presentation set event=?, location=?, name=?, presenter_id=?, url=? where id=?
10 Sep 2011 22:09:25,004 DEBUG ~  Delete 0: delete from Presentation where id=?
10 Sep 2011 22:09:25,004 DEBUG ~  Identity insert: insert into Presentation (id, event, location, name, presenter_id, url) values (null, ?, ?, ?, ?, ?)
10 Sep 2011 22:09:25,011 DEBUG ~ Static SQL for collection: models.Instructor.presentations
10 Sep 2011 22:09:25,011 DEBUG ~  Row insert: insert into Instructor_Presentation (Instructor_id, presentations_id) values (?, ?)
10 Sep 2011 22:09:25,012 DEBUG ~  Row update: update Instructor_Presentation set presentations_id=? where Instructor_id=? and presentations_id=?
10 Sep 2011 22:09:25,012 DEBUG ~  Row delete: delete from Instructor_Presentation where Instructor_id=? and presentations_id=?
10 Sep 2011 22:09:25,012 DEBUG ~  One-shot delete: delete from Instructor_Presentation where Instructor_id=?
10 Sep 2011 22:09:25,012 DEBUG ~ Static SQL for collection: models.Instructor.books
10 Sep 2011 22:09:25,012 DEBUG ~  Row insert: insert into Instructor_Book (Instructor_id, books_id) values (?, ?)
10 Sep 2011 22:09:25,012 DEBUG ~  Row update: update Instructor_Book set books_id=? where Instructor_id=? and books_id=?
10 Sep 2011 22:09:25,012 DEBUG ~  Row delete: delete from Instructor_Book where Instructor_id=? and books_id=?
10 Sep 2011 22:09:25,012 DEBUG ~  One-shot delete: delete from Instructor_Book where Instructor_id=?
10 Sep 2011 22:09:25,013 DEBUG ~ Static SQL for collection: models.Course.participants
10 Sep 2011 22:09:25,013 DEBUG ~  Row insert: update Participant set course_id=? where id=?
10 Sep 2011 22:09:25,013 DEBUG ~  Row delete: update Participant set course_id=null where course_id=? and id=?
10 Sep 2011 22:09:25,013 DEBUG ~  One-shot delete: update Participant set course_id=null where course_id=?
10 Sep 2011 22:09:25,014 DEBUG ~ Static SQL for collection: models.Instructor.courses
10 Sep 2011 22:09:25,014 DEBUG ~  Row insert: update Course set instructor_id=? where id=?
10 Sep 2011 22:09:25,014 DEBUG ~  Row delete: update Course set instructor_id=null where instructor_id=? and id=?
10 Sep 2011 22:09:25,014 DEBUG ~  One-shot delete: update Course set instructor_id=null where instructor_id=?
10 Sep 2011 22:09:25,014 DEBUG ~ Static SQL for collection: models.Location.courses
10 Sep 2011 22:09:25,014 DEBUG ~  Row insert: update Course set location_id=? where id=?
10 Sep 2011 22:09:25,014 DEBUG ~  Row delete: update Course set location_id=null where location_id=? and id=?
10 Sep 2011 22:09:25,014 DEBUG ~  One-shot delete: update Course set location_id=null where location_id=?
10 Sep 2011 22:09:25,036 DEBUG ~ Static select for entity models.Course [NONE]: select course0_.id as id6_2_, course0_.description as descript2_6_2_, course0_.earlyBird as earlyBird6_2_, course0_.earlyBirdEndDate as earlyBir4_6_2_, course0_.endDate as endDate6_2_, course0_.instructor_id as instructor10_6_2_, course0_.location_id as location11_6_2_, course0_.maxNumberOfParticipants as maxNumbe6_6_2_, course0_.name as name6_2_, course0_.price as price6_2_, course0_.startDate as startDate6_2_, instructor1_.id as id5_0_, instructor1_.bio as bio5_0_, instructor1_.image as image5_0_, instructor1_.largeImage as largeImage5_0_, instructor1_.name as name5_0_, instructor1_.resume as resume5_0_, instructor1_.twitterId as twitterId5_0_, instructor1_.website as website5_0_, location2_.id as id0_1_, location2_.address as address0_1_, location2_.map as map0_1_, location2_.mapUrl as mapUrl0_1_, location2_.name as name0_1_, location2_.postal as postal0_1_, location2_.telephoneNumber as telephon7_0_1_, location2_.url as url0_1_ from Course course0_ left outer join Instructor instructor1_ on course0_.instructor_id=instructor1_.id left outer join Location location2_ on course0_.location_id=location2_.id where course0_.id=?
10 Sep 2011 22:09:25,037 DEBUG ~ Static select for entity models.Course [READ]: select course0_.id as id6_2_, course0_.description as descript2_6_2_, course0_.earlyBird as earlyBird6_2_, course0_.earlyBirdEndDate as earlyBir4_6_2_, course0_.endDate as endDate6_2_, course0_.instructor_id as instructor10_6_2_, course0_.location_id as location11_6_2_, course0_.maxNumberOfParticipants as maxNumbe6_6_2_, course0_.name as name6_2_, course0_.price as price6_2_, course0_.startDate as startDate6_2_, instructor1_.id as id5_0_, instructor1_.bio as bio5_0_, instructor1_.image as image5_0_, instructor1_.largeImage as largeImage5_0_, instructor1_.name as name5_0_, instructor1_.resume as resume5_0_, instructor1_.twitterId as twitterId5_0_, instructor1_.website as website5_0_, location2_.id as id0_1_, location2_.address as address0_1_, location2_.map as map0_1_, location2_.mapUrl as mapUrl0_1_, location2_.name as name0_1_, location2_.postal as postal0_1_, location2_.telephoneNumber as telephon7_0_1_, location2_.url as url0_1_ from Course course0_ left outer join Instructor instructor1_ on course0_.instructor_id=instructor1_.id left outer join Location location2_ on course0_.location_id=location2_.id where course0_.id=?
10 Sep 2011 22:09:25,037 DEBUG ~ Static select for entity models.Course [UPGRADE]: select course0_.id as id6_0_, course0_.description as descript2_6_0_, course0_.earlyBird as earlyBird6_0_, course0_.earlyBirdEndDate as earlyBir4_6_0_, course0_.endDate as endDate6_0_, course0_.instructor_id as instructor10_6_0_, course0_.location_id as location11_6_0_, course0_.maxNumberOfParticipants as maxNumbe6_6_0_, course0_.name as name6_0_, course0_.price as price6_0_, course0_.startDate as startDate6_0_ from Course course0_ where course0_.id=? for update
10 Sep 2011 22:09:25,037 DEBUG ~ Static select for entity models.Course [UPGRADE_NOWAIT]: select course0_.id as id6_0_, course0_.description as descript2_6_0_, course0_.earlyBird as earlyBird6_0_, course0_.earlyBirdEndDate as earlyBir4_6_0_, course0_.endDate as endDate6_0_, course0_.instructor_id as instructor10_6_0_, course0_.location_id as location11_6_0_, course0_.maxNumberOfParticipants as maxNumbe6_6_0_, course0_.name as name6_0_, course0_.price as price6_0_, course0_.startDate as startDate6_0_ from Course course0_ where course0_.id=? for update
10 Sep 2011 22:09:25,038 DEBUG ~ Static select for entity models.Course [FORCE]: select course0_.id as id6_0_, course0_.description as descript2_6_0_, course0_.earlyBird as earlyBird6_0_, course0_.earlyBirdEndDate as earlyBir4_6_0_, course0_.endDate as endDate6_0_, course0_.instructor_id as instructor10_6_0_, course0_.location_id as location11_6_0_, course0_.maxNumberOfParticipants as maxNumbe6_6_0_, course0_.name as name6_0_, course0_.price as price6_0_, course0_.startDate as startDate6_0_ from Course course0_ where course0_.id=? for update
10 Sep 2011 22:09:25,038 DEBUG ~ Static select for entity models.Course [PESSIMISTIC_READ]: select course0_.id as id6_0_, course0_.description as descript2_6_0_, course0_.earlyBird as earlyBird6_0_, course0_.earlyBirdEndDate as earlyBir4_6_0_, course0_.endDate as endDate6_0_, course0_.instructor_id as instructor10_6_0_, course0_.location_id as location11_6_0_, course0_.maxNumberOfParticipants as maxNumbe6_6_0_, course0_.name as name6_0_, course0_.price as price6_0_, course0_.startDate as startDate6_0_ from Course course0_ where course0_.id=? for update
10 Sep 2011 22:09:25,038 DEBUG ~ Static select for entity models.Course [PESSIMISTIC_WRITE]: select course0_.id as id6_0_, course0_.description as descript2_6_0_, course0_.earlyBird as earlyBird6_0_, course0_.earlyBirdEndDate as earlyBir4_6_0_, course0_.endDate as endDate6_0_, course0_.instructor_id as instructor10_6_0_, course0_.location_id as location11_6_0_, course0_.maxNumberOfParticipants as maxNumbe6_6_0_, course0_.name as name6_0_, course0_.price as price6_0_, course0_.startDate as startDate6_0_ from Course course0_ where course0_.id=? for update
10 Sep 2011 22:09:25,038 DEBUG ~ Static select for entity models.Course [PESSIMISTIC_FORCE_INCREMENT]: select course0_.id as id6_0_, course0_.description as descript2_6_0_, course0_.earlyBird as earlyBird6_0_, course0_.earlyBirdEndDate as earlyBir4_6_0_, course0_.endDate as endDate6_0_, course0_.instructor_id as instructor10_6_0_, course0_.location_id as location11_6_0_, course0_.maxNumberOfParticipants as maxNumbe6_6_0_, course0_.name as name6_0_, course0_.price as price6_0_, course0_.startDate as startDate6_0_ from Course course0_ where course0_.id=? for update
10 Sep 2011 22:09:25,039 DEBUG ~ Static select for entity models.Course [OPTIMISTIC]: select course0_.id as id6_2_, course0_.description as descript2_6_2_, course0_.earlyBird as earlyBird6_2_, course0_.earlyBirdEndDate as earlyBir4_6_2_, course0_.endDate as endDate6_2_, course0_.instructor_id as instructor10_6_2_, course0_.location_id as location11_6_2_, course0_.maxNumberOfParticipants as maxNumbe6_6_2_, course0_.name as name6_2_, course0_.price as price6_2_, course0_.startDate as startDate6_2_, instructor1_.id as id5_0_, instructor1_.bio as bio5_0_, instructor1_.image as image5_0_, instructor1_.largeImage as largeImage5_0_, instructor1_.name as name5_0_, instructor1_.resume as resume5_0_, instructor1_.twitterId as twitterId5_0_, instructor1_.website as website5_0_, location2_.id as id0_1_, location2_.address as address0_1_, location2_.map as map0_1_, location2_.mapUrl as mapUrl0_1_, location2_.name as name0_1_, location2_.postal as postal0_1_, location2_.telephoneNumber as telephon7_0_1_, location2_.url as url0_1_ from Course course0_ left outer join Instructor instructor1_ on course0_.instructor_id=instructor1_.id left outer join Location location2_ on course0_.location_id=location2_.id where course0_.id=?
10 Sep 2011 22:09:25,039 DEBUG ~ Static select for entity models.Course [OPTIMISTIC_FORCE_INCREMENT]: select course0_.id as id6_2_, course0_.description as descript2_6_2_, course0_.earlyBird as earlyBird6_2_, course0_.earlyBirdEndDate as earlyBir4_6_2_, course0_.endDate as endDate6_2_, course0_.instructor_id as instructor10_6_2_, course0_.location_id as location11_6_2_, course0_.maxNumberOfParticipants as maxNumbe6_6_2_, course0_.name as name6_2_, course0_.price as price6_2_, course0_.startDate as startDate6_2_, instructor1_.id as id5_0_, instructor1_.bio as bio5_0_, instructor1_.image as image5_0_, instructor1_.largeImage as largeImage5_0_, instructor1_.name as name5_0_, instructor1_.resume as resume5_0_, instructor1_.twitterId as twitterId5_0_, instructor1_.website as website5_0_, location2_.id as id0_1_, location2_.address as address0_1_, location2_.map as map0_1_, location2_.mapUrl as mapUrl0_1_, location2_.name as name0_1_, location2_.postal as postal0_1_, location2_.telephoneNumber as telephon7_0_1_, location2_.url as url0_1_ from Course course0_ left outer join Instructor instructor1_ on course0_.instructor_id=instructor1_.id left outer join Location location2_ on course0_.location_id=location2_.id where course0_.id=?
10 Sep 2011 22:09:25,047 DEBUG ~ Static select for action ACTION_MERGE on entity models.Course: select course0_.id as id6_1_, course0_.description as descript2_6_1_, course0_.earlyBird as earlyBird6_1_, course0_.earlyBirdEndDate as earlyBir4_6_1_, course0_.endDate as endDate6_1_, course0_.instructor_id as instructor10_6_1_, course0_.location_id as location11_6_1_, course0_.maxNumberOfParticipants as maxNumbe6_6_1_, course0_.name as name6_1_, course0_.price as price6_1_, course0_.startDate as startDate6_1_, participan1_.course_id as course10_6_3_, participan1_.id as id3_, participan1_.id as id8_0_, participan1_.address as address8_0_, participan1_.billed as billed8_0_, participan1_.company as company8_0_, participan1_.course_id as course10_8_0_, participan1_.email as email8_0_, participan1_.name as name8_0_, participan1_.orgNumber as orgNumber8_0_, participan1_.paymentReceived as paymentR8_8_0_, participan1_.telephonenumber as telephon9_8_0_ from Course course0_ left outer join Participant participan1_ on course0_.id=participan1_.course_id where course0_.id=?
10 Sep 2011 22:09:25,048 DEBUG ~ Static select for action ACTION_REFRESH on entity models.Course: select course0_.id as id6_1_, course0_.description as descript2_6_1_, course0_.earlyBird as earlyBird6_1_, course0_.earlyBirdEndDate as earlyBir4_6_1_, course0_.endDate as endDate6_1_, course0_.instructor_id as instructor10_6_1_, course0_.location_id as location11_6_1_, course0_.maxNumberOfParticipants as maxNumbe6_6_1_, course0_.name as name6_1_, course0_.price as price6_1_, course0_.startDate as startDate6_1_, participan1_.course_id as course10_6_3_, participan1_.id as id3_, participan1_.id as id8_0_, participan1_.address as address8_0_, participan1_.billed as billed8_0_, participan1_.company as company8_0_, participan1_.course_id as course10_8_0_, participan1_.email as email8_0_, participan1_.name as name8_0_, participan1_.orgNumber as orgNumber8_0_, participan1_.paymentReceived as paymentR8_8_0_, participan1_.telephonenumber as telephon9_8_0_ from Course course0_ left outer join Participant participan1_ on course0_.id=participan1_.course_id where course0_.id=?
10 Sep 2011 22:09:25,050 DEBUG ~ Static select for entity models.Location [NONE]: select location0_.id as id0_0_, location0_.address as address0_0_, location0_.map as map0_0_, location0_.mapUrl as mapUrl0_0_, location0_.name as name0_0_, location0_.postal as postal0_0_, location0_.telephoneNumber as telephon7_0_0_, location0_.url as url0_0_ from Location location0_ where location0_.id=?
10 Sep 2011 22:09:25,050 DEBUG ~ Static select for entity models.Location [READ]: select location0_.id as id0_0_, location0_.address as address0_0_, location0_.map as map0_0_, location0_.mapUrl as mapUrl0_0_, location0_.name as name0_0_, location0_.postal as postal0_0_, location0_.telephoneNumber as telephon7_0_0_, location0_.url as url0_0_ from Location location0_ where location0_.id=?
10 Sep 2011 22:09:25,051 DEBUG ~ Static select for entity models.Location [UPGRADE]: select location0_.id as id0_0_, location0_.address as address0_0_, location0_.map as map0_0_, location0_.mapUrl as mapUrl0_0_, location0_.name as name0_0_, location0_.postal as postal0_0_, location0_.telephoneNumber as telephon7_0_0_, location0_.url as url0_0_ from Location location0_ where location0_.id=? for update
10 Sep 2011 22:09:25,051 DEBUG ~ Static select for entity models.Location [UPGRADE_NOWAIT]: select location0_.id as id0_0_, location0_.address as address0_0_, location0_.map as map0_0_, location0_.mapUrl as mapUrl0_0_, location0_.name as name0_0_, location0_.postal as postal0_0_, location0_.telephoneNumber as telephon7_0_0_, location0_.url as url0_0_ from Location location0_ where location0_.id=? for update
10 Sep 2011 22:09:25,051 DEBUG ~ Static select for entity models.Location [FORCE]: select location0_.id as id0_0_, location0_.address as address0_0_, location0_.map as map0_0_, location0_.mapUrl as mapUrl0_0_, location0_.name as name0_0_, location0_.postal as postal0_0_, location0_.telephoneNumber as telephon7_0_0_, location0_.url as url0_0_ from Location location0_ where location0_.id=? for update
10 Sep 2011 22:09:25,051 DEBUG ~ Static select for entity models.Location [PESSIMISTIC_READ]: select location0_.id as id0_0_, location0_.address as address0_0_, location0_.map as map0_0_, location0_.mapUrl as mapUrl0_0_, location0_.name as name0_0_, location0_.postal as postal0_0_, location0_.telephoneNumber as telephon7_0_0_, location0_.url as url0_0_ from Location location0_ where location0_.id=? for update
10 Sep 2011 22:09:25,051 DEBUG ~ Static select for entity models.Location [PESSIMISTIC_WRITE]: select location0_.id as id0_0_, location0_.address as address0_0_, location0_.map as map0_0_, location0_.mapUrl as mapUrl0_0_, location0_.name as name0_0_, location0_.postal as postal0_0_, location0_.telephoneNumber as telephon7_0_0_, location0_.url as url0_0_ from Location location0_ where location0_.id=? for update
10 Sep 2011 22:09:25,051 DEBUG ~ Static select for entity models.Location [PESSIMISTIC_FORCE_INCREMENT]: select location0_.id as id0_0_, location0_.address as address0_0_, location0_.map as map0_0_, location0_.mapUrl as mapUrl0_0_, location0_.name as name0_0_, location0_.postal as postal0_0_, location0_.telephoneNumber as telephon7_0_0_, location0_.url as url0_0_ from Location location0_ where location0_.id=? for update
10 Sep 2011 22:09:25,052 DEBUG ~ Static select for entity models.Location [OPTIMISTIC]: select location0_.id as id0_0_, location0_.address as address0_0_, location0_.map as map0_0_, location0_.mapUrl as mapUrl0_0_, location0_.name as name0_0_, location0_.postal as postal0_0_, location0_.telephoneNumber as telephon7_0_0_, location0_.url as url0_0_ from Location location0_ where location0_.id=?
10 Sep 2011 22:09:25,052 DEBUG ~ Static select for entity models.Location [OPTIMISTIC_FORCE_INCREMENT]: select location0_.id as id0_0_, location0_.address as address0_0_, location0_.map as map0_0_, location0_.mapUrl as mapUrl0_0_, location0_.name as name0_0_, location0_.postal as postal0_0_, location0_.telephoneNumber as telephon7_0_0_, location0_.url as url0_0_ from Location location0_ where location0_.id=?
10 Sep 2011 22:09:25,052 DEBUG ~ Static select for action ACTION_MERGE on entity models.Location: select location0_.id as id0_1_, location0_.address as address0_1_, location0_.map as map0_1_, location0_.mapUrl as mapUrl0_1_, location0_.name as name0_1_, location0_.postal as postal0_1_, location0_.telephoneNumber as telephon7_0_1_, location0_.url as url0_1_, courses1_.location_id as location11_0_3_, courses1_.id as id3_, courses1_.id as id6_0_, courses1_.description as descript2_6_0_, courses1_.earlyBird as earlyBird6_0_, courses1_.earlyBirdEndDate as earlyBir4_6_0_, courses1_.endDate as endDate6_0_, courses1_.instructor_id as instructor10_6_0_, courses1_.location_id as location11_6_0_, courses1_.maxNumberOfParticipants as maxNumbe6_6_0_, courses1_.name as name6_0_, courses1_.price as price6_0_, courses1_.startDate as startDate6_0_ from Location location0_ left outer join Course courses1_ on location0_.id=courses1_.location_id where location0_.id=?
10 Sep 2011 22:09:25,053 DEBUG ~ Static select for action ACTION_REFRESH on entity models.Location: select location0_.id as id0_1_, location0_.address as address0_1_, location0_.map as map0_1_, location0_.mapUrl as mapUrl0_1_, location0_.name as name0_1_, location0_.postal as postal0_1_, location0_.telephoneNumber as telephon7_0_1_, location0_.url as url0_1_, courses1_.location_id as location11_0_3_, courses1_.id as id3_, courses1_.id as id6_0_, courses1_.description as descript2_6_0_, courses1_.earlyBird as earlyBird6_0_, courses1_.earlyBirdEndDate as earlyBir4_6_0_, courses1_.endDate as endDate6_0_, courses1_.instructor_id as instructor10_6_0_, courses1_.location_id as location11_6_0_, courses1_.maxNumberOfParticipants as maxNumbe6_6_0_, courses1_.name as name6_0_, courses1_.price as price6_0_, courses1_.startDate as startDate6_0_ from Location location0_ left outer join Course courses1_ on location0_.id=courses1_.location_id where location0_.id=?
10 Sep 2011 22:09:25,053 DEBUG ~ Static select for entity models.Evaluation [NONE]: select evaluation0_.id as id1_0_ from Evaluation evaluation0_ where evaluation0_.id=?
10 Sep 2011 22:09:25,053 DEBUG ~ Static select for entity models.Evaluation [READ]: select evaluation0_.id as id1_0_ from Evaluation evaluation0_ where evaluation0_.id=?
10 Sep 2011 22:09:25,053 DEBUG ~ Static select for entity models.Evaluation [UPGRADE]: select evaluation0_.id as id1_0_ from Evaluation evaluation0_ where evaluation0_.id=? for update
10 Sep 2011 22:09:25,053 DEBUG ~ Static select for entity models.Evaluation [UPGRADE_NOWAIT]: select evaluation0_.id as id1_0_ from Evaluation evaluation0_ where evaluation0_.id=? for update
10 Sep 2011 22:09:25,053 DEBUG ~ Static select for entity models.Evaluation [FORCE]: select evaluation0_.id as id1_0_ from Evaluation evaluation0_ where evaluation0_.id=? for update
10 Sep 2011 22:09:25,053 DEBUG ~ Static select for entity models.Evaluation [PESSIMISTIC_READ]: select evaluation0_.id as id1_0_ from Evaluation evaluation0_ where evaluation0_.id=? for update
10 Sep 2011 22:09:25,054 DEBUG ~ Static select for entity models.Evaluation [PESSIMISTIC_WRITE]: select evaluation0_.id as id1_0_ from Evaluation evaluation0_ where evaluation0_.id=? for update
10 Sep 2011 22:09:25,054 DEBUG ~ Static select for entity models.Evaluation [PESSIMISTIC_FORCE_INCREMENT]: select evaluation0_.id as id1_0_ from Evaluation evaluation0_ where evaluation0_.id=? for update
10 Sep 2011 22:09:25,054 DEBUG ~ Static select for entity models.Evaluation [OPTIMISTIC]: select evaluation0_.id as id1_0_ from Evaluation evaluation0_ where evaluation0_.id=?
10 Sep 2011 22:09:25,054 DEBUG ~ Static select for entity models.Evaluation [OPTIMISTIC_FORCE_INCREMENT]: select evaluation0_.id as id1_0_ from Evaluation evaluation0_ where evaluation0_.id=?
10 Sep 2011 22:09:25,054 DEBUG ~ Static select for action ACTION_MERGE on entity models.Evaluation: select evaluation0_.id as id1_0_ from Evaluation evaluation0_ where evaluation0_.id=?
10 Sep 2011 22:09:25,054 DEBUG ~ Static select for action ACTION_REFRESH on entity models.Evaluation: select evaluation0_.id as id1_0_ from Evaluation evaluation0_ where evaluation0_.id=?
10 Sep 2011 22:09:25,054 DEBUG ~ Static select for entity models.User [NONE]: select user0_.id as id4_0_, user0_.email as email4_0_, user0_.fullName as fullName4_0_, user0_.isAdmin as isAdmin4_0_, user0_.password as password4_0_ from User user0_ where user0_.id=?
10 Sep 2011 22:09:25,054 DEBUG ~ Static select for entity models.User [READ]: select user0_.id as id4_0_, user0_.email as email4_0_, user0_.fullName as fullName4_0_, user0_.isAdmin as isAdmin4_0_, user0_.password as password4_0_ from User user0_ where user0_.id=?
10 Sep 2011 22:09:25,055 DEBUG ~ Static select for entity models.User [UPGRADE]: select user0_.id as id4_0_, user0_.email as email4_0_, user0_.fullName as fullName4_0_, user0_.isAdmin as isAdmin4_0_, user0_.password as password4_0_ from User user0_ where user0_.id=? for update
10 Sep 2011 22:09:25,055 DEBUG ~ Static select for entity models.User [UPGRADE_NOWAIT]: select user0_.id as id4_0_, user0_.email as email4_0_, user0_.fullName as fullName4_0_, user0_.isAdmin as isAdmin4_0_, user0_.password as password4_0_ from User user0_ where user0_.id=? for update
10 Sep 2011 22:09:25,055 DEBUG ~ Static select for entity models.User [FORCE]: select user0_.id as id4_0_, user0_.email as email4_0_, user0_.fullName as fullName4_0_, user0_.isAdmin as isAdmin4_0_, user0_.password as password4_0_ from User user0_ where user0_.id=? for update
10 Sep 2011 22:09:25,055 DEBUG ~ Static select for entity models.User [PESSIMISTIC_READ]: select user0_.id as id4_0_, user0_.email as email4_0_, user0_.fullName as fullName4_0_, user0_.isAdmin as isAdmin4_0_, user0_.password as password4_0_ from User user0_ where user0_.id=? for update
10 Sep 2011 22:09:25,055 DEBUG ~ Static select for entity models.User [PESSIMISTIC_WRITE]: select user0_.id as id4_0_, user0_.email as email4_0_, user0_.fullName as fullName4_0_, user0_.isAdmin as isAdmin4_0_, user0_.password as password4_0_ from User user0_ where user0_.id=? for update
10 Sep 2011 22:09:25,055 DEBUG ~ Static select for entity models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id4_0_, user0_.email as email4_0_, user0_.fullName as fullName4_0_, user0_.isAdmin as isAdmin4_0_, user0_.password as password4_0_ from User user0_ where user0_.id=? for update
10 Sep 2011 22:09:25,055 DEBUG ~ Static select for entity models.User [OPTIMISTIC]: select user0_.id as id4_0_, user0_.email as email4_0_, user0_.fullName as fullName4_0_, user0_.isAdmin as isAdmin4_0_, user0_.password as password4_0_ from User user0_ where user0_.id=?
10 Sep 2011 22:09:25,056 DEBUG ~ Static select for entity models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id4_0_, user0_.email as email4_0_, user0_.fullName as fullName4_0_, user0_.isAdmin as isAdmin4_0_, user0_.password as password4_0_ from User user0_ where user0_.id=?
10 Sep 2011 22:09:25,056 DEBUG ~ Static select for action ACTION_MERGE on entity models.User: select user0_.id as id4_0_, user0_.email as email4_0_, user0_.fullName as fullName4_0_, user0_.isAdmin as isAdmin4_0_, user0_.password as password4_0_ from User user0_ where user0_.id=?
10 Sep 2011 22:09:25,056 DEBUG ~ Static select for action ACTION_REFRESH on entity models.User: select user0_.id as id4_0_, user0_.email as email4_0_, user0_.fullName as fullName4_0_, user0_.isAdmin as isAdmin4_0_, user0_.password as password4_0_ from User user0_ where user0_.id=?
10 Sep 2011 22:09:25,056 DEBUG ~ Static select for entity models.Book [NONE]: select book0_.id as id7_1_, book0_.author_id as author5_7_1_, book0_.externalUrl as external2_7_1_, book0_.imageUrl as imageUrl7_1_, book0_.title as title7_1_, instructor1_.id as id5_0_, instructor1_.bio as bio5_0_, instructor1_.image as image5_0_, instructor1_.largeImage as largeImage5_0_, instructor1_.name as name5_0_, instructor1_.resume as resume5_0_, instructor1_.twitterId as twitterId5_0_, instructor1_.website as website5_0_ from Book book0_ left outer join Instructor instructor1_ on book0_.author_id=instructor1_.id where book0_.id=?
10 Sep 2011 22:09:25,057 DEBUG ~ Static select for entity models.Book [READ]: select book0_.id as id7_1_, book0_.author_id as author5_7_1_, book0_.externalUrl as external2_7_1_, book0_.imageUrl as imageUrl7_1_, book0_.title as title7_1_, instructor1_.id as id5_0_, instructor1_.bio as bio5_0_, instructor1_.image as image5_0_, instructor1_.largeImage as largeImage5_0_, instructor1_.name as name5_0_, instructor1_.resume as resume5_0_, instructor1_.twitterId as twitterId5_0_, instructor1_.website as website5_0_ from Book book0_ left outer join Instructor instructor1_ on book0_.author_id=instructor1_.id where book0_.id=?
10 Sep 2011 22:09:25,057 DEBUG ~ Static select for entity models.Book [UPGRADE]: select book0_.id as id7_0_, book0_.author_id as author5_7_0_, book0_.externalUrl as external2_7_0_, book0_.imageUrl as imageUrl7_0_, book0_.title as title7_0_ from Book book0_ where book0_.id=? for update
10 Sep 2011 22:09:25,057 DEBUG ~ Static select for entity models.Book [UPGRADE_NOWAIT]: select book0_.id as id7_0_, book0_.author_id as author5_7_0_, book0_.externalUrl as external2_7_0_, book0_.imageUrl as imageUrl7_0_, book0_.title as title7_0_ from Book book0_ where book0_.id=? for update
10 Sep 2011 22:09:25,057 DEBUG ~ Static select for entity models.Book [FORCE]: select book0_.id as id7_0_, book0_.author_id as author5_7_0_, book0_.externalUrl as external2_7_0_, book0_.imageUrl as imageUrl7_0_, book0_.title as title7_0_ from Book book0_ where book0_.id=? for update
10 Sep 2011 22:09:25,057 DEBUG ~ Static select for entity models.Book [PESSIMISTIC_READ]: select book0_.id as id7_0_, book0_.author_id as author5_7_0_, book0_.externalUrl as external2_7_0_, book0_.imageUrl as imageUrl7_0_, book0_.title as title7_0_ from Book book0_ where book0_.id=? for update
10 Sep 2011 22:09:25,057 DEBUG ~ Static select for entity models.Book [PESSIMISTIC_WRITE]: select book0_.id as id7_0_, book0_.author_id as author5_7_0_, book0_.externalUrl as external2_7_0_, book0_.imageUrl as imageUrl7_0_, book0_.title as title7_0_ from Book book0_ where book0_.id=? for update
10 Sep 2011 22:09:25,058 DEBUG ~ Static select for entity models.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.id as id7_0_, book0_.author_id as author5_7_0_, book0_.externalUrl as external2_7_0_, book0_.imageUrl as imageUrl7_0_, book0_.title as title7_0_ from Book book0_ where book0_.id=? for update
10 Sep 2011 22:09:25,058 DEBUG ~ Static select for entity models.Book [OPTIMISTIC]: select book0_.id as id7_1_, book0_.author_id as author5_7_1_, book0_.externalUrl as external2_7_1_, book0_.imageUrl as imageUrl7_1_, book0_.title as title7_1_, instructor1_.id as id5_0_, instructor1_.bio as bio5_0_, instructor1_.image as image5_0_, instructor1_.largeImage as largeImage5_0_, instructor1_.name as name5_0_, instructor1_.resume as resume5_0_, instructor1_.twitterId as twitterId5_0_, instructor1_.website as website5_0_ from Book book0_ left outer join Instructor instructor1_ on book0_.author_id=instructor1_.id where book0_.id=?
10 Sep 2011 22:09:25,058 DEBUG ~ Static select for entity models.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.id as id7_1_, book0_.author_id as author5_7_1_, book0_.externalUrl as external2_7_1_, book0_.imageUrl as imageUrl7_1_, book0_.title as title7_1_, instructor1_.id as id5_0_, instructor1_.bio as bio5_0_, instructor1_.image as image5_0_, instructor1_.largeImage as largeImage5_0_, instructor1_.name as name5_0_, instructor1_.resume as resume5_0_, instructor1_.twitterId as twitterId5_0_, instructor1_.website as website5_0_ from Book book0_ left outer join Instructor instructor1_ on book0_.author_id=instructor1_.id where book0_.id=?
10 Sep 2011 22:09:25,058 DEBUG ~ Static select for action ACTION_MERGE on entity models.Book: select book0_.id as id7_0_, book0_.author_id as author5_7_0_, book0_.externalUrl as external2_7_0_, book0_.imageUrl as imageUrl7_0_, book0_.title as title7_0_ from Book book0_ where book0_.id=?
10 Sep 2011 22:09:25,058 DEBUG ~ Static select for action ACTION_REFRESH on entity models.Book: select book0_.id as id7_0_, book0_.author_id as author5_7_0_, book0_.externalUrl as external2_7_0_, book0_.imageUrl as imageUrl7_0_, book0_.title as title7_0_ from Book book0_ where book0_.id=?
10 Sep 2011 22:09:25,059 DEBUG ~ Static select for entity models.Participant [NONE]: select participan0_.id as id8_3_, participan0_.address as address8_3_, participan0_.billed as billed8_3_, participan0_.company as company8_3_, participan0_.course_id as course10_8_3_, participan0_.email as email8_3_, participan0_.name as name8_3_, participan0_.orgNumber as orgNumber8_3_, participan0_.paymentReceived as paymentR8_8_3_, participan0_.telephonenumber as telephon9_8_3_, course1_.id as id6_0_, course1_.description as descript2_6_0_, course1_.earlyBird as earlyBird6_0_, course1_.earlyBirdEndDate as earlyBir4_6_0_, course1_.endDate as endDate6_0_, course1_.instructor_id as instructor10_6_0_, course1_.location_id as location11_6_0_, course1_.maxNumberOfParticipants as maxNumbe6_6_0_, course1_.name as name6_0_, course1_.price as price6_0_, course1_.startDate as startDate6_0_, instructor2_.id as id5_1_, instructor2_.bio as bio5_1_, instructor2_.image as image5_1_, instructor2_.largeImage as largeImage5_1_, instructor2_.name as name5_1_, instructor2_.resume as resume5_1_, instructor2_.twitterId as twitterId5_1_, instructor2_.website as website5_1_, location3_.id as id0_2_, location3_.address as address0_2_, location3_.map as map0_2_, location3_.mapUrl as mapUrl0_2_, location3_.name as name0_2_, location3_.postal as postal0_2_, location3_.telephoneNumber as telephon7_0_2_, location3_.url as url0_2_ from Participant participan0_ left outer join Course course1_ on participan0_.course_id=course1_.id left outer join Instructor instructor2_ on course1_.instructor_id=instructor2_.id left outer join Location location3_ on course1_.location_id=location3_.id where participan0_.id=?
10 Sep 2011 22:09:25,060 DEBUG ~ Static select for entity models.Participant [READ]: select participan0_.id as id8_3_, participan0_.address as address8_3_, participan0_.billed as billed8_3_, participan0_.company as company8_3_, participan0_.course_id as course10_8_3_, participan0_.email as email8_3_, participan0_.name as name8_3_, participan0_.orgNumber as orgNumber8_3_, participan0_.paymentReceived as paymentR8_8_3_, participan0_.telephonenumber as telephon9_8_3_, course1_.id as id6_0_, course1_.description as descript2_6_0_, course1_.earlyBird as earlyBird6_0_, course1_.earlyBirdEndDate as earlyBir4_6_0_, course1_.endDate as endDate6_0_, course1_.instructor_id as instructor10_6_0_, course1_.location_id as location11_6_0_, course1_.maxNumberOfParticipants as maxNumbe6_6_0_, course1_.name as name6_0_, course1_.price as price6_0_, course1_.startDate as startDate6_0_, instructor2_.id as id5_1_, instructor2_.bio as bio5_1_, instructor2_.image as image5_1_, instructor2_.largeImage as largeImage5_1_, instructor2_.name as name5_1_, instructor2_.resume as resume5_1_, instructor2_.twitterId as twitterId5_1_, instructor2_.website as website5_1_, location3_.id as id0_2_, location3_.address as address0_2_, location3_.map as map0_2_, location3_.mapUrl as mapUrl0_2_, location3_.name as name0_2_, location3_.postal as postal0_2_, location3_.telephoneNumber as telephon7_0_2_, location3_.url as url0_2_ from Participant participan0_ left outer join Course course1_ on participan0_.course_id=course1_.id left outer join Instructor instructor2_ on course1_.instructor_id=instructor2_.id left outer join Location location3_ on course1_.location_id=location3_.id where participan0_.id=?
10 Sep 2011 22:09:25,060 DEBUG ~ Static select for entity models.Participant [UPGRADE]: select participan0_.id as id8_0_, participan0_.address as address8_0_, participan0_.billed as billed8_0_, participan0_.company as company8_0_, participan0_.course_id as course10_8_0_, participan0_.email as email8_0_, participan0_.name as name8_0_, participan0_.orgNumber as orgNumber8_0_, participan0_.paymentReceived as paymentR8_8_0_, participan0_.telephonenumber as telephon9_8_0_ from Participant participan0_ where participan0_.id=? for update
10 Sep 2011 22:09:25,060 DEBUG ~ Static select for entity models.Participant [UPGRADE_NOWAIT]: select participan0_.id as id8_0_, participan0_.address as address8_0_, participan0_.billed as billed8_0_, participan0_.company as company8_0_, participan0_.course_id as course10_8_0_, participan0_.email as email8_0_, participan0_.name as name8_0_, participan0_.orgNumber as orgNumber8_0_, participan0_.paymentReceived as paymentR8_8_0_, participan0_.telephonenumber as telephon9_8_0_ from Participant participan0_ where participan0_.id=? for update
10 Sep 2011 22:09:25,061 DEBUG ~ Static select for entity models.Participant [FORCE]: select participan0_.id as id8_0_, participan0_.address as address8_0_, participan0_.billed as billed8_0_, participan0_.company as company8_0_, participan0_.course_id as course10_8_0_, participan0_.email as email8_0_, participan0_.name as name8_0_, participan0_.orgNumber as orgNumber8_0_, participan0_.paymentReceived as paymentR8_8_0_, participan0_.telephonenumber as telephon9_8_0_ from Participant participan0_ where participan0_.id=? for update
10 Sep 2011 22:09:25,061 DEBUG ~ Static select for entity models.Participant [PESSIMISTIC_READ]: select participan0_.id as id8_0_, participan0_.address as address8_0_, participan0_.billed as billed8_0_, participan0_.company as company8_0_, participan0_.course_id as course10_8_0_, participan0_.email as email8_0_, participan0_.name as name8_0_, participan0_.orgNumber as orgNumber8_0_, participan0_.paymentReceived as paymentR8_8_0_, participan0_.telephonenumber as telephon9_8_0_ from Participant participan0_ where participan0_.id=? for update
10 Sep 2011 22:09:25,061 DEBUG ~ Static select for entity models.Participant [PESSIMISTIC_WRITE]: select participan0_.id as id8_0_, participan0_.address as address8_0_, participan0_.billed as billed8_0_, participan0_.company as company8_0_, participan0_.course_id as course10_8_0_, participan0_.email as email8_0_, participan0_.name as name8_0_, participan0_.orgNumber as orgNumber8_0_, participan0_.paymentReceived as paymentR8_8_0_, participan0_.telephonenumber as telephon9_8_0_ from Participant participan0_ where participan0_.id=? for update
10 Sep 2011 22:09:25,061 DEBUG ~ Static select for entity models.Participant [PESSIMISTIC_FORCE_INCREMENT]: select participan0_.id as id8_0_, participan0_.address as address8_0_, participan0_.billed as billed8_0_, participan0_.company as company8_0_, participan0_.course_id as course10_8_0_, participan0_.email as email8_0_, participan0_.name as name8_0_, participan0_.orgNumber as orgNumber8_0_, participan0_.paymentReceived as paymentR8_8_0_, participan0_.telephonenumber as telephon9_8_0_ from Participant participan0_ where participan0_.id=? for update
10 Sep 2011 22:09:25,062 DEBUG ~ Static select for entity models.Participant [OPTIMISTIC]: select participan0_.id as id8_3_, participan0_.address as address8_3_, participan0_.billed as billed8_3_, participan0_.company as company8_3_, participan0_.course_id as course10_8_3_, participan0_.email as email8_3_, participan0_.name as name8_3_, participan0_.orgNumber as orgNumber8_3_, participan0_.paymentReceived as paymentR8_8_3_, participan0_.telephonenumber as telephon9_8_3_, course1_.id as id6_0_, course1_.description as descript2_6_0_, course1_.earlyBird as earlyBird6_0_, course1_.earlyBirdEndDate as earlyBir4_6_0_, course1_.endDate as endDate6_0_, course1_.instructor_id as instructor10_6_0_, course1_.location_id as location11_6_0_, course1_.maxNumberOfParticipants as maxNumbe6_6_0_, course1_.name as name6_0_, course1_.price as price6_0_, course1_.startDate as startDate6_0_, instructor2_.id as id5_1_, instructor2_.bio as bio5_1_, instructor2_.image as image5_1_, instructor2_.largeImage as largeImage5_1_, instructor2_.name as name5_1_, instructor2_.resume as resume5_1_, instructor2_.twitterId as twitterId5_1_, instructor2_.website as website5_1_, location3_.id as id0_2_, location3_.address as address0_2_, location3_.map as map0_2_, location3_.mapUrl as mapUrl0_2_, location3_.name as name0_2_, location3_.postal as postal0_2_, location3_.telephoneNumber as telephon7_0_2_, location3_.url as url0_2_ from Participant participan0_ left outer join Course course1_ on participan0_.course_id=course1_.id left outer join Instructor instructor2_ on course1_.instructor_id=instructor2_.id left outer join Location location3_ on course1_.location_id=location3_.id where participan0_.id=?
10 Sep 2011 22:09:25,063 DEBUG ~ Static select for entity models.Participant [OPTIMISTIC_FORCE_INCREMENT]: select participan0_.id as id8_3_, participan0_.address as address8_3_, participan0_.billed as billed8_3_, participan0_.company as company8_3_, participan0_.course_id as course10_8_3_, participan0_.email as email8_3_, participan0_.name as name8_3_, participan0_.orgNumber as orgNumber8_3_, participan0_.paymentReceived as paymentR8_8_3_, participan0_.telephonenumber as telephon9_8_3_, course1_.id as id6_0_, course1_.description as descript2_6_0_, course1_.earlyBird as earlyBird6_0_, course1_.earlyBirdEndDate as earlyBir4_6_0_, course1_.endDate as endDate6_0_, course1_.instructor_id as instructor10_6_0_, course1_.location_id as location11_6_0_, course1_.maxNumberOfParticipants as maxNumbe6_6_0_, course1_.name as name6_0_, course1_.price as price6_0_, course1_.startDate as startDate6_0_, instructor2_.id as id5_1_, instructor2_.bio as bio5_1_, instructor2_.image as image5_1_, instructor2_.largeImage as largeImage5_1_, instructor2_.name as name5_1_, instructor2_.resume as resume5_1_, instructor2_.twitterId as twitterId5_1_, instructor2_.website as website5_1_, location3_.id as id0_2_, location3_.address as address0_2_, location3_.map as map0_2_, location3_.mapUrl as mapUrl0_2_, location3_.name as name0_2_, location3_.postal as postal0_2_, location3_.telephoneNumber as telephon7_0_2_, location3_.url as url0_2_ from Participant participan0_ left outer join Course course1_ on participan0_.course_id=course1_.id left outer join Instructor instructor2_ on course1_.instructor_id=instructor2_.id left outer join Location location3_ on course1_.location_id=location3_.id where participan0_.id=?
10 Sep 2011 22:09:25,063 DEBUG ~ Static select for action ACTION_MERGE on entity models.Participant: select participan0_.id as id8_0_, participan0_.address as address8_0_, participan0_.billed as billed8_0_, participan0_.company as company8_0_, participan0_.course_id as course10_8_0_, participan0_.email as email8_0_, participan0_.name as name8_0_, participan0_.orgNumber as orgNumber8_0_, participan0_.paymentReceived as paymentR8_8_0_, participan0_.telephonenumber as telephon9_8_0_ from Participant participan0_ where participan0_.id=?
10 Sep 2011 22:09:25,063 DEBUG ~ Static select for action ACTION_REFRESH on entity models.Participant: select participan0_.id as id8_0_, participan0_.address as address8_0_, participan0_.billed as billed8_0_, participan0_.company as company8_0_, participan0_.course_id as course10_8_0_, participan0_.email as email8_0_, participan0_.name as name8_0_, participan0_.orgNumber as orgNumber8_0_, participan0_.paymentReceived as paymentR8_8_0_, participan0_.telephonenumber as telephon9_8_0_ from Participant participan0_ where participan0_.id=?
10 Sep 2011 22:09:25,063 DEBUG ~ Static select for entity models.Site [NONE]: select site0_.id as id3_0_, site0_.description as descript2_3_0_, site0_.name as name3_0_, site0_.url as url3_0_ from Site site0_ where site0_.id=?
10 Sep 2011 22:09:25,063 DEBUG ~ Static select for entity models.Site [READ]: select site0_.id as id3_0_, site0_.description as descript2_3_0_, site0_.name as name3_0_, site0_.url as url3_0_ from Site site0_ where site0_.id=?
10 Sep 2011 22:09:25,064 DEBUG ~ Static select for entity models.Site [UPGRADE]: select site0_.id as id3_0_, site0_.description as descript2_3_0_, site0_.name as name3_0_, site0_.url as url3_0_ from Site site0_ where site0_.id=? for update
10 Sep 2011 22:09:25,064 DEBUG ~ Static select for entity models.Site [UPGRADE_NOWAIT]: select site0_.id as id3_0_, site0_.description as descript2_3_0_, site0_.name as name3_0_, site0_.url as url3_0_ from Site site0_ where site0_.id=? for update
10 Sep 2011 22:09:25,064 DEBUG ~ Static select for entity models.Site [FORCE]: select site0_.id as id3_0_, site0_.description as descript2_3_0_, site0_.name as name3_0_, site0_.url as url3_0_ from Site site0_ where site0_.id=? for update
10 Sep 2011 22:09:25,064 DEBUG ~ Static select for entity models.Site [PESSIMISTIC_READ]: select site0_.id as id3_0_, site0_.description as descript2_3_0_, site0_.name as name3_0_, site0_.url as url3_0_ from Site site0_ where site0_.id=? for update
10 Sep 2011 22:09:25,064 DEBUG ~ Static select for entity models.Site [PESSIMISTIC_WRITE]: select site0_.id as id3_0_, site0_.description as descript2_3_0_, site0_.name as name3_0_, site0_.url as url3_0_ from Site site0_ where site0_.id=? for update
10 Sep 2011 22:09:25,064 DEBUG ~ Static select for entity models.Site [PESSIMISTIC_FORCE_INCREMENT]: select site0_.id as id3_0_, site0_.description as descript2_3_0_, site0_.name as name3_0_, site0_.url as url3_0_ from Site site0_ where site0_.id=? for update
10 Sep 2011 22:09:25,064 DEBUG ~ Static select for entity models.Site [OPTIMISTIC]: select site0_.id as id3_0_, site0_.description as descript2_3_0_, site0_.name as name3_0_, site0_.url as url3_0_ from Site site0_ where site0_.id=?
10 Sep 2011 22:09:25,065 DEBUG ~ Static select for entity models.Site [OPTIMISTIC_FORCE_INCREMENT]: select site0_.id as id3_0_, site0_.description as descript2_3_0_, site0_.name as name3_0_, site0_.url as url3_0_ from Site site0_ where site0_.id=?
10 Sep 2011 22:09:25,065 DEBUG ~ Static select for action ACTION_MERGE on entity models.Site: select site0_.id as id3_0_, site0_.description as descript2_3_0_, site0_.name as name3_0_, site0_.url as url3_0_ from Site site0_ where site0_.id=?
10 Sep 2011 22:09:25,065 DEBUG ~ Static select for action ACTION_REFRESH on entity models.Site: select site0_.id as id3_0_, site0_.description as descript2_3_0_, site0_.name as name3_0_, site0_.url as url3_0_ from Site site0_ where site0_.id=?
10 Sep 2011 22:09:25,065 DEBUG ~ Static select for entity models.Instructor [NONE]: select instructor0_.id as id5_0_, instructor0_.bio as bio5_0_, instructor0_.image as image5_0_, instructor0_.largeImage as largeImage5_0_, instructor0_.name as name5_0_, instructor0_.resume as resume5_0_, instructor0_.twitterId as twitterId5_0_, instructor0_.website as website5_0_ from Instructor instructor0_ where instructor0_.id=?
10 Sep 2011 22:09:25,065 DEBUG ~ Static select for entity models.Instructor [READ]: select instructor0_.id as id5_0_, instructor0_.bio as bio5_0_, instructor0_.image as image5_0_, instructor0_.largeImage as largeImage5_0_, instructor0_.name as name5_0_, instructor0_.resume as resume5_0_, instructor0_.twitterId as twitterId5_0_, instructor0_.website as website5_0_ from Instructor instructor0_ where instructor0_.id=?
10 Sep 2011 22:09:25,065 DEBUG ~ Static select for entity models.Instructor [UPGRADE]: select instructor0_.id as id5_0_, instructor0_.bio as bio5_0_, instructor0_.image as image5_0_, instructor0_.largeImage as largeImage5_0_, instructor0_.name as name5_0_, instructor0_.resume as resume5_0_, instructor0_.twitterId as twitterId5_0_, instructor0_.website as website5_0_ from Instructor instructor0_ where instructor0_.id=? for update
10 Sep 2011 22:09:25,066 DEBUG ~ Static select for entity models.Instructor [UPGRADE_NOWAIT]: select instructor0_.id as id5_0_, instructor0_.bio as bio5_0_, instructor0_.image as image5_0_, instructor0_.largeImage as largeImage5_0_, instructor0_.name as name5_0_, instructor0_.resume as resume5_0_, instructor0_.twitterId as twitterId5_0_, instructor0_.website as website5_0_ from Instructor instructor0_ where instructor0_.id=? for update
10 Sep 2011 22:09:25,066 DEBUG ~ Static select for entity models.Instructor [FORCE]: select instructor0_.id as id5_0_, instructor0_.bio as bio5_0_, instructor0_.image as image5_0_, instructor0_.largeImage as largeImage5_0_, instructor0_.name as name5_0_, instructor0_.resume as resume5_0_, instructor0_.twitterId as twitterId5_0_, instructor0_.website as website5_0_ from Instructor instructor0_ where instructor0_.id=? for update
10 Sep 2011 22:09:25,066 DEBUG ~ Static select for entity models.Instructor [PESSIMISTIC_READ]: select instructor0_.id as id5_0_, instructor0_.bio as bio5_0_, instructor0_.image as image5_0_, instructor0_.largeImage as largeImage5_0_, instructor0_.name as name5_0_, instructor0_.resume as resume5_0_, instructor0_.twitterId as twitterId5_0_, instructor0_.website as website5_0_ from Instructor instructor0_ where instructor0_.id=? for update
10 Sep 2011 22:09:25,066 DEBUG ~ Static select for entity models.Instructor [PESSIMISTIC_WRITE]: select instructor0_.id as id5_0_, instructor0_.bio as bio5_0_, instructor0_.image as image5_0_, instructor0_.largeImage as largeImage5_0_, instructor0_.name as name5_0_, instructor0_.resume as resume5_0_, instructor0_.twitterId as twitterId5_0_, instructor0_.website as website5_0_ from Instructor instructor0_ where instructor0_.id=? for update
10 Sep 2011 22:09:25,066 DEBUG ~ Static select for entity models.Instructor [PESSIMISTIC_FORCE_INCREMENT]: select instructor0_.id as id5_0_, instructor0_.bio as bio5_0_, instructor0_.image as image5_0_, instructor0_.largeImage as largeImage5_0_, instructor0_.name as name5_0_, instructor0_.resume as resume5_0_, instructor0_.twitterId as twitterId5_0_, instructor0_.website as website5_0_ from Instructor instructor0_ where instructor0_.id=? for update
10 Sep 2011 22:09:25,067 DEBUG ~ Static select for entity models.Instructor [OPTIMISTIC]: select instructor0_.id as id5_0_, instructor0_.bio as bio5_0_, instructor0_.image as image5_0_, instructor0_.largeImage as largeImage5_0_, instructor0_.name as name5_0_, instructor0_.resume as resume5_0_, instructor0_.twitterId as twitterId5_0_, instructor0_.website as website5_0_ from Instructor instructor0_ where instructor0_.id=?
10 Sep 2011 22:09:25,067 DEBUG ~ Static select for entity models.Instructor [OPTIMISTIC_FORCE_INCREMENT]: select instructor0_.id as id5_0_, instructor0_.bio as bio5_0_, instructor0_.image as image5_0_, instructor0_.largeImage as largeImage5_0_, instructor0_.name as name5_0_, instructor0_.resume as resume5_0_, instructor0_.twitterId as twitterId5_0_, instructor0_.website as website5_0_ from Instructor instructor0_ where instructor0_.id=?
10 Sep 2011 22:09:25,067 DEBUG ~ Static select for action ACTION_MERGE on entity models.Instructor: select instructor0_.id as id5_1_, instructor0_.bio as bio5_1_, instructor0_.image as image5_1_, instructor0_.largeImage as largeImage5_1_, instructor0_.name as name5_1_, instructor0_.resume as resume5_1_, instructor0_.twitterId as twitterId5_1_, instructor0_.website as website5_1_, courses1_.instructor_id as instructor10_5_3_, courses1_.id as id3_, courses1_.id as id6_0_, courses1_.description as descript2_6_0_, courses1_.earlyBird as earlyBird6_0_, courses1_.earlyBirdEndDate as earlyBir4_6_0_, courses1_.endDate as endDate6_0_, courses1_.instructor_id as instructor10_6_0_, courses1_.location_id as location11_6_0_, courses1_.maxNumberOfParticipants as maxNumbe6_6_0_, courses1_.name as name6_0_, courses1_.price as price6_0_, courses1_.startDate as startDate6_0_ from Instructor instructor0_ left outer join Course courses1_ on instructor0_.id=courses1_.instructor_id where instructor0_.id=?
10 Sep 2011 22:09:25,068 DEBUG ~ Static select for action ACTION_REFRESH on entity models.Instructor: select instructor0_.id as id5_1_, instructor0_.bio as bio5_1_, instructor0_.image as image5_1_, instructor0_.largeImage as largeImage5_1_, instructor0_.name as name5_1_, instructor0_.resume as resume5_1_, instructor0_.twitterId as twitterId5_1_, instructor0_.website as website5_1_, courses1_.instructor_id as instructor10_5_3_, courses1_.id as id3_, courses1_.id as id6_0_, courses1_.description as descript2_6_0_, courses1_.earlyBird as earlyBird6_0_, courses1_.earlyBirdEndDate as earlyBir4_6_0_, courses1_.endDate as endDate6_0_, courses1_.instructor_id as instructor10_6_0_, courses1_.location_id as location11_6_0_, courses1_.maxNumberOfParticipants as maxNumbe6_6_0_, courses1_.name as name6_0_, courses1_.price as price6_0_, courses1_.startDate as startDate6_0_ from Instructor instructor0_ left outer join Course courses1_ on instructor0_.id=courses1_.instructor_id where instructor0_.id=?
10 Sep 2011 22:09:25,068 DEBUG ~ Static select for entity models.CourseInterest [NONE]: select courseinte0_.id as id9_0_, courseinte0_.courseName as courseName9_0_, courseinte0_.email as email9_0_, courseinte0_.participantName as particip4_9_0_, courseinte0_.telephoneNumber as telephon5_9_0_ from CourseInterest courseinte0_ where courseinte0_.id=?
10 Sep 2011 22:09:25,068 DEBUG ~ Static select for entity models.CourseInterest [READ]: select courseinte0_.id as id9_0_, courseinte0_.courseName as courseName9_0_, courseinte0_.email as email9_0_, courseinte0_.participantName as particip4_9_0_, courseinte0_.telephoneNumber as telephon5_9_0_ from CourseInterest courseinte0_ where courseinte0_.id=?
10 Sep 2011 22:09:25,068 DEBUG ~ Static select for entity models.CourseInterest [UPGRADE]: select courseinte0_.id as id9_0_, courseinte0_.courseName as courseName9_0_, courseinte0_.email as email9_0_, courseinte0_.participantName as particip4_9_0_, courseinte0_.telephoneNumber as telephon5_9_0_ from CourseInterest courseinte0_ where courseinte0_.id=? for update
10 Sep 2011 22:09:25,068 DEBUG ~ Static select for entity models.CourseInterest [UPGRADE_NOWAIT]: select courseinte0_.id as id9_0_, courseinte0_.courseName as courseName9_0_, courseinte0_.email as email9_0_, courseinte0_.participantName as particip4_9_0_, courseinte0_.telephoneNumber as telephon5_9_0_ from CourseInterest courseinte0_ where courseinte0_.id=? for update
10 Sep 2011 22:09:25,069 DEBUG ~ Static select for entity models.CourseInterest [FORCE]: select courseinte0_.id as id9_0_, courseinte0_.courseName as courseName9_0_, courseinte0_.email as email9_0_, courseinte0_.participantName as particip4_9_0_, courseinte0_.telephoneNumber as telephon5_9_0_ from CourseInterest courseinte0_ where courseinte0_.id=? for update
10 Sep 2011 22:09:25,069 DEBUG ~ Static select for entity models.CourseInterest [PESSIMISTIC_READ]: select courseinte0_.id as id9_0_, courseinte0_.courseName as courseName9_0_, courseinte0_.email as email9_0_, courseinte0_.participantName as particip4_9_0_, courseinte0_.telephoneNumber as telephon5_9_0_ from CourseInterest courseinte0_ where courseinte0_.id=? for update
10 Sep 2011 22:09:25,069 DEBUG ~ Static select for entity models.CourseInterest [PESSIMISTIC_WRITE]: select courseinte0_.id as id9_0_, courseinte0_.courseName as courseName9_0_, courseinte0_.email as email9_0_, courseinte0_.participantName as particip4_9_0_, courseinte0_.telephoneNumber as telephon5_9_0_ from CourseInterest courseinte0_ where courseinte0_.id=? for update
10 Sep 2011 22:09:25,069 DEBUG ~ Static select for entity models.CourseInterest [PESSIMISTIC_FORCE_INCREMENT]: select courseinte0_.id as id9_0_, courseinte0_.courseName as courseName9_0_, courseinte0_.email as email9_0_, courseinte0_.participantName as particip4_9_0_, courseinte0_.telephoneNumber as telephon5_9_0_ from CourseInterest courseinte0_ where courseinte0_.id=? for update
10 Sep 2011 22:09:25,069 DEBUG ~ Static select for entity models.CourseInterest [OPTIMISTIC]: select courseinte0_.id as id9_0_, courseinte0_.courseName as courseName9_0_, courseinte0_.email as email9_0_, courseinte0_.participantName as particip4_9_0_, courseinte0_.telephoneNumber as telephon5_9_0_ from CourseInterest courseinte0_ where courseinte0_.id=?
10 Sep 2011 22:09:25,069 DEBUG ~ Static select for entity models.CourseInterest [OPTIMISTIC_FORCE_INCREMENT]: select courseinte0_.id as id9_0_, courseinte0_.courseName as courseName9_0_, courseinte0_.email as email9_0_, courseinte0_.participantName as particip4_9_0_, courseinte0_.telephoneNumber as telephon5_9_0_ from CourseInterest courseinte0_ where courseinte0_.id=?
10 Sep 2011 22:09:25,069 DEBUG ~ Static select for action ACTION_MERGE on entity models.CourseInterest: select courseinte0_.id as id9_0_, courseinte0_.courseName as courseName9_0_, courseinte0_.email as email9_0_, courseinte0_.participantName as particip4_9_0_, courseinte0_.telephoneNumber as telephon5_9_0_ from CourseInterest courseinte0_ where courseinte0_.id=?
10 Sep 2011 22:09:25,070 DEBUG ~ Static select for action ACTION_REFRESH on entity models.CourseInterest: select courseinte0_.id as id9_0_, courseinte0_.courseName as courseName9_0_, courseinte0_.email as email9_0_, courseinte0_.participantName as particip4_9_0_, courseinte0_.telephoneNumber as telephon5_9_0_ from CourseInterest courseinte0_ where courseinte0_.id=?
10 Sep 2011 22:09:25,070 DEBUG ~ Static select for entity models.Presentation [NONE]: select presentati0_.id as id2_1_, presentati0_.event as event2_1_, presentati0_.location as location2_1_, presentati0_.name as name2_1_, presentati0_.presenter_id as presenter6_2_1_, presentati0_.url as url2_1_, instructor1_.id as id5_0_, instructor1_.bio as bio5_0_, instructor1_.image as image5_0_, instructor1_.largeImage as largeImage5_0_, instructor1_.name as name5_0_, instructor1_.resume as resume5_0_, instructor1_.twitterId as twitterId5_0_, instructor1_.website as website5_0_ from Presentation presentati0_ left outer join Instructor instructor1_ on presentati0_.presenter_id=instructor1_.id where presentati0_.id=?
10 Sep 2011 22:09:25,070 DEBUG ~ Static select for entity models.Presentation [READ]: select presentati0_.id as id2_1_, presentati0_.event as event2_1_, presentati0_.location as location2_1_, presentati0_.name as name2_1_, presentati0_.presenter_id as presenter6_2_1_, presentati0_.url as url2_1_, instructor1_.id as id5_0_, instructor1_.bio as bio5_0_, instructor1_.image as image5_0_, instructor1_.largeImage as largeImage5_0_, instructor1_.name as name5_0_, instructor1_.resume as resume5_0_, instructor1_.twitterId as twitterId5_0_, instructor1_.website as website5_0_ from Presentation presentati0_ left outer join Instructor instructor1_ on presentati0_.presenter_id=instructor1_.id where presentati0_.id=?
10 Sep 2011 22:09:25,070 DEBUG ~ Static select for entity models.Presentation [UPGRADE]: select presentati0_.id as id2_0_, presentati0_.event as event2_0_, presentati0_.location as location2_0_, presentati0_.name as name2_0_, presentati0_.presenter_id as presenter6_2_0_, presentati0_.url as url2_0_ from Presentation presentati0_ where presentati0_.id=? for update
10 Sep 2011 22:09:25,071 DEBUG ~ Static select for entity models.Presentation [UPGRADE_NOWAIT]: select presentati0_.id as id2_0_, presentati0_.event as event2_0_, presentati0_.location as location2_0_, presentati0_.name as name2_0_, presentati0_.presenter_id as presenter6_2_0_, presentati0_.url as url2_0_ from Presentation presentati0_ where presentati0_.id=? for update
10 Sep 2011 22:09:25,071 DEBUG ~ Static select for entity models.Presentation [FORCE]: select presentati0_.id as id2_0_, presentati0_.event as event2_0_, presentati0_.location as location2_0_, presentati0_.name as name2_0_, presentati0_.presenter_id as presenter6_2_0_, presentati0_.url as url2_0_ from Presentation presentati0_ where presentati0_.id=? for update
10 Sep 2011 22:09:25,071 DEBUG ~ Static select for entity models.Presentation [PESSIMISTIC_READ]: select presentati0_.id as id2_0_, presentati0_.event as event2_0_, presentati0_.location as location2_0_, presentati0_.name as name2_0_, presentati0_.presenter_id as presenter6_2_0_, presentati0_.url as url2_0_ from Presentation presentati0_ where presentati0_.id=? for update
10 Sep 2011 22:09:25,071 DEBUG ~ Static select for entity models.Presentation [PESSIMISTIC_WRITE]: select presentati0_.id as id2_0_, presentati0_.event as event2_0_, presentati0_.location as location2_0_, presentati0_.name as name2_0_, presentati0_.presenter_id as presenter6_2_0_, presentati0_.url as url2_0_ from Presentation presentati0_ where presentati0_.id=? for update
10 Sep 2011 22:09:25,071 DEBUG ~ Static select for entity models.Presentation [PESSIMISTIC_FORCE_INCREMENT]: select presentati0_.id as id2_0_, presentati0_.event as event2_0_, presentati0_.location as location2_0_, presentati0_.name as name2_0_, presentati0_.presenter_id as presenter6_2_0_, presentati0_.url as url2_0_ from Presentation presentati0_ where presentati0_.id=? for update
10 Sep 2011 22:09:25,071 DEBUG ~ Static select for entity models.Presentation [OPTIMISTIC]: select presentati0_.id as id2_1_, presentati0_.event as event2_1_, presentati0_.location as location2_1_, presentati0_.name as name2_1_, presentati0_.presenter_id as presenter6_2_1_, presentati0_.url as url2_1_, instructor1_.id as id5_0_, instructor1_.bio as bio5_0_, instructor1_.image as image5_0_, instructor1_.largeImage as largeImage5_0_, instructor1_.name as name5_0_, instructor1_.resume as resume5_0_, instructor1_.twitterId as twitterId5_0_, instructor1_.website as website5_0_ from Presentation presentati0_ left outer join Instructor instructor1_ on presentati0_.presenter_id=instructor1_.id where presentati0_.id=?
10 Sep 2011 22:09:25,072 DEBUG ~ Static select for entity models.Presentation [OPTIMISTIC_FORCE_INCREMENT]: select presentati0_.id as id2_1_, presentati0_.event as event2_1_, presentati0_.location as location2_1_, presentati0_.name as name2_1_, presentati0_.presenter_id as presenter6_2_1_, presentati0_.url as url2_1_, instructor1_.id as id5_0_, instructor1_.bio as bio5_0_, instructor1_.image as image5_0_, instructor1_.largeImage as largeImage5_0_, instructor1_.name as name5_0_, instructor1_.resume as resume5_0_, instructor1_.twitterId as twitterId5_0_, instructor1_.website as website5_0_ from Presentation presentati0_ left outer join Instructor instructor1_ on presentati0_.presenter_id=instructor1_.id where presentati0_.id=?
10 Sep 2011 22:09:25,072 DEBUG ~ Static select for action ACTION_MERGE on entity models.Presentation: select presentati0_.id as id2_0_, presentati0_.event as event2_0_, presentati0_.location as location2_0_, presentati0_.name as name2_0_, presentati0_.presenter_id as presenter6_2_0_, presentati0_.url as url2_0_ from Presentation presentati0_ where presentati0_.id=?
10 Sep 2011 22:09:25,072 DEBUG ~ Static select for action ACTION_REFRESH on entity models.Presentation: select presentati0_.id as id2_0_, presentati0_.event as event2_0_, presentati0_.location as location2_0_, presentati0_.name as name2_0_, presentati0_.presenter_id as presenter6_2_0_, presentati0_.url as url2_0_ from Presentation presentati0_ where presentati0_.id=?
10 Sep 2011 22:09:25,076 DEBUG ~ Static select for collection models.Instructor.presentations: select presentati0_.Instructor_id as Instructor1_5_2_, presentati0_.presentations_id as presenta2_2_, presentati1_.id as id2_0_, presentati1_.event as event2_0_, presentati1_.location as location2_0_, presentati1_.name as name2_0_, presentati1_.presenter_id as presenter6_2_0_, presentati1_.url as url2_0_, instructor2_.id as id5_1_, instructor2_.bio as bio5_1_, instructor2_.image as image5_1_, instructor2_.largeImage as largeImage5_1_, instructor2_.name as name5_1_, instructor2_.resume as resume5_1_, instructor2_.twitterId as twitterId5_1_, instructor2_.website as website5_1_ from Instructor_Presentation presentati0_ inner join Presentation presentati1_ on presentati0_.presentations_id=presentati1_.id left outer join Instructor instructor2_ on presentati1_.presenter_id=instructor2_.id where presentati0_.Instructor_id=?
10 Sep 2011 22:09:25,076 DEBUG ~ Static select for collection models.Instructor.books: select books0_.Instructor_id as Instructor1_5_2_, books0_.books_id as books2_2_, book1_.id as id7_0_, book1_.author_id as author5_7_0_, book1_.externalUrl as external2_7_0_, book1_.imageUrl as imageUrl7_0_, book1_.title as title7_0_, instructor2_.id as id5_1_, instructor2_.bio as bio5_1_, instructor2_.image as image5_1_, instructor2_.largeImage as largeImage5_1_, instructor2_.name as name5_1_, instructor2_.resume as resume5_1_, instructor2_.twitterId as twitterId5_1_, instructor2_.website as website5_1_ from Instructor_Book books0_ inner join Book book1_ on books0_.books_id=book1_.id left outer join Instructor instructor2_ on book1_.author_id=instructor2_.id where books0_.Instructor_id=?
10 Sep 2011 22:09:25,078 DEBUG ~ Static select for one-to-many models.Course.participants: select participan0_.course_id as course10_6_1_, participan0_.id as id1_, participan0_.id as id8_0_, participan0_.address as address8_0_, participan0_.billed as billed8_0_, participan0_.company as company8_0_, participan0_.course_id as course10_8_0_, participan0_.email as email8_0_, participan0_.name as name8_0_, participan0_.orgNumber as orgNumber8_0_, participan0_.paymentReceived as paymentR8_8_0_, participan0_.telephonenumber as telephon9_8_0_ from Participant participan0_ where participan0_.course_id=?
10 Sep 2011 22:09:25,078 DEBUG ~ Static select for one-to-many models.Instructor.courses: select courses0_.instructor_id as instructor10_5_2_, courses0_.id as id2_, courses0_.id as id6_1_, courses0_.description as descript2_6_1_, courses0_.earlyBird as earlyBird6_1_, courses0_.earlyBirdEndDate as earlyBir4_6_1_, courses0_.endDate as endDate6_1_, courses0_.instructor_id as instructor10_6_1_, courses0_.location_id as location11_6_1_, courses0_.maxNumberOfParticipants as maxNumbe6_6_1_, courses0_.name as name6_1_, courses0_.price as price6_1_, courses0_.startDate as startDate6_1_, location1_.id as id0_0_, location1_.address as address0_0_, location1_.map as map0_0_, location1_.mapUrl as mapUrl0_0_, location1_.name as name0_0_, location1_.postal as postal0_0_, location1_.telephoneNumber as telephon7_0_0_, location1_.url as url0_0_ from Course courses0_ left outer join Location location1_ on courses0_.location_id=location1_.id where courses0_.instructor_id=?
10 Sep 2011 22:09:25,079 DEBUG ~ Static select for one-to-many models.Location.courses: select courses0_.location_id as location11_0_2_, courses0_.id as id2_, courses0_.id as id6_1_, courses0_.description as descript2_6_1_, courses0_.earlyBird as earlyBird6_1_, courses0_.earlyBirdEndDate as earlyBir4_6_1_, courses0_.endDate as endDate6_1_, courses0_.instructor_id as instructor10_6_1_, courses0_.location_id as location11_6_1_, courses0_.maxNumberOfParticipants as maxNumbe6_6_1_, courses0_.name as name6_1_, courses0_.price as price6_1_, courses0_.startDate as startDate6_1_, instructor1_.id as id5_0_, instructor1_.bio as bio5_0_, instructor1_.image as image5_0_, instructor1_.largeImage as largeImage5_0_, instructor1_.name as name5_0_, instructor1_.resume as resume5_0_, instructor1_.twitterId as twitterId5_0_, instructor1_.website as website5_0_ from Course courses0_ left outer join Instructor instructor1_ on courses0_.instructor_id=instructor1_.id where courses0_.location_id=?
10 Sep 2011 22:09:25,080 DEBUG ~ initializing class SessionFactoryObjectFactory
10 Sep 2011 22:09:25,081 DEBUG ~ registered: 74c97e9b-4318-4da9-b5d1-a36c3560f9b7 (unnamed)
10 Sep 2011 22:09:25,081 INFO  ~ Not binding factory to JNDI, no JNDI name configured
10 Sep 2011 22:09:25,081 DEBUG ~ instantiated session factory
10 Sep 2011 22:09:25,103 DEBUG ~ Processing hbm.xml files
10 Sep 2011 22:09:25,103 DEBUG ~ Process annotated classes
10 Sep 2011 22:09:25,103 DEBUG ~ processing fk mappings (*ToOne and JoinedSubclass)
10 Sep 2011 22:09:25,104 DEBUG ~ processing extends queue
10 Sep 2011 22:09:25,104 DEBUG ~ processing extends queue
10 Sep 2011 22:09:25,104 DEBUG ~ processing collection mappings
10 Sep 2011 22:09:25,104 DEBUG ~ processing native query and ResultSetMapping mappings
10 Sep 2011 22:09:25,104 DEBUG ~ processing association property references
10 Sep 2011 22:09:25,104 DEBUG ~ processing foreign key constraints
10 Sep 2011 22:09:25,104 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,104 DEBUG ~ resolving reference to class: models.Location
10 Sep 2011 22:09:25,104 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,104 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,104 DEBUG ~ resolving reference to class: models.Book
10 Sep 2011 22:09:25,104 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,104 DEBUG ~ resolving reference to class: models.Presentation
10 Sep 2011 22:09:25,104 DEBUG ~ resolving reference to class: models.Course
10 Sep 2011 22:09:25,104 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,105 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,106 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,106 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,106 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,106 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,106 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,106 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,106 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,106 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,107 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,107 DEBUG ~ Processing hbm.xml files
10 Sep 2011 22:09:25,107 DEBUG ~ Process annotated classes
10 Sep 2011 22:09:25,107 DEBUG ~ processing fk mappings (*ToOne and JoinedSubclass)
10 Sep 2011 22:09:25,107 DEBUG ~ processing extends queue
10 Sep 2011 22:09:25,107 DEBUG ~ processing extends queue
10 Sep 2011 22:09:25,107 DEBUG ~ processing collection mappings
10 Sep 2011 22:09:25,107 DEBUG ~ processing native query and ResultSetMapping mappings
10 Sep 2011 22:09:25,107 DEBUG ~ processing association property references
10 Sep 2011 22:09:25,107 DEBUG ~ processing foreign key constraints
10 Sep 2011 22:09:25,107 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,107 DEBUG ~ resolving reference to class: models.Location
10 Sep 2011 22:09:25,107 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,107 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,107 DEBUG ~ resolving reference to class: models.Book
10 Sep 2011 22:09:25,107 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,107 DEBUG ~ resolving reference to class: models.Presentation
10 Sep 2011 22:09:25,107 DEBUG ~ resolving reference to class: models.Course
10 Sep 2011 22:09:25,107 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,108 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,108 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,109 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,109 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,109 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,109 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,109 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,110 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,110 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,110 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,110 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,110 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,110 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,110 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,110 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,110 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,110 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,111 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,111 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,111 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,113 INFO  ~ Running hbm2ddl schema export
10 Sep 2011 22:09:25,114 DEBUG ~ import file not found: /import.sql
10 Sep 2011 22:09:25,114 INFO  ~ exporting generated schema to database
10 Sep 2011 22:09:25,119 DEBUG ~ alter table Book drop constraint FK1FAF0953E3BB10
10 Sep 2011 22:09:25,128 DEBUG ~ Unsuccessful: alter table Book drop constraint FK1FAF0953E3BB10
10 Sep 2011 22:09:25,128 DEBUG ~ Table "BOOK" not found; SQL statement:
alter table Book drop constraint FK1FAF0953E3BB10 [42102-149]
10 Sep 2011 22:09:25,128 DEBUG ~ alter table Course drop constraint FK78A7CC3B2DB65CBE
10 Sep 2011 22:09:25,129 DEBUG ~ Unsuccessful: alter table Course drop constraint FK78A7CC3B2DB65CBE
10 Sep 2011 22:09:25,129 DEBUG ~ Table "COURSE" not found; SQL statement:
alter table Course drop constraint FK78A7CC3B2DB65CBE [42102-149]
10 Sep 2011 22:09:25,129 DEBUG ~ alter table Course drop constraint FK78A7CC3B73B59ABE
10 Sep 2011 22:09:25,130 DEBUG ~ Unsuccessful: alter table Course drop constraint FK78A7CC3B73B59ABE
10 Sep 2011 22:09:25,130 DEBUG ~ Table "COURSE" not found; SQL statement:
alter table Course drop constraint FK78A7CC3B73B59ABE [42102-149]
10 Sep 2011 22:09:25,130 DEBUG ~ alter table Instructor_Book drop constraint FK61D6E94B73B59ABE
10 Sep 2011 22:09:25,132 DEBUG ~ Unsuccessful: alter table Instructor_Book drop constraint FK61D6E94B73B59ABE
10 Sep 2011 22:09:25,132 DEBUG ~ Table "INSTRUCTOR_BOOK" not found; SQL statement:
alter table Instructor_Book drop constraint FK61D6E94B73B59ABE [42102-149]
10 Sep 2011 22:09:25,132 DEBUG ~ alter table Instructor_Book drop constraint FK61D6E94BC75AC6DD
10 Sep 2011 22:09:25,133 DEBUG ~ Unsuccessful: alter table Instructor_Book drop constraint FK61D6E94BC75AC6DD
10 Sep 2011 22:09:25,133 DEBUG ~ Table "INSTRUCTOR_BOOK" not found; SQL statement:
alter table Instructor_Book drop constraint FK61D6E94BC75AC6DD [42102-149]
10 Sep 2011 22:09:25,133 DEBUG ~ alter table Instructor_Presentation drop constraint FKA8D82B7C73B59ABE
10 Sep 2011 22:09:25,135 DEBUG ~ Unsuccessful: alter table Instructor_Presentation drop constraint FKA8D82B7C73B59ABE
10 Sep 2011 22:09:25,135 DEBUG ~ Table "INSTRUCTOR_PRESENTATION" not found; SQL statement:
alter table Instructor_Presentation drop constraint FKA8D82B7C73B59ABE [42102-149]
10 Sep 2011 22:09:25,135 DEBUG ~ alter table Instructor_Presentation drop constraint FKA8D82B7C1B5F6ABF
10 Sep 2011 22:09:25,136 DEBUG ~ Unsuccessful: alter table Instructor_Presentation drop constraint FKA8D82B7C1B5F6ABF
10 Sep 2011 22:09:25,136 DEBUG ~ Table "INSTRUCTOR_PRESENTATION" not found; SQL statement:
alter table Instructor_Presentation drop constraint FKA8D82B7C1B5F6ABF [42102-149]
10 Sep 2011 22:09:25,136 DEBUG ~ alter table Participant drop constraint FK91279713F68B33FE
10 Sep 2011 22:09:25,137 DEBUG ~ Unsuccessful: alter table Participant drop constraint FK91279713F68B33FE
10 Sep 2011 22:09:25,137 DEBUG ~ Table "PARTICIPANT" not found; SQL statement:
alter table Participant drop constraint FK91279713F68B33FE [42102-149]
10 Sep 2011 22:09:25,137 DEBUG ~ alter table Presentation drop constraint FK3356533A25B228D3
10 Sep 2011 22:09:25,138 DEBUG ~ Unsuccessful: alter table Presentation drop constraint FK3356533A25B228D3
10 Sep 2011 22:09:25,138 DEBUG ~ Table "PRESENTATION" not found; SQL statement:
alter table Presentation drop constraint FK3356533A25B228D3 [42102-149]
10 Sep 2011 22:09:25,138 DEBUG ~ drop table Book if exists
10 Sep 2011 22:09:25,139 DEBUG ~ drop table Course if exists
10 Sep 2011 22:09:25,139 DEBUG ~ drop table CourseInterest if exists
10 Sep 2011 22:09:25,139 DEBUG ~ drop table Evaluation if exists
10 Sep 2011 22:09:25,139 DEBUG ~ drop table Instructor if exists
10 Sep 2011 22:09:25,139 DEBUG ~ drop table Instructor_Book if exists
10 Sep 2011 22:09:25,139 DEBUG ~ drop table Instructor_Presentation if exists
10 Sep 2011 22:09:25,139 DEBUG ~ drop table Location if exists
10 Sep 2011 22:09:25,139 DEBUG ~ drop table Participant if exists
10 Sep 2011 22:09:25,140 DEBUG ~ drop table Presentation if exists
10 Sep 2011 22:09:25,140 DEBUG ~ drop table Site if exists
10 Sep 2011 22:09:25,140 DEBUG ~ drop table User if exists
10 Sep 2011 22:09:25,140 DEBUG ~ create table Book (id bigint generated by default as identity, externalUrl varchar(255), imageUrl varchar(255), title varchar(255), author_id bigint, primary key (id))
10 Sep 2011 22:09:25,158 DEBUG ~ create table Course (id bigint generated by default as identity, description clob, earlyBird integer not null, earlyBirdEndDate timestamp, endDate timestamp, maxNumberOfParticipants integer not null, name varchar(255), price integer not null, startDate timestamp, instructor_id bigint, location_id bigint, primary key (id))
10 Sep 2011 22:09:25,169 DEBUG ~ create table CourseInterest (id bigint generated by default as identity, courseName varchar(255), email varchar(255), participantName varchar(255), telephoneNumber varchar(255), primary key (id))
10 Sep 2011 22:09:25,170 DEBUG ~ create table Evaluation (id bigint generated by default as identity, primary key (id))
10 Sep 2011 22:09:25,170 DEBUG ~ create table Instructor (id bigint generated by default as identity, bio clob, image varchar(255), largeImage varchar(255), name varchar(255), resume clob, twitterId varchar(255), website varchar(255), primary key (id))
10 Sep 2011 22:09:25,172 DEBUG ~ create table Instructor_Book (Instructor_id bigint not null, books_id bigint not null, unique (books_id))
10 Sep 2011 22:09:25,172 DEBUG ~ create table Instructor_Presentation (Instructor_id bigint not null, presentations_id bigint not null, unique (presentations_id))
10 Sep 2011 22:09:25,173 DEBUG ~ create table Location (id bigint generated by default as identity, address varchar(255), map clob, mapUrl clob, name varchar(255), postal varchar(255), telephoneNumber varchar(255), url varchar(255), primary key (id))
10 Sep 2011 22:09:25,174 DEBUG ~ create table Participant (id bigint generated by default as identity, address varchar(255), billed boolean not null, company varchar(255), email varchar(255), name varchar(255), orgNumber varchar(255), paymentReceived boolean not null, telephonenumber varchar(255), course_id bigint, primary key (id))
10 Sep 2011 22:09:25,175 DEBUG ~ create table Presentation (id bigint generated by default as identity, event varchar(255), location varchar(255), name varchar(255), url varchar(255), presenter_id bigint, primary key (id))
10 Sep 2011 22:09:25,175 DEBUG ~ create table Site (id bigint generated by default as identity, description varchar(255), name varchar(255), url varchar(255), primary key (id))
10 Sep 2011 22:09:25,176 DEBUG ~ create table User (id bigint generated by default as identity, email varchar(255), fullName varchar(255), isAdmin boolean not null, password varchar(255), primary key (id))
10 Sep 2011 22:09:25,177 DEBUG ~ alter table Book add constraint FK1FAF0953E3BB10 foreign key (author_id) references Instructor
10 Sep 2011 22:09:25,185 DEBUG ~ alter table Course add constraint FK78A7CC3B2DB65CBE foreign key (location_id) references Location
10 Sep 2011 22:09:25,187 DEBUG ~ alter table Course add constraint FK78A7CC3B73B59ABE foreign key (instructor_id) references Instructor
10 Sep 2011 22:09:25,219 DEBUG ~ alter table Instructor_Book add constraint FK61D6E94B73B59ABE foreign key (Instructor_id) references Instructor
10 Sep 2011 22:09:25,231 DEBUG ~ alter table Instructor_Book add constraint FK61D6E94BC75AC6DD foreign key (books_id) references Book
10 Sep 2011 22:09:25,232 DEBUG ~ alter table Instructor_Presentation add constraint FKA8D82B7C73B59ABE foreign key (Instructor_id) references Instructor
10 Sep 2011 22:09:25,233 DEBUG ~ alter table Instructor_Presentation add constraint FKA8D82B7C1B5F6ABF foreign key (presentations_id) references Presentation
10 Sep 2011 22:09:25,234 DEBUG ~ alter table Participant add constraint FK91279713F68B33FE foreign key (course_id) references Course
10 Sep 2011 22:09:25,235 DEBUG ~ alter table Presentation add constraint FK3356533A25B228D3 foreign key (presenter_id) references Instructor
10 Sep 2011 22:09:25,237 INFO  ~ schema export complete
10 Sep 2011 22:09:25,240 DEBUG ~ Processing hbm.xml files
10 Sep 2011 22:09:25,240 DEBUG ~ Process annotated classes
10 Sep 2011 22:09:25,240 DEBUG ~ processing fk mappings (*ToOne and JoinedSubclass)
10 Sep 2011 22:09:25,240 DEBUG ~ processing extends queue
10 Sep 2011 22:09:25,240 DEBUG ~ processing extends queue
10 Sep 2011 22:09:25,240 DEBUG ~ processing collection mappings
10 Sep 2011 22:09:25,240 DEBUG ~ processing native query and ResultSetMapping mappings
10 Sep 2011 22:09:25,240 DEBUG ~ processing association property references
10 Sep 2011 22:09:25,240 DEBUG ~ processing foreign key constraints
10 Sep 2011 22:09:25,240 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,240 DEBUG ~ resolving reference to class: models.Location
10 Sep 2011 22:09:25,240 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,240 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,240 DEBUG ~ resolving reference to class: models.Book
10 Sep 2011 22:09:25,240 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,240 DEBUG ~ resolving reference to class: models.Presentation
10 Sep 2011 22:09:25,240 DEBUG ~ resolving reference to class: models.Course
10 Sep 2011 22:09:25,243 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,244 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,244 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,244 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,244 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,244 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,244 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,245 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,245 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,245 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,245 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,245 DEBUG ~ Processing hbm.xml files
10 Sep 2011 22:09:25,245 DEBUG ~ Process annotated classes
10 Sep 2011 22:09:25,245 DEBUG ~ processing fk mappings (*ToOne and JoinedSubclass)
10 Sep 2011 22:09:25,245 DEBUG ~ processing extends queue
10 Sep 2011 22:09:25,245 DEBUG ~ processing extends queue
10 Sep 2011 22:09:25,245 DEBUG ~ processing collection mappings
10 Sep 2011 22:09:25,245 DEBUG ~ processing native query and ResultSetMapping mappings
10 Sep 2011 22:09:25,245 DEBUG ~ processing association property references
10 Sep 2011 22:09:25,245 DEBUG ~ processing foreign key constraints
10 Sep 2011 22:09:25,245 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,245 DEBUG ~ resolving reference to class: models.Location
10 Sep 2011 22:09:25,245 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,245 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,245 DEBUG ~ resolving reference to class: models.Book
10 Sep 2011 22:09:25,245 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,245 DEBUG ~ resolving reference to class: models.Presentation
10 Sep 2011 22:09:25,245 DEBUG ~ resolving reference to class: models.Course
10 Sep 2011 22:09:25,245 DEBUG ~ resolving reference to class: models.Instructor
10 Sep 2011 22:09:25,246 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,246 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,247 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,247 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,247 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,247 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,247 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,247 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,247 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,248 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,248 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,248 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,248 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,248 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,248 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,248 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,248 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,248 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,248 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,249 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
10 Sep 2011 22:09:25,249 DEBUG ~ Checking 0 named HQL queries
10 Sep 2011 22:09:25,249 DEBUG ~ Checking 0 named SQL queries
10 Sep 2011 22:09:25,311 INFO  ~ Application 'CourseBooking' is now started !
10 Sep 2011 22:09:25,368 DEBUG ~ opened session at timestamp: 13156853653
10 Sep 2011 22:09:25,372 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:09:25,373 DEBUG ~ begin
10 Sep 2011 22:09:25,373 DEBUG ~ opening JDBC connection
10 Sep 2011 22:09:25,374 DEBUG ~ current autocommit status: true
10 Sep 2011 22:09:25,374 DEBUG ~ disabling autocommit
10 Sep 2011 22:09:25,436 DEBUG ~ parse() - HQL: select count(*) from models.User e
10 Sep 2011 22:09:25,442 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'

10 Sep 2011 22:09:25,442 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:09:25,473 DEBUG ~ select << begin [level=1, statement=select]
10 Sep 2011 22:09:25,488 DEBUG ~ FromClause{level=1} :  models.User (e) -> user0_
10 Sep 2011 22:09:25,491 DEBUG ~ select : finishing up [level=1, statement=select]
10 Sep 2011 22:09:25,491 DEBUG ~ processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} User user0_ ) )
10 Sep 2011 22:09:25,497 DEBUG ~ Using FROM fragment [User user0_]
10 Sep 2011 22:09:25,497 DEBUG ~ select >> end [level=1, statement=select]
10 Sep 2011 22:09:25,498 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (User)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}

10 Sep 2011 22:09:25,498 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:09:25,513 DEBUG ~ HQL: select count(*) from models.User e
10 Sep 2011 22:09:25,513 DEBUG ~ SQL: select count(*) as col_0_0_ from User user0_
10 Sep 2011 22:09:25,513 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:09:25,523 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:25,556 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:09:25,564 DEBUG ~ result row: 
10 Sep 2011 22:09:25,566 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:09:25,568 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:25,569 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:09:25,971 DEBUG ~ executing identity-insert immediately
10 Sep 2011 22:09:25,972 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:25,979 DEBUG ~ Natively generated identity: 1
10 Sep 2011 22:09:25,979 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:25,984 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:09:25,985 DEBUG ~ dirty checking collections
10 Sep 2011 22:09:25,993 DEBUG ~ Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
10 Sep 2011 22:09:25,993 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:09:25,994 DEBUG ~ listing entities:
10 Sep 2011 22:09:25,994 DEBUG ~ models.Instructor{id=1, books=null, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=null, courses=null, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=null, image=null, twitterId=agilemanager}
10 Sep 2011 22:09:25,998 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,000 DEBUG ~ Executing batch size: 1
10 Sep 2011 22:09:26,001 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,009 DEBUG ~ parse() - HQL: from models.Instructor where id = ?
10 Sep 2011 22:09:26,011 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'Instructor'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'

10 Sep 2011 22:09:26,012 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:09:26,012 DEBUG ~ select << begin [level=1, statement=select]
10 Sep 2011 22:09:26,012 DEBUG ~ FromClause{level=1} :  models.Instructor (no alias) -> instructor0_
10 Sep 2011 22:09:26,015 DEBUG ~ Resolved :  {synthetic-alias} -> {synthetic-alias}
10 Sep 2011 22:09:26,017 DEBUG ~ getDataType() : id -> org.hibernate.type.LongType@68111f9b
10 Sep 2011 22:09:26,017 DEBUG ~ Resolved :  {synthetic-alias}.id -> instructor0_.id
10 Sep 2011 22:09:26,030 DEBUG ~ select : finishing up [level=1, statement=select]
10 Sep 2011 22:09:26,030 DEBUG ~ processQuery() :  ( SELECT ( FromClause{level=1} Instructor instructor0_ ) ( where ( = ( instructor0_.id {synthetic-alias} id ) ? ) ) )
10 Sep 2011 22:09:26,032 DEBUG ~ Derived SELECT clause created.
10 Sep 2011 22:09:26,032 DEBUG ~ Using FROM fragment [Instructor instructor0_]
10 Sep 2011 22:09:26,032 DEBUG ~ select >> end [level=1, statement=select]
10 Sep 2011 22:09:26,033 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Instructor)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'instructor0_.id as id5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Instructor,tableAlias=instructor0_,origin=null,columns={,className=models.Instructor}}}
    |  \-[SQL_TOKEN] SqlFragment: 'instructor0_.bio as bio5_, instructor0_.image as image5_, instructor0_.largeImage as largeImage5_, instructor0_.name as name5_, instructor0_.resume as resume5_, instructor0_.twitterId as twitterId5_, instructor0_.website as website5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[instructor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Instructor instructor0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Instructor,tableAlias=instructor0_,origin=null,columns={,className=models.Instructor}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'instructor0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=instructor0_,className=models.Instructor,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.LongType@68111f9b}

10 Sep 2011 22:09:26,033 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:09:26,034 DEBUG ~ HQL: from models.Instructor where id = ?
10 Sep 2011 22:09:26,034 DEBUG ~ SQL: select instructor0_.id as id5_, instructor0_.bio as bio5_, instructor0_.image as image5_, instructor0_.largeImage as largeImage5_, instructor0_.name as name5_, instructor0_.resume as resume5_, instructor0_.twitterId as twitterId5_, instructor0_.website as website5_ from Instructor instructor0_ where instructor0_.id=?
10 Sep 2011 22:09:26,034 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:09:26,036 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,037 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:09:26,038 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:09:26,038 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:09:26,040 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,040 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:09:26,048 DEBUG ~ executing identity-insert immediately
10 Sep 2011 22:09:26,048 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,049 DEBUG ~ Natively generated identity: 1
10 Sep 2011 22:09:26,049 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,049 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:09:26,050 DEBUG ~ dirty checking collections
10 Sep 2011 22:09:26,050 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
10 Sep 2011 22:09:26,050 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:09:26,050 DEBUG ~ listing entities:
10 Sep 2011 22:09:26,050 DEBUG ~ models.Presentation{id=1, location=Helsinki, event=Less2010, name=Bringing Excellence to Service Delivery, url=http://www.cs.helsinki.fi/en/video/anderson, presenter=models.Instructor#1}
10 Sep 2011 22:09:26,050 DEBUG ~ models.Instructor{id=1, books=null, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=null, courses=null, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=null, image=null, twitterId=agilemanager}
10 Sep 2011 22:09:26,059 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,059 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:09:26,059 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:09:26,059 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:09:26,061 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,061 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:09:26,069 DEBUG ~ executing identity-insert immediately
10 Sep 2011 22:09:26,069 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,069 DEBUG ~ Natively generated identity: 1
10 Sep 2011 22:09:26,069 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,070 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:09:26,070 DEBUG ~ dirty checking collections
10 Sep 2011 22:09:26,070 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
10 Sep 2011 22:09:26,070 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:09:26,070 DEBUG ~ listing entities:
10 Sep 2011 22:09:26,070 DEBUG ~ models.Book{id=1, author=models.Instructor#1, title=Kanban - Successful Evolutionary Change for Your Technology Business, imageUrl=KanbanBook.jpg, externalUrl=http://agilemanagement.net/index.php/site/kanbanbook/}
10 Sep 2011 22:09:26,070 DEBUG ~ models.Presentation{id=1, location=Helsinki, event=Less2010, name=Bringing Excellence to Service Delivery, url=http://www.cs.helsinki.fi/en/video/anderson, presenter=models.Instructor#1}
10 Sep 2011 22:09:26,071 DEBUG ~ models.Instructor{id=1, books=null, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=null, courses=null, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=null, image=null, twitterId=agilemanager}
10 Sep 2011 22:09:26,075 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,076 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:09:26,076 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:09:26,076 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:09:26,077 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,077 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:09:26,095 DEBUG ~ executing identity-insert immediately
10 Sep 2011 22:09:26,095 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,096 DEBUG ~ Natively generated identity: 2
10 Sep 2011 22:09:26,096 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,096 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:09:26,096 DEBUG ~ dirty checking collections
10 Sep 2011 22:09:26,097 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
10 Sep 2011 22:09:26,097 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:09:26,097 DEBUG ~ listing entities:
10 Sep 2011 22:09:26,097 DEBUG ~ models.Book{id=1, author=models.Instructor#1, title=Kanban - Successful Evolutionary Change for Your Technology Business, imageUrl=KanbanBook.jpg, externalUrl=http://agilemanagement.net/index.php/site/kanbanbook/}
10 Sep 2011 22:09:26,097 DEBUG ~ models.Presentation{id=1, location=Helsinki, event=Less2010, name=Bringing Excellence to Service Delivery, url=http://www.cs.helsinki.fi/en/video/anderson, presenter=models.Instructor#1}
10 Sep 2011 22:09:26,097 DEBUG ~ models.Instructor{id=1, books=null, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=null, courses=null, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=null, image=null, twitterId=agilemanager}
10 Sep 2011 22:09:26,097 DEBUG ~ models.Book{id=2, author=models.Instructor#1, title=Agile Management for Software Engineering, imageUrl=agilemanagement.jpg, externalUrl=http://www.amazon.com/Agile-Management-Software-Engineering-Constraints/dp/0131424602/ref=sr_1_3?s=books&ie=UTF8&qid=1295387560&sr=1-3}
10 Sep 2011 22:09:26,104 DEBUG ~ executing identity-insert immediately
10 Sep 2011 22:09:26,105 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,105 DEBUG ~ Natively generated identity: 1
10 Sep 2011 22:09:26,105 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,105 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:09:26,106 DEBUG ~ dirty checking collections
10 Sep 2011 22:09:26,106 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
10 Sep 2011 22:09:26,106 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:09:26,106 DEBUG ~ listing entities:
10 Sep 2011 22:09:26,106 DEBUG ~ models.Book{id=1, author=models.Instructor#1, title=Kanban - Successful Evolutionary Change for Your Technology Business, imageUrl=KanbanBook.jpg, externalUrl=http://agilemanagement.net/index.php/site/kanbanbook/}
10 Sep 2011 22:09:26,106 DEBUG ~ models.Presentation{id=1, location=Helsinki, event=Less2010, name=Bringing Excellence to Service Delivery, url=http://www.cs.helsinki.fi/en/video/anderson, presenter=models.Instructor#1}
10 Sep 2011 22:09:26,106 DEBUG ~ models.Site{id=1, description=The official website for Kanban resources on the net. The material on this site has been approved by some of the leading people in the Kanban commity.
, name=Limited WIP Socitety, url=http:limitedwipsociety.org}
10 Sep 2011 22:09:26,106 DEBUG ~ models.Instructor{id=1, books=null, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=null, courses=null, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=null, image=null, twitterId=agilemanager}
10 Sep 2011 22:09:26,106 DEBUG ~ models.Book{id=2, author=models.Instructor#1, title=Agile Management for Software Engineering, imageUrl=agilemanagement.jpg, externalUrl=http://www.amazon.com/Agile-Management-Software-Engineering-Constraints/dp/0131424602/ref=sr_1_3?s=books&ie=UTF8&qid=1295387560&sr=1-3}
10 Sep 2011 22:09:26,110 DEBUG ~ executing identity-insert immediately
10 Sep 2011 22:09:26,110 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,110 DEBUG ~ Natively generated identity: 2
10 Sep 2011 22:09:26,110 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,110 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:09:26,111 DEBUG ~ dirty checking collections
10 Sep 2011 22:09:26,113 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
10 Sep 2011 22:09:26,113 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:09:26,113 DEBUG ~ listing entities:
10 Sep 2011 22:09:26,113 DEBUG ~ models.Site{id=2, description=David J. Anderson's official website....
, name=agilemanagement, url=http://agilemanagement.net}
10 Sep 2011 22:09:26,113 DEBUG ~ models.Book{id=1, author=models.Instructor#1, title=Kanban - Successful Evolutionary Change for Your Technology Business, imageUrl=KanbanBook.jpg, externalUrl=http://agilemanagement.net/index.php/site/kanbanbook/}
10 Sep 2011 22:09:26,113 DEBUG ~ models.Presentation{id=1, location=Helsinki, event=Less2010, name=Bringing Excellence to Service Delivery, url=http://www.cs.helsinki.fi/en/video/anderson, presenter=models.Instructor#1}
10 Sep 2011 22:09:26,113 DEBUG ~ models.Site{id=1, description=The official website for Kanban resources on the net. The material on this site has been approved by some of the leading people in the Kanban commity.
, name=Limited WIP Socitety, url=http:limitedwipsociety.org}
10 Sep 2011 22:09:26,113 DEBUG ~ models.Instructor{id=1, books=null, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=null, courses=null, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=null, image=null, twitterId=agilemanager}
10 Sep 2011 22:09:26,113 DEBUG ~ models.Book{id=2, author=models.Instructor#1, title=Agile Management for Software Engineering, imageUrl=agilemanagement.jpg, externalUrl=http://www.amazon.com/Agile-Management-Software-Engineering-Constraints/dp/0131424602/ref=sr_1_3?s=books&ie=UTF8&qid=1295387560&sr=1-3}
10 Sep 2011 22:09:26,121 DEBUG ~ executing identity-insert immediately
10 Sep 2011 22:09:26,121 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,122 DEBUG ~ Natively generated identity: 1
10 Sep 2011 22:09:26,122 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,123 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:09:26,123 DEBUG ~ dirty checking collections
10 Sep 2011 22:09:26,123 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
10 Sep 2011 22:09:26,123 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:09:26,123 DEBUG ~ listing entities:
10 Sep 2011 22:09:26,123 DEBUG ~ models.Location{id=1, courses=null, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:09:26,123 DEBUG ~ models.Book{id=1, author=models.Instructor#1, title=Kanban - Successful Evolutionary Change for Your Technology Business, imageUrl=KanbanBook.jpg, externalUrl=http://agilemanagement.net/index.php/site/kanbanbook/}
10 Sep 2011 22:09:26,123 DEBUG ~ models.Site{id=2, description=David J. Anderson's official website....
, name=agilemanagement, url=http://agilemanagement.net}
10 Sep 2011 22:09:26,123 DEBUG ~ models.Presentation{id=1, location=Helsinki, event=Less2010, name=Bringing Excellence to Service Delivery, url=http://www.cs.helsinki.fi/en/video/anderson, presenter=models.Instructor#1}
10 Sep 2011 22:09:26,124 DEBUG ~ models.Site{id=1, description=The official website for Kanban resources on the net. The material on this site has been approved by some of the leading people in the Kanban commity.
, name=Limited WIP Socitety, url=http:limitedwipsociety.org}
10 Sep 2011 22:09:26,124 DEBUG ~ models.Instructor{id=1, books=null, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=null, courses=null, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=null, image=null, twitterId=agilemanager}
10 Sep 2011 22:09:26,124 DEBUG ~ models.Book{id=2, author=models.Instructor#1, title=Agile Management for Software Engineering, imageUrl=agilemanagement.jpg, externalUrl=http://www.amazon.com/Agile-Management-Software-Engineering-Constraints/dp/0131424602/ref=sr_1_3?s=books&ie=UTF8&qid=1295387560&sr=1-3}
10 Sep 2011 22:09:26,143 DEBUG ~ parse() - HQL: from models.Location where id = ?
10 Sep 2011 22:09:26,145 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'Location'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'

10 Sep 2011 22:09:26,145 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:09:26,145 DEBUG ~ select << begin [level=1, statement=select]
10 Sep 2011 22:09:26,146 DEBUG ~ FromClause{level=1} :  models.Location (no alias) -> location0_
10 Sep 2011 22:09:26,146 DEBUG ~ Resolved :  {synthetic-alias} -> {synthetic-alias}
10 Sep 2011 22:09:26,146 DEBUG ~ getDataType() : id -> org.hibernate.type.LongType@68111f9b
10 Sep 2011 22:09:26,146 DEBUG ~ Resolved :  {synthetic-alias}.id -> location0_.id
10 Sep 2011 22:09:26,146 DEBUG ~ select : finishing up [level=1, statement=select]
10 Sep 2011 22:09:26,146 DEBUG ~ processQuery() :  ( SELECT ( FromClause{level=1} Location location0_ ) ( where ( = ( location0_.id {synthetic-alias} id ) ? ) ) )
10 Sep 2011 22:09:26,146 DEBUG ~ Derived SELECT clause created.
10 Sep 2011 22:09:26,146 DEBUG ~ Using FROM fragment [Location location0_]
10 Sep 2011 22:09:26,146 DEBUG ~ select >> end [level=1, statement=select]
10 Sep 2011 22:09:26,147 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Location)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'location0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Location,tableAlias=location0_,origin=null,columns={,className=models.Location}}}
    |  \-[SQL_TOKEN] SqlFragment: 'location0_.address as address0_, location0_.map as map0_, location0_.mapUrl as mapUrl0_, location0_.name as name0_, location0_.postal as postal0_, location0_.telephoneNumber as telephon7_0_, location0_.url as url0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[location0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Location location0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Location,tableAlias=location0_,origin=null,columns={,className=models.Location}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'location0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=location0_,className=models.Location,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.LongType@68111f9b}

10 Sep 2011 22:09:26,147 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:09:26,147 DEBUG ~ HQL: from models.Location where id = ?
10 Sep 2011 22:09:26,147 DEBUG ~ SQL: select location0_.id as id0_, location0_.address as address0_, location0_.map as map0_, location0_.mapUrl as mapUrl0_, location0_.name as name0_, location0_.postal as postal0_, location0_.telephoneNumber as telephon7_0_, location0_.url as url0_ from Location location0_ where location0_.id=?
10 Sep 2011 22:09:26,147 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:09:26,149 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,149 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:09:26,149 DEBUG ~ result row: EntityKey[models.Location#1]
10 Sep 2011 22:09:26,149 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:09:26,151 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,151 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:09:26,157 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,158 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:09:26,158 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:09:26,158 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:09:26,159 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,159 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:09:26,309 DEBUG ~ executing identity-insert immediately
10 Sep 2011 22:09:26,310 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,343 DEBUG ~ Natively generated identity: 1
10 Sep 2011 22:09:26,343 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,345 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:09:26,345 DEBUG ~ dirty checking collections
10 Sep 2011 22:09:26,351 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 8 objects
10 Sep 2011 22:09:26,351 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:09:26,351 DEBUG ~ listing entities:
10 Sep 2011 22:09:26,351 DEBUG ~ models.Location{id=1, courses=null, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:09:26,351 DEBUG ~ models.Book{id=1, author=models.Instructor#1, title=Kanban - Successful Evolutionary Change for Your Technology Business, imageUrl=KanbanBook.jpg, externalUrl=http://agilemanagement.net/index.php/site/kanbanbook/}
10 Sep 2011 22:09:26,351 DEBUG ~ models.Site{id=2, description=David J. Anderson's official website....
, name=agilemanagement, url=http://agilemanagement.net}
10 Sep 2011 22:09:26,352 DEBUG ~ models.Presentation{id=1, location=Helsinki, event=Less2010, name=Bringing Excellence to Service Delivery, url=http://www.cs.helsinki.fi/en/video/anderson, presenter=models.Instructor#1}
10 Sep 2011 22:09:26,352 DEBUG ~ models.Site{id=1, description=The official website for Kanban resources on the net. The material on this site has been approved by some of the leading people in the Kanban commity.
, name=Limited WIP Socitety, url=http:limitedwipsociety.org}
10 Sep 2011 22:09:26,352 DEBUG ~ models.Instructor{id=1, books=null, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=null, courses=null, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=null, image=null, twitterId=agilemanager}
10 Sep 2011 22:09:26,352 DEBUG ~ models.Course{id=1, startDate=Mon Mar 28 02:00:00 CEST 2011, price=13000, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=Tue Feb 01 01:00:00 CET 2011, description=This is a description
, name=Kanban Training Class, maxNumberOfParticipants=20, endDate=Tue Mar 29 02:00:00 CEST 2011, earlyBird=12000, participants=null}
10 Sep 2011 22:09:26,352 DEBUG ~ models.Book{id=2, author=models.Instructor#1, title=Agile Management for Software Engineering, imageUrl=agilemanagement.jpg, externalUrl=http://www.amazon.com/Agile-Management-Software-Engineering-Constraints/dp/0131424602/ref=sr_1_3?s=books&ie=UTF8&qid=1295387560&sr=1-3}
10 Sep 2011 22:09:26,391 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,392 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:09:26,392 DEBUG ~ result row: EntityKey[models.Location#1]
10 Sep 2011 22:09:26,392 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:09:26,394 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,394 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:09:26,403 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,403 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:09:26,403 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:09:26,403 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:09:26,405 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,405 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:09:26,419 DEBUG ~ executing identity-insert immediately
10 Sep 2011 22:09:26,419 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,420 DEBUG ~ Natively generated identity: 2
10 Sep 2011 22:09:26,420 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,421 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:09:26,421 DEBUG ~ dirty checking collections
10 Sep 2011 22:09:26,421 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 9 objects
10 Sep 2011 22:09:26,422 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:09:26,422 DEBUG ~ listing entities:
10 Sep 2011 22:09:26,422 DEBUG ~ models.Location{id=1, courses=null, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:09:26,422 DEBUG ~ models.Book{id=1, author=models.Instructor#1, title=Kanban - Successful Evolutionary Change for Your Technology Business, imageUrl=KanbanBook.jpg, externalUrl=http://agilemanagement.net/index.php/site/kanbanbook/}
10 Sep 2011 22:09:26,422 DEBUG ~ models.Site{id=2, description=David J. Anderson's official website....
, name=agilemanagement, url=http://agilemanagement.net}
10 Sep 2011 22:09:26,422 DEBUG ~ models.Presentation{id=1, location=Helsinki, event=Less2010, name=Bringing Excellence to Service Delivery, url=http://www.cs.helsinki.fi/en/video/anderson, presenter=models.Instructor#1}
10 Sep 2011 22:09:26,422 DEBUG ~ models.Site{id=1, description=The official website for Kanban resources on the net. The material on this site has been approved by some of the leading people in the Kanban commity.
, name=Limited WIP Socitety, url=http:limitedwipsociety.org}
10 Sep 2011 22:09:26,422 DEBUG ~ models.Instructor{id=1, books=null, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=null, courses=null, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=null, image=null, twitterId=agilemanager}
10 Sep 2011 22:09:26,422 DEBUG ~ models.Course{id=1, startDate=Mon Mar 28 02:00:00 CEST 2011, price=13000, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=Tue Feb 01 01:00:00 CET 2011, description=This is a description
, name=Kanban Training Class, maxNumberOfParticipants=20, endDate=Tue Mar 29 02:00:00 CEST 2011, earlyBird=12000, participants=null}
10 Sep 2011 22:09:26,422 DEBUG ~ models.Course{id=2, startDate=Wed Mar 30 02:00:00 CEST 2011, price=0, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=null, description=This is a description
, name=SHIFT-ALT-CTRL Seminar, maxNumberOfParticipants=50, endDate=Wed Mar 30 02:00:00 CEST 2011, earlyBird=12000, participants=null}
10 Sep 2011 22:09:26,422 DEBUG ~ models.Book{id=2, author=models.Instructor#1, title=Agile Management for Software Engineering, imageUrl=agilemanagement.jpg, externalUrl=http://www.amazon.com/Agile-Management-Software-Engineering-Constraints/dp/0131424602/ref=sr_1_3?s=books&ie=UTF8&qid=1295387560&sr=1-3}
10 Sep 2011 22:09:26,440 DEBUG ~ executing identity-insert immediately
10 Sep 2011 22:09:26,441 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,442 DEBUG ~ Natively generated identity: 3
10 Sep 2011 22:09:26,442 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,443 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:09:26,444 DEBUG ~ dirty checking collections
10 Sep 2011 22:09:26,445 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 10 objects
10 Sep 2011 22:09:26,445 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:09:26,445 DEBUG ~ listing entities:
10 Sep 2011 22:09:26,445 DEBUG ~ models.Location{id=1, courses=null, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:09:26,445 DEBUG ~ models.Book{id=1, author=models.Instructor#1, title=Kanban - Successful Evolutionary Change for Your Technology Business, imageUrl=KanbanBook.jpg, externalUrl=http://agilemanagement.net/index.php/site/kanbanbook/}
10 Sep 2011 22:09:26,445 DEBUG ~ models.Site{id=2, description=David J. Anderson's official website....
, name=agilemanagement, url=http://agilemanagement.net}
10 Sep 2011 22:09:26,445 DEBUG ~ models.Presentation{id=1, location=Helsinki, event=Less2010, name=Bringing Excellence to Service Delivery, url=http://www.cs.helsinki.fi/en/video/anderson, presenter=models.Instructor#1}
10 Sep 2011 22:09:26,445 DEBUG ~ models.Site{id=1, description=The official website for Kanban resources on the net. The material on this site has been approved by some of the leading people in the Kanban commity.
, name=Limited WIP Socitety, url=http:limitedwipsociety.org}
10 Sep 2011 22:09:26,445 DEBUG ~ models.Instructor{id=1, books=null, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=null, courses=null, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=null, image=null, twitterId=agilemanager}
10 Sep 2011 22:09:26,445 DEBUG ~ models.Course{id=1, startDate=Mon Mar 28 02:00:00 CEST 2011, price=13000, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=Tue Feb 01 01:00:00 CET 2011, description=This is a description
, name=Kanban Training Class, maxNumberOfParticipants=20, endDate=Tue Mar 29 02:00:00 CEST 2011, earlyBird=12000, participants=null}
10 Sep 2011 22:09:26,446 DEBUG ~ models.Course{id=2, startDate=Wed Mar 30 02:00:00 CEST 2011, price=0, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=null, description=This is a description
, name=SHIFT-ALT-CTRL Seminar, maxNumberOfParticipants=50, endDate=Wed Mar 30 02:00:00 CEST 2011, earlyBird=12000, participants=null}
10 Sep 2011 22:09:26,446 DEBUG ~ models.Course{id=3, startDate=Thu Apr 21 02:00:00 CEST 2011, price=1000, instructor=null, location=null, earlyBirdEndDate=null, description=This is a very small course
, name=Small Course, maxNumberOfParticipants=1, endDate=Thu Apr 28 02:00:00 CEST 2011, earlyBird=500, participants=null}
10 Sep 2011 22:09:26,446 DEBUG ~ models.Book{id=2, author=models.Instructor#1, title=Agile Management for Software Engineering, imageUrl=agilemanagement.jpg, externalUrl=http://www.amazon.com/Agile-Management-Software-Engineering-Constraints/dp/0131424602/ref=sr_1_3?s=books&ie=UTF8&qid=1295387560&sr=1-3}
10 Sep 2011 22:09:26,458 DEBUG ~ executing identity-insert immediately
10 Sep 2011 22:09:26,458 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,459 DEBUG ~ Natively generated identity: 1
10 Sep 2011 22:09:26,459 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,460 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:09:26,460 DEBUG ~ dirty checking collections
10 Sep 2011 22:09:26,461 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
10 Sep 2011 22:09:26,461 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:09:26,461 DEBUG ~ listing entities:
10 Sep 2011 22:09:26,461 DEBUG ~ models.Location{id=1, courses=null, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:09:26,461 DEBUG ~ models.Participant{course=null, id=1, billed=false, email=ketil@miles.no, address=null, orgNumber=null, name=Ketil Jensen, company=Miles Oslo, telephonenumber=null, paymentReceived=false}
10 Sep 2011 22:09:26,461 DEBUG ~ models.Book{id=1, author=models.Instructor#1, title=Kanban - Successful Evolutionary Change for Your Technology Business, imageUrl=KanbanBook.jpg, externalUrl=http://agilemanagement.net/index.php/site/kanbanbook/}
10 Sep 2011 22:09:26,461 DEBUG ~ models.Site{id=2, description=David J. Anderson's official website....
, name=agilemanagement, url=http://agilemanagement.net}
10 Sep 2011 22:09:26,462 DEBUG ~ models.Presentation{id=1, location=Helsinki, event=Less2010, name=Bringing Excellence to Service Delivery, url=http://www.cs.helsinki.fi/en/video/anderson, presenter=models.Instructor#1}
10 Sep 2011 22:09:26,462 DEBUG ~ models.Site{id=1, description=The official website for Kanban resources on the net. The material on this site has been approved by some of the leading people in the Kanban commity.
, name=Limited WIP Socitety, url=http:limitedwipsociety.org}
10 Sep 2011 22:09:26,462 DEBUG ~ models.Instructor{id=1, books=null, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=null, courses=null, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=null, image=null, twitterId=agilemanager}
10 Sep 2011 22:09:26,462 DEBUG ~ models.Course{id=1, startDate=Mon Mar 28 02:00:00 CEST 2011, price=13000, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=Tue Feb 01 01:00:00 CET 2011, description=This is a description
, name=Kanban Training Class, maxNumberOfParticipants=20, endDate=Tue Mar 29 02:00:00 CEST 2011, earlyBird=12000, participants=null}
10 Sep 2011 22:09:26,462 DEBUG ~ models.Course{id=2, startDate=Wed Mar 30 02:00:00 CEST 2011, price=0, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=null, description=This is a description
, name=SHIFT-ALT-CTRL Seminar, maxNumberOfParticipants=50, endDate=Wed Mar 30 02:00:00 CEST 2011, earlyBird=12000, participants=null}
10 Sep 2011 22:09:26,462 DEBUG ~ models.Course{id=3, startDate=Thu Apr 21 02:00:00 CEST 2011, price=1000, instructor=null, location=null, earlyBirdEndDate=null, description=This is a very small course
, name=Small Course, maxNumberOfParticipants=1, endDate=Thu Apr 28 02:00:00 CEST 2011, earlyBird=500, participants=null}
10 Sep 2011 22:09:26,463 DEBUG ~ models.Book{id=2, author=models.Instructor#1, title=Agile Management for Software Engineering, imageUrl=agilemanagement.jpg, externalUrl=http://www.amazon.com/Agile-Management-Software-Engineering-Constraints/dp/0131424602/ref=sr_1_3?s=books&ie=UTF8&qid=1295387560&sr=1-3}
10 Sep 2011 22:09:26,471 DEBUG ~ executing identity-insert immediately
10 Sep 2011 22:09:26,471 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,471 DEBUG ~ Natively generated identity: 1
10 Sep 2011 22:09:26,472 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,472 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:09:26,472 DEBUG ~ dirty checking collections
10 Sep 2011 22:09:26,473 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 12 objects
10 Sep 2011 22:09:26,473 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:09:26,473 DEBUG ~ listing entities:
10 Sep 2011 22:09:26,473 DEBUG ~ models.Location{id=1, courses=null, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:09:26,473 DEBUG ~ models.Participant{course=null, id=1, billed=false, email=ketil@miles.no, address=null, orgNumber=null, name=Ketil Jensen, company=Miles Oslo, telephonenumber=null, paymentReceived=false}
10 Sep 2011 22:09:26,473 DEBUG ~ models.Book{id=1, author=models.Instructor#1, title=Kanban - Successful Evolutionary Change for Your Technology Business, imageUrl=KanbanBook.jpg, externalUrl=http://agilemanagement.net/index.php/site/kanbanbook/}
10 Sep 2011 22:09:26,473 DEBUG ~ models.Site{id=2, description=David J. Anderson's official website....
, name=agilemanagement, url=http://agilemanagement.net}
10 Sep 2011 22:09:26,473 DEBUG ~ models.User{id=1, email=ketil@miles.no, isAdmin=true, fullName=Ketil Jensen, password=aa11BBL02}
10 Sep 2011 22:09:26,473 DEBUG ~ models.Presentation{id=1, location=Helsinki, event=Less2010, name=Bringing Excellence to Service Delivery, url=http://www.cs.helsinki.fi/en/video/anderson, presenter=models.Instructor#1}
10 Sep 2011 22:09:26,473 DEBUG ~ models.Site{id=1, description=The official website for Kanban resources on the net. The material on this site has been approved by some of the leading people in the Kanban commity.
, name=Limited WIP Socitety, url=http:limitedwipsociety.org}
10 Sep 2011 22:09:26,474 DEBUG ~ models.Instructor{id=1, books=null, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=null, courses=null, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=null, image=null, twitterId=agilemanager}
10 Sep 2011 22:09:26,474 DEBUG ~ models.Course{id=1, startDate=Mon Mar 28 02:00:00 CEST 2011, price=13000, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=Tue Feb 01 01:00:00 CET 2011, description=This is a description
, name=Kanban Training Class, maxNumberOfParticipants=20, endDate=Tue Mar 29 02:00:00 CEST 2011, earlyBird=12000, participants=null}
10 Sep 2011 22:09:26,474 DEBUG ~ models.Course{id=2, startDate=Wed Mar 30 02:00:00 CEST 2011, price=0, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=null, description=This is a description
, name=SHIFT-ALT-CTRL Seminar, maxNumberOfParticipants=50, endDate=Wed Mar 30 02:00:00 CEST 2011, earlyBird=12000, participants=null}
10 Sep 2011 22:09:26,474 DEBUG ~ models.Course{id=3, startDate=Thu Apr 21 02:00:00 CEST 2011, price=1000, instructor=null, location=null, earlyBirdEndDate=null, description=This is a very small course
, name=Small Course, maxNumberOfParticipants=1, endDate=Thu Apr 28 02:00:00 CEST 2011, earlyBird=500, participants=null}
10 Sep 2011 22:09:26,474 DEBUG ~ models.Book{id=2, author=models.Instructor#1, title=Agile Management for Software Engineering, imageUrl=agilemanagement.jpg, externalUrl=http://www.amazon.com/Agile-Management-Software-Engineering-Constraints/dp/0131424602/ref=sr_1_3?s=books&ie=UTF8&qid=1295387560&sr=1-3}
10 Sep 2011 22:09:26,479 DEBUG ~ executing identity-insert immediately
10 Sep 2011 22:09:26,479 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,480 DEBUG ~ Natively generated identity: 2
10 Sep 2011 22:09:26,480 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,481 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:09:26,481 DEBUG ~ dirty checking collections
10 Sep 2011 22:09:26,482 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 13 objects
10 Sep 2011 22:09:26,482 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:09:26,482 DEBUG ~ listing entities:
10 Sep 2011 22:09:26,482 DEBUG ~ models.Location{id=1, courses=null, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:09:26,482 DEBUG ~ models.Participant{course=null, id=1, billed=false, email=ketil@miles.no, address=null, orgNumber=null, name=Ketil Jensen, company=Miles Oslo, telephonenumber=null, paymentReceived=false}
10 Sep 2011 22:09:26,482 DEBUG ~ models.Site{id=2, description=David J. Anderson's official website....
, name=agilemanagement, url=http://agilemanagement.net}
10 Sep 2011 22:09:26,482 DEBUG ~ models.User{id=2, email=arne@miles.no, isAdmin=true, fullName=Arne Lovold, password=arne1234}
10 Sep 2011 22:09:26,482 DEBUG ~ models.Presentation{id=1, location=Helsinki, event=Less2010, name=Bringing Excellence to Service Delivery, url=http://www.cs.helsinki.fi/en/video/anderson, presenter=models.Instructor#1}
10 Sep 2011 22:09:26,482 DEBUG ~ models.User{id=1, email=ketil@miles.no, isAdmin=true, fullName=Ketil Jensen, password=aa11BBL02}
10 Sep 2011 22:09:26,482 DEBUG ~ models.Site{id=1, description=The official website for Kanban resources on the net. The material on this site has been approved by some of the leading people in the Kanban commity.
, name=Limited WIP Socitety, url=http:limitedwipsociety.org}
10 Sep 2011 22:09:26,482 DEBUG ~ models.Course{id=1, startDate=Mon Mar 28 02:00:00 CEST 2011, price=13000, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=Tue Feb 01 01:00:00 CET 2011, description=This is a description
, name=Kanban Training Class, maxNumberOfParticipants=20, endDate=Tue Mar 29 02:00:00 CEST 2011, earlyBird=12000, participants=null}
10 Sep 2011 22:09:26,483 DEBUG ~ models.Course{id=2, startDate=Wed Mar 30 02:00:00 CEST 2011, price=0, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=null, description=This is a description
, name=SHIFT-ALT-CTRL Seminar, maxNumberOfParticipants=50, endDate=Wed Mar 30 02:00:00 CEST 2011, earlyBird=12000, participants=null}
10 Sep 2011 22:09:26,483 DEBUG ~ models.Course{id=3, startDate=Thu Apr 21 02:00:00 CEST 2011, price=1000, instructor=null, location=null, earlyBirdEndDate=null, description=This is a very small course
, name=Small Course, maxNumberOfParticipants=1, endDate=Thu Apr 28 02:00:00 CEST 2011, earlyBird=500, participants=null}
10 Sep 2011 22:09:26,483 DEBUG ~ models.Book{id=1, author=models.Instructor#1, title=Kanban - Successful Evolutionary Change for Your Technology Business, imageUrl=KanbanBook.jpg, externalUrl=http://agilemanagement.net/index.php/site/kanbanbook/}
10 Sep 2011 22:09:26,483 DEBUG ~ models.Instructor{id=1, books=null, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=null, courses=null, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=null, image=null, twitterId=agilemanager}
10 Sep 2011 22:09:26,483 DEBUG ~ models.Book{id=2, author=models.Instructor#1, title=Agile Management for Software Engineering, imageUrl=agilemanagement.jpg, externalUrl=http://www.amazon.com/Agile-Management-Software-Engineering-Constraints/dp/0131424602/ref=sr_1_3?s=books&ie=UTF8&qid=1295387560&sr=1-3}
10 Sep 2011 22:09:26,500 DEBUG ~ commit
10 Sep 2011 22:09:26,501 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:09:26,501 DEBUG ~ committed JDBC Connection
10 Sep 2011 22:09:26,501 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:09:26,501 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 22:09:26,597 DEBUG ~ opened session at timestamp: 13156853665
10 Sep 2011 22:09:26,597 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:09:26,597 DEBUG ~ begin
10 Sep 2011 22:09:26,597 DEBUG ~ opening JDBC connection
10 Sep 2011 22:09:26,597 DEBUG ~ current autocommit status: true
10 Sep 2011 22:09:26,597 DEBUG ~ disabling autocommit
10 Sep 2011 22:09:26,654 DEBUG ~ parse() - HQL: select e from models.Course e
10 Sep 2011 22:09:26,656 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Course'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'e'

10 Sep 2011 22:09:26,656 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:09:26,656 DEBUG ~ select << begin [level=1, statement=select]
10 Sep 2011 22:09:26,656 DEBUG ~ FromClause{level=1} :  models.Course (e) -> course0_
10 Sep 2011 22:09:26,657 DEBUG ~ Resolved :  e -> course0_.id
10 Sep 2011 22:09:26,657 DEBUG ~ select : finishing up [level=1, statement=select]
10 Sep 2011 22:09:26,657 DEBUG ~ processQuery() :  ( SELECT ( {select clause} course0_.id ) ( FromClause{level=1} Course course0_ ) )
10 Sep 2011 22:09:26,657 DEBUG ~ Using FROM fragment [Course course0_]
10 Sep 2011 22:09:26,657 DEBUG ~ select >> end [level=1, statement=select]
10 Sep 2011 22:09:26,658 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Course)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'course0_.id as id6_' {alias=e, className=models.Course, tableAlias=course0_}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.description as descript2_6_, course0_.earlyBird as earlyBird6_, course0_.earlyBirdEndDate as earlyBir4_6_, course0_.endDate as endDate6_, course0_.instructor_id as instructor10_6_, course0_.location_id as location11_6_, course0_.maxNumberOfParticipants as maxNumbe6_6_, course0_.name as name6_, course0_.price as price6_, course0_.startDate as startDate6_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Course course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Course,tableAlias=course0_,origin=null,columns={,className=models.Course}}

10 Sep 2011 22:09:26,658 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:09:26,658 DEBUG ~ HQL: select e from models.Course e
10 Sep 2011 22:09:26,658 DEBUG ~ SQL: select course0_.id as id6_, course0_.description as descript2_6_, course0_.earlyBird as earlyBird6_, course0_.earlyBirdEndDate as earlyBir4_6_, course0_.endDate as endDate6_, course0_.instructor_id as instructor10_6_, course0_.location_id as location11_6_, course0_.maxNumberOfParticipants as maxNumbe6_6_, course0_.name as name6_, course0_.price as price6_, course0_.startDate as startDate6_ from Course course0_
10 Sep 2011 22:09:26,658 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:09:26,658 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,659 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:09:26,660 DEBUG ~ result row: EntityKey[models.Course#1]
10 Sep 2011 22:09:26,667 DEBUG ~ result row: EntityKey[models.Course#2]
10 Sep 2011 22:09:26,667 DEBUG ~ result row: EntityKey[models.Course#3]
10 Sep 2011 22:09:26,668 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:09:26,669 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,669 DEBUG ~ resolving associations for [models.Course#1]
10 Sep 2011 22:09:26,671 DEBUG ~ loading entity: [models.Instructor#1]
10 Sep 2011 22:09:26,671 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,671 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:09:26,671 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:09:26,672 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:09:26,673 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,673 DEBUG ~ resolving associations for [models.Instructor#1]
10 Sep 2011 22:09:26,691 DEBUG ~ done materializing entity [models.Instructor#1]
10 Sep 2011 22:09:26,691 DEBUG ~ done entity load
10 Sep 2011 22:09:26,691 DEBUG ~ loading entity: [models.Location#1]
10 Sep 2011 22:09:26,691 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:09:26,692 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:09:26,692 DEBUG ~ result row: EntityKey[models.Location#1]
10 Sep 2011 22:09:26,692 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:09:26,694 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:09:26,694 DEBUG ~ resolving associations for [models.Location#1]
10 Sep 2011 22:09:26,694 DEBUG ~ done materializing entity [models.Location#1]
10 Sep 2011 22:09:26,694 DEBUG ~ done entity load
10 Sep 2011 22:09:26,694 DEBUG ~ done materializing entity [models.Course#1]
10 Sep 2011 22:09:26,694 DEBUG ~ resolving associations for [models.Course#2]
10 Sep 2011 22:09:26,695 DEBUG ~ done materializing entity [models.Course#2]
10 Sep 2011 22:09:26,695 DEBUG ~ resolving associations for [models.Course#3]
10 Sep 2011 22:09:26,695 DEBUG ~ done materializing entity [models.Course#3]
10 Sep 2011 22:09:26,695 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:09:27,124 DEBUG ~ commit
10 Sep 2011 22:09:27,124 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:09:27,124 DEBUG ~ dirty checking collections
10 Sep 2011 22:09:27,126 DEBUG ~ Collection found: [models.Course.participants#1], was: [models.Course.participants#1] (uninitialized)
10 Sep 2011 22:09:27,126 DEBUG ~ Collection found: [models.Course.participants#2], was: [models.Course.participants#2] (uninitialized)
10 Sep 2011 22:09:27,126 DEBUG ~ Collection found: [models.Course.participants#3], was: [models.Course.participants#3] (uninitialized)
10 Sep 2011 22:09:27,126 DEBUG ~ Collection found: [models.Instructor.books#1], was: [models.Instructor.books#1] (uninitialized)
10 Sep 2011 22:09:27,126 DEBUG ~ Collection found: [models.Instructor.courses#1], was: [models.Instructor.courses#1] (uninitialized)
10 Sep 2011 22:09:27,126 DEBUG ~ Collection found: [models.Instructor.presentations#1], was: [models.Instructor.presentations#1] (uninitialized)
10 Sep 2011 22:09:27,126 DEBUG ~ Collection found: [models.Location.courses#1], was: [models.Location.courses#1] (uninitialized)
10 Sep 2011 22:09:27,126 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
10 Sep 2011 22:09:27,126 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 7 collections
10 Sep 2011 22:09:27,126 DEBUG ~ listing entities:
10 Sep 2011 22:09:27,126 DEBUG ~ models.Location{id=1, courses=<uninitialized>, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:09:27,128 DEBUG ~ models.Instructor{id=1, books=<uninitialized>, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=<uninitialized>, courses=<uninitialized>, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=play.db.jpa.Blob@6fcb3087, image=play.db.jpa.Blob@44daa9f1, twitterId=agilemanager}
10 Sep 2011 22:09:27,128 DEBUG ~ models.Course{id=1, startDate=2011-03-28 02:00:00.0, price=13000, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=2011-02-01 01:00:00.0, description=This is a description
, name=Kanban Training Class, maxNumberOfParticipants=20, endDate=2011-03-29 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:09:27,128 DEBUG ~ models.Course{id=2, startDate=2011-03-30 02:00:00.0, price=0, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=null, description=This is a description
, name=SHIFT-ALT-CTRL Seminar, maxNumberOfParticipants=50, endDate=2011-03-30 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:09:27,128 DEBUG ~ models.Course{id=3, startDate=2011-04-21 02:00:00.0, price=1000, instructor=null, location=null, earlyBirdEndDate=null, description=This is a very small course
, name=Small Course, maxNumberOfParticipants=1, endDate=2011-04-28 02:00:00.0, earlyBird=500, participants=<uninitialized>}
10 Sep 2011 22:09:27,128 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:09:27,128 DEBUG ~ committed JDBC Connection
10 Sep 2011 22:09:27,128 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:09:27,128 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 22:10:40,683 DEBUG ~ opened session at timestamp: 13156854406
10 Sep 2011 22:10:40,684 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:10:40,684 DEBUG ~ begin
10 Sep 2011 22:10:40,684 DEBUG ~ opening JDBC connection
10 Sep 2011 22:10:40,684 DEBUG ~ current autocommit status: true
10 Sep 2011 22:10:40,684 DEBUG ~ disabling autocommit
10 Sep 2011 22:10:40,693 DEBUG ~ commit
10 Sep 2011 22:10:40,693 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:10:40,693 DEBUG ~ committed JDBC Connection
10 Sep 2011 22:10:40,693 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:10:40,693 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 22:10:40,708 DEBUG ~ opened session at timestamp: 13156854407
10 Sep 2011 22:10:40,708 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:10:40,708 DEBUG ~ begin
10 Sep 2011 22:10:40,709 DEBUG ~ opening JDBC connection
10 Sep 2011 22:10:40,709 DEBUG ~ current autocommit status: true
10 Sep 2011 22:10:40,709 DEBUG ~ disabling autocommit
10 Sep 2011 22:10:41,216 DEBUG ~ commit
10 Sep 2011 22:10:41,217 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:10:41,217 DEBUG ~ committed JDBC Connection
10 Sep 2011 22:10:41,217 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:10:41,217 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 22:10:46,999 DEBUG ~ opened session at timestamp: 13156854469
10 Sep 2011 22:10:47,000 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:10:47,000 DEBUG ~ begin
10 Sep 2011 22:10:47,000 DEBUG ~ opening JDBC connection
10 Sep 2011 22:10:47,000 DEBUG ~ current autocommit status: true
10 Sep 2011 22:10:47,000 DEBUG ~ disabling autocommit
10 Sep 2011 22:10:47,089 DEBUG ~ parse() - HQL: from models.User where email = ? AND password = ?
10 Sep 2011 22:10:47,091 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'email'
          |  \-[PARAM] Node: '?'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[PARAM] Node: '?'

10 Sep 2011 22:10:47,091 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:47,092 DEBUG ~ select << begin [level=1, statement=select]
10 Sep 2011 22:10:47,092 DEBUG ~ FromClause{level=1} :  models.User (no alias) -> user0_
10 Sep 2011 22:10:47,093 DEBUG ~ Resolved :  {synthetic-alias} -> {synthetic-alias}
10 Sep 2011 22:10:47,093 DEBUG ~ getDataType() : email -> org.hibernate.type.StringType@42d73fb7
10 Sep 2011 22:10:47,093 DEBUG ~ Resolved :  {synthetic-alias}.email -> user0_.email
10 Sep 2011 22:10:47,093 DEBUG ~ Resolved :  {synthetic-alias} -> {synthetic-alias}
10 Sep 2011 22:10:47,093 DEBUG ~ getDataType() : password -> org.hibernate.type.StringType@42d73fb7
10 Sep 2011 22:10:47,093 DEBUG ~ Resolved :  {synthetic-alias}.password -> user0_.password
10 Sep 2011 22:10:47,093 DEBUG ~ select : finishing up [level=1, statement=select]
10 Sep 2011 22:10:47,093 DEBUG ~ processQuery() :  ( SELECT ( FromClause{level=1} User user0_ ) ( where ( AND ( = ( user0_.email {synthetic-alias} email ) ? ) ( = ( user0_.password {synthetic-alias} password ) ? ) ) ) )
10 Sep 2011 22:10:47,093 DEBUG ~ Derived SELECT clause created.
10 Sep 2011 22:10:47,093 DEBUG ~ Using FROM fragment [User user0_]
10 Sep 2011 22:10:47,093 DEBUG ~ select >> end [level=1, statement=select]
10 Sep 2011 22:10:47,094 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (User)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email4_, user0_.fullName as fullName4_, user0_.isAdmin as isAdmin4_, user0_.password as password4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=ALL,propertyPath=email,path={synthetic-alias}.email,tableAlias=user0_,className=models.User,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'email' {originalText=email}
          |  \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.StringType@42d73fb7}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.password' {propertyName=password,dereferenceType=ALL,propertyPath=password,path={synthetic-alias}.password,tableAlias=user0_,className=models.User,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[PARAM] ParameterNode: '?' {ordinal=1, expectedType=org.hibernate.type.StringType@42d73fb7}

10 Sep 2011 22:10:47,094 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:47,094 DEBUG ~ HQL: from models.User where email = ? AND password = ?
10 Sep 2011 22:10:47,094 DEBUG ~ SQL: select user0_.id as id4_, user0_.email as email4_, user0_.fullName as fullName4_, user0_.isAdmin as isAdmin4_, user0_.password as password4_ from User user0_ where user0_.email=? and user0_.password=?
10 Sep 2011 22:10:47,094 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:47,096 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:10:47,096 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:10:47,096 DEBUG ~ result row: EntityKey[models.User#1]
10 Sep 2011 22:10:47,097 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:10:47,099 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:10:47,099 DEBUG ~ resolving associations for [models.User#1]
10 Sep 2011 22:10:47,099 DEBUG ~ done materializing entity [models.User#1]
10 Sep 2011 22:10:47,099 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:10:47,101 DEBUG ~ commit
10 Sep 2011 22:10:47,101 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:10:47,102 DEBUG ~ dirty checking collections
10 Sep 2011 22:10:47,102 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
10 Sep 2011 22:10:47,102 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:10:47,102 DEBUG ~ listing entities:
10 Sep 2011 22:10:47,102 DEBUG ~ models.User{id=1, email=ketil@miles.no, isAdmin=true, fullName=Ketil Jensen, password=aa11BBL02}
10 Sep 2011 22:10:47,102 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:10:47,102 DEBUG ~ committed JDBC Connection
10 Sep 2011 22:10:47,102 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:10:47,102 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 22:10:47,114 DEBUG ~ opened session at timestamp: 13156854471
10 Sep 2011 22:10:47,114 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:10:47,115 DEBUG ~ begin
10 Sep 2011 22:10:47,123 DEBUG ~ opening JDBC connection
10 Sep 2011 22:10:47,123 DEBUG ~ current autocommit status: true
10 Sep 2011 22:10:47,123 DEBUG ~ disabling autocommit
10 Sep 2011 22:10:47,125 DEBUG ~ parse() - HQL: from models.User where email = ?
10 Sep 2011 22:10:47,127 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'email'
          \-[PARAM] Node: '?'

10 Sep 2011 22:10:47,127 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:47,127 DEBUG ~ select << begin [level=1, statement=select]
10 Sep 2011 22:10:47,127 DEBUG ~ FromClause{level=1} :  models.User (no alias) -> user0_
10 Sep 2011 22:10:47,127 DEBUG ~ Resolved :  {synthetic-alias} -> {synthetic-alias}
10 Sep 2011 22:10:47,128 DEBUG ~ getDataType() : email -> org.hibernate.type.StringType@42d73fb7
10 Sep 2011 22:10:47,128 DEBUG ~ Resolved :  {synthetic-alias}.email -> user0_.email
10 Sep 2011 22:10:47,128 DEBUG ~ select : finishing up [level=1, statement=select]
10 Sep 2011 22:10:47,128 DEBUG ~ processQuery() :  ( SELECT ( FromClause{level=1} User user0_ ) ( where ( = ( user0_.email {synthetic-alias} email ) ? ) ) )
10 Sep 2011 22:10:47,128 DEBUG ~ Derived SELECT clause created.
10 Sep 2011 22:10:47,128 DEBUG ~ Using FROM fragment [User user0_]
10 Sep 2011 22:10:47,128 DEBUG ~ select >> end [level=1, statement=select]
10 Sep 2011 22:10:47,129 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (User)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email4_, user0_.fullName as fullName4_, user0_.isAdmin as isAdmin4_, user0_.password as password4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=ALL,propertyPath=email,path={synthetic-alias}.email,tableAlias=user0_,className=models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.StringType@42d73fb7}

10 Sep 2011 22:10:47,129 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:47,129 DEBUG ~ HQL: from models.User where email = ?
10 Sep 2011 22:10:47,129 DEBUG ~ SQL: select user0_.id as id4_, user0_.email as email4_, user0_.fullName as fullName4_, user0_.isAdmin as isAdmin4_, user0_.password as password4_ from User user0_ where user0_.email=?
10 Sep 2011 22:10:47,129 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:47,130 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:10:47,130 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:10:47,130 DEBUG ~ result row: EntityKey[models.User#1]
10 Sep 2011 22:10:47,131 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:10:47,136 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:10:47,136 DEBUG ~ resolving associations for [models.User#1]
10 Sep 2011 22:10:47,137 DEBUG ~ done materializing entity [models.User#1]
10 Sep 2011 22:10:47,137 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:10:48,151 DEBUG ~ commit
10 Sep 2011 22:10:48,151 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:10:48,152 DEBUG ~ dirty checking collections
10 Sep 2011 22:10:48,152 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
10 Sep 2011 22:10:48,152 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
10 Sep 2011 22:10:48,152 DEBUG ~ listing entities:
10 Sep 2011 22:10:48,152 DEBUG ~ models.User{id=1, email=ketil@miles.no, isAdmin=true, fullName=Ketil Jensen, password=aa11BBL02}
10 Sep 2011 22:10:48,152 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:10:48,152 DEBUG ~ committed JDBC Connection
10 Sep 2011 22:10:48,152 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:10:48,152 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 22:10:50,460 DEBUG ~ opened session at timestamp: 13156854504
10 Sep 2011 22:10:50,460 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:10:50,460 DEBUG ~ begin
10 Sep 2011 22:10:50,460 DEBUG ~ opening JDBC connection
10 Sep 2011 22:10:50,460 DEBUG ~ current autocommit status: true
10 Sep 2011 22:10:50,460 DEBUG ~ disabling autocommit
10 Sep 2011 22:10:50,469 DEBUG ~ parse() - HQL: from models.Course order by id ASC
10 Sep 2011 22:10:50,471 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'id'
       \-[ASCENDING] Node: 'ASC'

10 Sep 2011 22:10:50,471 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:50,472 DEBUG ~ select << begin [level=1, statement=select]
10 Sep 2011 22:10:50,472 DEBUG ~ FromClause{level=1} :  models.Course (no alias) -> course0_
10 Sep 2011 22:10:50,473 DEBUG ~ Resolved :  {synthetic-alias} -> {synthetic-alias}
10 Sep 2011 22:10:50,473 DEBUG ~ getDataType() : id -> org.hibernate.type.LongType@68111f9b
10 Sep 2011 22:10:50,473 DEBUG ~ Resolved :  {synthetic-alias}.id -> course0_.id
10 Sep 2011 22:10:50,474 DEBUG ~ select : finishing up [level=1, statement=select]
10 Sep 2011 22:10:50,475 DEBUG ~ processQuery() :  ( SELECT ( FromClause{level=1} Course course0_ ) ( order ( course0_.id {synthetic-alias} id ) ASC ) )
10 Sep 2011 22:10:50,475 DEBUG ~ Derived SELECT clause created.
10 Sep 2011 22:10:50,475 DEBUG ~ Using FROM fragment [Course course0_]
10 Sep 2011 22:10:50,475 DEBUG ~ select >> end [level=1, statement=select]
10 Sep 2011 22:10:50,476 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Course)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.id as id6_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Course,tableAlias=course0_,origin=null,columns={,className=models.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.description as descript2_6_, course0_.earlyBird as earlyBird6_, course0_.earlyBirdEndDate as earlyBir4_6_, course0_.endDate as endDate6_, course0_.instructor_id as instructor10_6_, course0_.location_id as location11_6_, course0_.maxNumberOfParticipants as maxNumbe6_6_, course0_.name as name6_, course0_.price as price6_, course0_.startDate as startDate6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Course course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Course,tableAlias=course0_,origin=null,columns={,className=models.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=course0_,className=models.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[ASCENDING] SqlNode: 'ASC'

10 Sep 2011 22:10:50,476 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:50,476 DEBUG ~ HQL: from models.Course order by id ASC
10 Sep 2011 22:10:50,476 DEBUG ~ SQL: select course0_.id as id6_, course0_.description as descript2_6_, course0_.earlyBird as earlyBird6_, course0_.earlyBirdEndDate as earlyBir4_6_, course0_.endDate as endDate6_, course0_.instructor_id as instructor10_6_, course0_.location_id as location11_6_, course0_.maxNumberOfParticipants as maxNumbe6_6_, course0_.name as name6_, course0_.price as price6_, course0_.startDate as startDate6_ from Course course0_ order by course0_.id ASC
10 Sep 2011 22:10:50,476 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:50,477 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:10:50,477 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:10:50,477 DEBUG ~ result row: EntityKey[models.Course#1]
10 Sep 2011 22:10:50,478 DEBUG ~ result row: EntityKey[models.Course#2]
10 Sep 2011 22:10:50,478 DEBUG ~ result row: EntityKey[models.Course#3]
10 Sep 2011 22:10:50,479 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:10:50,480 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:10:50,480 DEBUG ~ resolving associations for [models.Course#1]
10 Sep 2011 22:10:50,480 DEBUG ~ loading entity: [models.Instructor#1]
10 Sep 2011 22:10:50,480 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:10:50,481 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:10:50,481 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:10:50,481 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:10:50,482 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:10:50,482 DEBUG ~ resolving associations for [models.Instructor#1]
10 Sep 2011 22:10:50,483 DEBUG ~ done materializing entity [models.Instructor#1]
10 Sep 2011 22:10:50,483 DEBUG ~ done entity load
10 Sep 2011 22:10:50,483 DEBUG ~ loading entity: [models.Location#1]
10 Sep 2011 22:10:50,483 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:10:50,483 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:10:50,483 DEBUG ~ result row: EntityKey[models.Location#1]
10 Sep 2011 22:10:50,483 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:10:50,485 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:10:50,485 DEBUG ~ resolving associations for [models.Location#1]
10 Sep 2011 22:10:50,485 DEBUG ~ done materializing entity [models.Location#1]
10 Sep 2011 22:10:50,485 DEBUG ~ done entity load
10 Sep 2011 22:10:50,485 DEBUG ~ done materializing entity [models.Course#1]
10 Sep 2011 22:10:50,485 DEBUG ~ resolving associations for [models.Course#2]
10 Sep 2011 22:10:50,485 DEBUG ~ done materializing entity [models.Course#2]
10 Sep 2011 22:10:50,485 DEBUG ~ resolving associations for [models.Course#3]
10 Sep 2011 22:10:50,485 DEBUG ~ done materializing entity [models.Course#3]
10 Sep 2011 22:10:50,485 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:10:50,486 DEBUG ~ parse() - HQL: select count(*) from models.Course e
10 Sep 2011 22:10:50,488 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Course'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'

10 Sep 2011 22:10:50,488 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:50,488 DEBUG ~ select << begin [level=1, statement=select]
10 Sep 2011 22:10:50,489 DEBUG ~ FromClause{level=1} :  models.Course (e) -> course0_
10 Sep 2011 22:10:50,489 DEBUG ~ select : finishing up [level=1, statement=select]
10 Sep 2011 22:10:50,489 DEBUG ~ processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} Course course0_ ) )
10 Sep 2011 22:10:50,489 DEBUG ~ Using FROM fragment [Course course0_]
10 Sep 2011 22:10:50,489 DEBUG ~ select >> end [level=1, statement=select]
10 Sep 2011 22:10:50,489 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Course)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Course course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Course,tableAlias=course0_,origin=null,columns={,className=models.Course}}

10 Sep 2011 22:10:50,489 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:50,490 DEBUG ~ HQL: select count(*) from models.Course e
10 Sep 2011 22:10:50,490 DEBUG ~ SQL: select count(*) as col_0_0_ from Course course0_
10 Sep 2011 22:10:50,490 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:50,490 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:10:50,490 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:10:50,490 DEBUG ~ result row: 
10 Sep 2011 22:10:50,490 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:10:50,492 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:10:50,492 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:10:50,492 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:10:50,492 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:10:50,493 DEBUG ~ result row: 
10 Sep 2011 22:10:50,493 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:10:50,494 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:10:50,494 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:10:52,450 DEBUG ~ commit
10 Sep 2011 22:10:52,450 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:10:52,450 DEBUG ~ dirty checking collections
10 Sep 2011 22:10:52,451 DEBUG ~ Collection found: [models.Course.participants#1], was: [models.Course.participants#1] (uninitialized)
10 Sep 2011 22:10:52,451 DEBUG ~ Collection found: [models.Course.participants#2], was: [models.Course.participants#2] (uninitialized)
10 Sep 2011 22:10:52,451 DEBUG ~ Collection found: [models.Course.participants#3], was: [models.Course.participants#3] (uninitialized)
10 Sep 2011 22:10:52,452 DEBUG ~ Collection found: [models.Instructor.books#1], was: [models.Instructor.books#1] (uninitialized)
10 Sep 2011 22:10:52,452 DEBUG ~ Collection found: [models.Instructor.courses#1], was: [models.Instructor.courses#1] (uninitialized)
10 Sep 2011 22:10:52,452 DEBUG ~ Collection found: [models.Instructor.presentations#1], was: [models.Instructor.presentations#1] (uninitialized)
10 Sep 2011 22:10:52,452 DEBUG ~ Collection found: [models.Location.courses#1], was: [models.Location.courses#1] (uninitialized)
10 Sep 2011 22:10:52,452 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
10 Sep 2011 22:10:52,452 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 7 collections
10 Sep 2011 22:10:52,452 DEBUG ~ listing entities:
10 Sep 2011 22:10:52,452 DEBUG ~ models.Location{id=1, courses=<uninitialized>, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:10:52,452 DEBUG ~ models.Instructor{id=1, books=<uninitialized>, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=<uninitialized>, courses=<uninitialized>, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=play.db.jpa.Blob@6bc06877, image=play.db.jpa.Blob@1ba4f8a6, twitterId=agilemanager}
10 Sep 2011 22:10:52,453 DEBUG ~ models.Course{id=1, startDate=2011-03-28 02:00:00.0, price=13000, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=2011-02-01 01:00:00.0, description=This is a description
, name=Kanban Training Class, maxNumberOfParticipants=20, endDate=2011-03-29 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:10:52,453 DEBUG ~ models.Course{id=2, startDate=2011-03-30 02:00:00.0, price=0, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=null, description=This is a description
, name=SHIFT-ALT-CTRL Seminar, maxNumberOfParticipants=50, endDate=2011-03-30 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:10:52,453 DEBUG ~ models.Course{id=3, startDate=2011-04-21 02:00:00.0, price=1000, instructor=null, location=null, earlyBirdEndDate=null, description=This is a very small course
, name=Small Course, maxNumberOfParticipants=1, endDate=2011-04-28 02:00:00.0, earlyBird=500, participants=<uninitialized>}
10 Sep 2011 22:10:52,453 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:10:52,453 DEBUG ~ committed JDBC Connection
10 Sep 2011 22:10:52,453 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:10:52,453 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 22:10:55,200 DEBUG ~ opened session at timestamp: 13156854552
10 Sep 2011 22:10:55,200 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:10:55,200 DEBUG ~ begin
10 Sep 2011 22:10:55,200 DEBUG ~ opening JDBC connection
10 Sep 2011 22:10:55,200 DEBUG ~ current autocommit status: true
10 Sep 2011 22:10:55,200 DEBUG ~ disabling autocommit
10 Sep 2011 22:10:55,205 DEBUG ~ loading entity: [models.Course#1]
10 Sep 2011 22:10:55,205 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:10:55,207 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:10:55,208 DEBUG ~ result row: EntityKey[models.Instructor#1], EntityKey[models.Location#1], EntityKey[models.Course#1]
10 Sep 2011 22:10:55,208 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:10:55,210 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:10:55,210 DEBUG ~ resolving associations for [models.Instructor#1]
10 Sep 2011 22:10:55,210 DEBUG ~ done materializing entity [models.Instructor#1]
10 Sep 2011 22:10:55,210 DEBUG ~ resolving associations for [models.Location#1]
10 Sep 2011 22:10:55,210 DEBUG ~ done materializing entity [models.Location#1]
10 Sep 2011 22:10:55,210 DEBUG ~ resolving associations for [models.Course#1]
10 Sep 2011 22:10:55,210 DEBUG ~ done materializing entity [models.Course#1]
10 Sep 2011 22:10:55,210 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:10:55,210 DEBUG ~ done entity load
10 Sep 2011 22:10:56,588 DEBUG ~ parse() - HQL: from models.Instructor
10 Sep 2011 22:10:56,590 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'models'
                \-[IDENT] Node: 'Instructor'

10 Sep 2011 22:10:56,590 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:56,590 DEBUG ~ select << begin [level=1, statement=select]
10 Sep 2011 22:10:56,590 DEBUG ~ FromClause{level=1} :  models.Instructor (no alias) -> instructor0_
10 Sep 2011 22:10:56,590 DEBUG ~ select : finishing up [level=1, statement=select]
10 Sep 2011 22:10:56,590 DEBUG ~ processQuery() :  ( SELECT ( FromClause{level=1} Instructor instructor0_ ) )
10 Sep 2011 22:10:56,591 DEBUG ~ Derived SELECT clause created.
10 Sep 2011 22:10:56,591 DEBUG ~ Using FROM fragment [Instructor instructor0_]
10 Sep 2011 22:10:56,591 DEBUG ~ select >> end [level=1, statement=select]
10 Sep 2011 22:10:56,591 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Instructor)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'instructor0_.id as id5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Instructor,tableAlias=instructor0_,origin=null,columns={,className=models.Instructor}}}
    |  \-[SQL_TOKEN] SqlFragment: 'instructor0_.bio as bio5_, instructor0_.image as image5_, instructor0_.largeImage as largeImage5_, instructor0_.name as name5_, instructor0_.resume as resume5_, instructor0_.twitterId as twitterId5_, instructor0_.website as website5_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[instructor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Instructor instructor0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Instructor,tableAlias=instructor0_,origin=null,columns={,className=models.Instructor}}

10 Sep 2011 22:10:56,591 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:56,591 DEBUG ~ HQL: from models.Instructor
10 Sep 2011 22:10:56,591 DEBUG ~ SQL: select instructor0_.id as id5_, instructor0_.bio as bio5_, instructor0_.image as image5_, instructor0_.largeImage as largeImage5_, instructor0_.name as name5_, instructor0_.resume as resume5_, instructor0_.twitterId as twitterId5_, instructor0_.website as website5_ from Instructor instructor0_
10 Sep 2011 22:10:56,591 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:56,595 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:10:56,595 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:10:56,595 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:10:56,595 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:10:56,597 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:10:56,597 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:10:56,723 DEBUG ~ parse() - HQL: from models.Location
10 Sep 2011 22:10:56,724 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'models'
                \-[IDENT] Node: 'Location'

10 Sep 2011 22:10:56,725 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:56,725 DEBUG ~ select << begin [level=1, statement=select]
10 Sep 2011 22:10:56,725 DEBUG ~ FromClause{level=1} :  models.Location (no alias) -> location0_
10 Sep 2011 22:10:56,725 DEBUG ~ select : finishing up [level=1, statement=select]
10 Sep 2011 22:10:56,725 DEBUG ~ processQuery() :  ( SELECT ( FromClause{level=1} Location location0_ ) )
10 Sep 2011 22:10:56,726 DEBUG ~ Derived SELECT clause created.
10 Sep 2011 22:10:56,726 DEBUG ~ Using FROM fragment [Location location0_]
10 Sep 2011 22:10:56,726 DEBUG ~ select >> end [level=1, statement=select]
10 Sep 2011 22:10:56,726 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Location)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'location0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Location,tableAlias=location0_,origin=null,columns={,className=models.Location}}}
    |  \-[SQL_TOKEN] SqlFragment: 'location0_.address as address0_, location0_.map as map0_, location0_.mapUrl as mapUrl0_, location0_.name as name0_, location0_.postal as postal0_, location0_.telephoneNumber as telephon7_0_, location0_.url as url0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[location0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Location location0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Location,tableAlias=location0_,origin=null,columns={,className=models.Location}}

10 Sep 2011 22:10:56,726 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:56,726 DEBUG ~ HQL: from models.Location
10 Sep 2011 22:10:56,726 DEBUG ~ SQL: select location0_.id as id0_, location0_.address as address0_, location0_.map as map0_, location0_.mapUrl as mapUrl0_, location0_.name as name0_, location0_.postal as postal0_, location0_.telephoneNumber as telephon7_0_, location0_.url as url0_ from Location location0_
10 Sep 2011 22:10:56,726 DEBUG ~ throwQueryException() : no errors
10 Sep 2011 22:10:56,727 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:10:56,727 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:10:56,727 DEBUG ~ result row: EntityKey[models.Location#1]
10 Sep 2011 22:10:56,727 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:10:56,729 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:10:56,729 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:10:57,003 DEBUG ~ commit
10 Sep 2011 22:10:57,003 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:10:57,003 DEBUG ~ dirty checking collections
10 Sep 2011 22:10:57,003 DEBUG ~ Collection found: [models.Instructor.books#1], was: [models.Instructor.books#1] (uninitialized)
10 Sep 2011 22:10:57,003 DEBUG ~ Collection found: [models.Instructor.courses#1], was: [models.Instructor.courses#1] (uninitialized)
10 Sep 2011 22:10:57,003 DEBUG ~ Collection found: [models.Instructor.presentations#1], was: [models.Instructor.presentations#1] (uninitialized)
10 Sep 2011 22:10:57,003 DEBUG ~ Collection found: [models.Location.courses#1], was: [models.Location.courses#1] (uninitialized)
10 Sep 2011 22:10:57,003 DEBUG ~ Collection found: [models.Course.participants#1], was: [models.Course.participants#1] (uninitialized)
10 Sep 2011 22:10:57,003 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
10 Sep 2011 22:10:57,003 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 5 collections
10 Sep 2011 22:10:57,003 DEBUG ~ listing entities:
10 Sep 2011 22:10:57,004 DEBUG ~ models.Location{id=1, courses=<uninitialized>, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:10:57,004 DEBUG ~ models.Instructor{id=1, books=<uninitialized>, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=<uninitialized>, courses=<uninitialized>, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=play.db.jpa.Blob@64383ed6, image=play.db.jpa.Blob@1298a7eb, twitterId=agilemanager}
10 Sep 2011 22:10:57,004 DEBUG ~ models.Course{id=1, startDate=2011-03-28 02:00:00.0, price=13000, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=2011-02-01 01:00:00.0, description=This is a description
, name=Kanban Training Class, maxNumberOfParticipants=20, endDate=2011-03-29 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:10:57,004 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:10:57,004 DEBUG ~ committed JDBC Connection
10 Sep 2011 22:10:57,004 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:10:57,004 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 22:11:38,927 DEBUG ~ opened session at timestamp: 13156854989
10 Sep 2011 22:11:38,927 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:11:38,927 DEBUG ~ begin
10 Sep 2011 22:11:38,927 DEBUG ~ opening JDBC connection
10 Sep 2011 22:11:38,928 DEBUG ~ current autocommit status: true
10 Sep 2011 22:11:38,928 DEBUG ~ disabling autocommit
10 Sep 2011 22:11:38,929 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:11:38,929 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:11:38,929 DEBUG ~ result row: EntityKey[models.Course#1]
10 Sep 2011 22:11:38,930 DEBUG ~ result row: EntityKey[models.Course#2]
10 Sep 2011 22:11:38,930 DEBUG ~ result row: EntityKey[models.Course#3]
10 Sep 2011 22:11:38,930 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:11:38,931 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:11:38,931 DEBUG ~ resolving associations for [models.Course#1]
10 Sep 2011 22:11:38,931 DEBUG ~ loading entity: [models.Instructor#1]
10 Sep 2011 22:11:38,931 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:11:38,931 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:11:38,931 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:11:38,932 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:11:38,932 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:11:38,932 DEBUG ~ resolving associations for [models.Instructor#1]
10 Sep 2011 22:11:38,940 DEBUG ~ done materializing entity [models.Instructor#1]
10 Sep 2011 22:11:38,940 DEBUG ~ done entity load
10 Sep 2011 22:11:38,940 DEBUG ~ loading entity: [models.Location#1]
10 Sep 2011 22:11:38,940 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:11:38,940 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:11:38,940 DEBUG ~ result row: EntityKey[models.Location#1]
10 Sep 2011 22:11:38,941 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:11:38,941 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:11:38,941 DEBUG ~ resolving associations for [models.Location#1]
10 Sep 2011 22:11:38,941 DEBUG ~ done materializing entity [models.Location#1]
10 Sep 2011 22:11:38,941 DEBUG ~ done entity load
10 Sep 2011 22:11:38,942 DEBUG ~ done materializing entity [models.Course#1]
10 Sep 2011 22:11:38,942 DEBUG ~ resolving associations for [models.Course#2]
10 Sep 2011 22:11:38,942 DEBUG ~ done materializing entity [models.Course#2]
10 Sep 2011 22:11:38,942 DEBUG ~ resolving associations for [models.Course#3]
10 Sep 2011 22:11:38,942 DEBUG ~ done materializing entity [models.Course#3]
10 Sep 2011 22:11:38,942 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:11:39,064 DEBUG ~ rollback
10 Sep 2011 22:11:39,064 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:11:39,064 DEBUG ~ rolled back JDBC Connection
10 Sep 2011 22:11:39,065 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:11:39,065 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 22:11:39,222 ERROR ~ 

@67l12kfgo
Internal Server Error (500) for request GET /

Template execution error (In /app/views/Application/index.html around line 13)
Execution error occured in template /app/views/Application/index.html. Exception raised was NullPointerException : Cannot get property 'url' on null object.

play.exceptions.TemplateExecutionException: Cannot get property 'url' on null object
	at play.templates.BaseTemplate.throwException(BaseTemplate.java:84)
	at play.templates.GroovyTemplate.internalRender(GroovyTemplate.java:252)
	at play.templates.Template.render(Template.java:26)
	at play.templates.GroovyTemplate.render(GroovyTemplate.java:184)
	at play.mvc.results.RenderTemplate.<init>(RenderTemplate.java:24)
	at play.mvc.Controller.renderTemplate(Controller.java:659)
	at play.mvc.Controller.renderTemplate(Controller.java:639)
	at play.mvc.Controller.render(Controller.java:694)
	at controllers.Application.index(Application.java:36)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:546)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:500)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:476)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:471)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:159)
	at Invocation.HTTP Request(Play!)
Caused by: java.lang.NullPointerException: Cannot get property 'url' on null object
	at /app/views/Application/index.html.(line:13)
	at play.templates.GroovyTemplate.internalRender(GroovyTemplate.java:229)
	... 13 more
10 Sep 2011 22:12:21,214 DEBUG ~ opened session at timestamp: 13156855412
10 Sep 2011 22:12:21,214 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:12:21,214 DEBUG ~ begin
10 Sep 2011 22:12:21,214 DEBUG ~ opening JDBC connection
10 Sep 2011 22:12:21,214 DEBUG ~ current autocommit status: true
10 Sep 2011 22:12:21,214 DEBUG ~ disabling autocommit
10 Sep 2011 22:12:21,215 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:12:21,222 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:12:21,222 DEBUG ~ result row: EntityKey[models.Course#1]
10 Sep 2011 22:12:21,223 DEBUG ~ result row: EntityKey[models.Course#2]
10 Sep 2011 22:12:21,231 DEBUG ~ result row: EntityKey[models.Course#3]
10 Sep 2011 22:12:21,231 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:12:21,232 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:12:21,232 DEBUG ~ resolving associations for [models.Course#1]
10 Sep 2011 22:12:21,232 DEBUG ~ loading entity: [models.Instructor#1]
10 Sep 2011 22:12:21,232 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:12:21,232 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:12:21,232 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:12:21,233 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:12:21,233 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:12:21,233 DEBUG ~ resolving associations for [models.Instructor#1]
10 Sep 2011 22:12:21,234 DEBUG ~ done materializing entity [models.Instructor#1]
10 Sep 2011 22:12:21,234 DEBUG ~ done entity load
10 Sep 2011 22:12:21,234 DEBUG ~ loading entity: [models.Location#1]
10 Sep 2011 22:12:21,234 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:12:21,234 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:12:21,234 DEBUG ~ result row: EntityKey[models.Location#1]
10 Sep 2011 22:12:21,234 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:12:21,235 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:12:21,235 DEBUG ~ resolving associations for [models.Location#1]
10 Sep 2011 22:12:21,236 DEBUG ~ done materializing entity [models.Location#1]
10 Sep 2011 22:12:21,236 DEBUG ~ done entity load
10 Sep 2011 22:12:21,236 DEBUG ~ done materializing entity [models.Course#1]
10 Sep 2011 22:12:21,236 DEBUG ~ resolving associations for [models.Course#2]
10 Sep 2011 22:12:21,236 DEBUG ~ done materializing entity [models.Course#2]
10 Sep 2011 22:12:21,236 DEBUG ~ resolving associations for [models.Course#3]
10 Sep 2011 22:12:21,236 DEBUG ~ done materializing entity [models.Course#3]
10 Sep 2011 22:12:21,236 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:12:21,323 DEBUG ~ rollback
10 Sep 2011 22:12:21,324 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:12:21,324 DEBUG ~ rolled back JDBC Connection
10 Sep 2011 22:12:21,324 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:12:21,324 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 22:12:21,338 ERROR ~ 

@67l12kfgp
Internal Server Error (500) for request GET /

Template execution error (In /app/views/Application/index.html around line 13)
Execution error occured in template /app/views/Application/index.html. Exception raised was NullPointerException : Cannot get property 'name' on null object.

play.exceptions.TemplateExecutionException: Cannot get property 'name' on null object
	at play.templates.BaseTemplate.throwException(BaseTemplate.java:84)
	at play.templates.GroovyTemplate.internalRender(GroovyTemplate.java:252)
	at play.templates.Template.render(Template.java:26)
	at play.templates.GroovyTemplate.render(GroovyTemplate.java:184)
	at play.mvc.results.RenderTemplate.<init>(RenderTemplate.java:24)
	at play.mvc.Controller.renderTemplate(Controller.java:659)
	at play.mvc.Controller.renderTemplate(Controller.java:639)
	at play.mvc.Controller.render(Controller.java:694)
	at controllers.Application.index(Application.java:36)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:546)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:500)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:476)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:471)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:159)
	at Invocation.HTTP Request(Play!)
Caused by: java.lang.NullPointerException: Cannot get property 'name' on null object
	at /app/views/Application/index.html.(line:13)
	at play.templates.GroovyTemplate.internalRender(GroovyTemplate.java:229)
	... 13 more
10 Sep 2011 22:12:41,003 DEBUG ~ opened session at timestamp: 13156855610
10 Sep 2011 22:12:41,003 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:12:41,003 DEBUG ~ begin
10 Sep 2011 22:12:41,003 DEBUG ~ opening JDBC connection
10 Sep 2011 22:12:41,003 DEBUG ~ current autocommit status: true
10 Sep 2011 22:12:41,003 DEBUG ~ disabling autocommit
10 Sep 2011 22:12:41,004 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:12:41,004 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:12:41,004 DEBUG ~ result row: EntityKey[models.Course#1]
10 Sep 2011 22:12:41,004 DEBUG ~ result row: EntityKey[models.Course#2]
10 Sep 2011 22:12:41,005 DEBUG ~ result row: EntityKey[models.Course#3]
10 Sep 2011 22:12:41,005 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:12:41,006 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:12:41,006 DEBUG ~ resolving associations for [models.Course#1]
10 Sep 2011 22:12:41,006 DEBUG ~ loading entity: [models.Instructor#1]
10 Sep 2011 22:12:41,007 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:12:41,007 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:12:41,007 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:12:41,007 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:12:41,008 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:12:41,008 DEBUG ~ resolving associations for [models.Instructor#1]
10 Sep 2011 22:12:41,008 DEBUG ~ done materializing entity [models.Instructor#1]
10 Sep 2011 22:12:41,008 DEBUG ~ done entity load
10 Sep 2011 22:12:41,008 DEBUG ~ loading entity: [models.Location#1]
10 Sep 2011 22:12:41,008 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:12:41,009 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:12:41,009 DEBUG ~ result row: EntityKey[models.Location#1]
10 Sep 2011 22:12:41,009 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:12:41,010 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:12:41,010 DEBUG ~ resolving associations for [models.Location#1]
10 Sep 2011 22:12:41,010 DEBUG ~ done materializing entity [models.Location#1]
10 Sep 2011 22:12:41,010 DEBUG ~ done entity load
10 Sep 2011 22:12:41,010 DEBUG ~ done materializing entity [models.Course#1]
10 Sep 2011 22:12:41,010 DEBUG ~ resolving associations for [models.Course#2]
10 Sep 2011 22:12:41,010 DEBUG ~ done materializing entity [models.Course#2]
10 Sep 2011 22:12:41,010 DEBUG ~ resolving associations for [models.Course#3]
10 Sep 2011 22:12:41,010 DEBUG ~ done materializing entity [models.Course#3]
10 Sep 2011 22:12:41,010 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:12:41,161 DEBUG ~ commit
10 Sep 2011 22:12:41,161 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:12:41,161 DEBUG ~ dirty checking collections
10 Sep 2011 22:12:41,161 DEBUG ~ Collection found: [models.Course.participants#1], was: [models.Course.participants#1] (uninitialized)
10 Sep 2011 22:12:41,161 DEBUG ~ Collection found: [models.Course.participants#2], was: [models.Course.participants#2] (uninitialized)
10 Sep 2011 22:12:41,161 DEBUG ~ Collection found: [models.Course.participants#3], was: [models.Course.participants#3] (uninitialized)
10 Sep 2011 22:12:41,161 DEBUG ~ Collection found: [models.Instructor.books#1], was: [models.Instructor.books#1] (uninitialized)
10 Sep 2011 22:12:41,161 DEBUG ~ Collection found: [models.Instructor.courses#1], was: [models.Instructor.courses#1] (uninitialized)
10 Sep 2011 22:12:41,161 DEBUG ~ Collection found: [models.Instructor.presentations#1], was: [models.Instructor.presentations#1] (uninitialized)
10 Sep 2011 22:12:41,161 DEBUG ~ Collection found: [models.Location.courses#1], was: [models.Location.courses#1] (uninitialized)
10 Sep 2011 22:12:41,161 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
10 Sep 2011 22:12:41,162 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 7 collections
10 Sep 2011 22:12:41,162 DEBUG ~ listing entities:
10 Sep 2011 22:12:41,162 DEBUG ~ models.Location{id=1, courses=<uninitialized>, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:12:41,162 DEBUG ~ models.Instructor{id=1, books=<uninitialized>, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=<uninitialized>, courses=<uninitialized>, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=play.db.jpa.Blob@4e5fd9fb, image=play.db.jpa.Blob@7fe3f2e5, twitterId=agilemanager}
10 Sep 2011 22:12:41,162 DEBUG ~ models.Course{id=1, startDate=2011-03-28 02:00:00.0, price=13000, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=2011-02-01 01:00:00.0, description=This is a description
, name=Kanban Training Class, maxNumberOfParticipants=20, endDate=2011-03-29 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:12:41,162 DEBUG ~ models.Course{id=2, startDate=2011-03-30 02:00:00.0, price=0, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=null, description=This is a description
, name=SHIFT-ALT-CTRL Seminar, maxNumberOfParticipants=50, endDate=2011-03-30 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:12:41,162 DEBUG ~ models.Course{id=3, startDate=2011-04-21 02:00:00.0, price=1000, instructor=null, location=null, earlyBirdEndDate=null, description=This is a very small course
, name=Small Course, maxNumberOfParticipants=1, endDate=2011-04-28 02:00:00.0, earlyBird=500, participants=<uninitialized>}
10 Sep 2011 22:12:41,162 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:12:41,162 DEBUG ~ committed JDBC Connection
10 Sep 2011 22:12:41,162 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:12:41,162 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 22:13:01,655 DEBUG ~ opened session at timestamp: 13156855816
10 Sep 2011 22:13:01,655 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:13:01,655 DEBUG ~ begin
10 Sep 2011 22:13:01,655 DEBUG ~ opening JDBC connection
10 Sep 2011 22:13:01,655 DEBUG ~ current autocommit status: true
10 Sep 2011 22:13:01,655 DEBUG ~ disabling autocommit
10 Sep 2011 22:13:01,656 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:13:01,656 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:13:01,656 DEBUG ~ result row: EntityKey[models.Course#1]
10 Sep 2011 22:13:01,657 DEBUG ~ result row: EntityKey[models.Course#2]
10 Sep 2011 22:13:01,657 DEBUG ~ result row: EntityKey[models.Course#3]
10 Sep 2011 22:13:01,657 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:13:01,658 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:13:01,658 DEBUG ~ resolving associations for [models.Course#1]
10 Sep 2011 22:13:01,658 DEBUG ~ loading entity: [models.Instructor#1]
10 Sep 2011 22:13:01,658 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:13:01,658 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:13:01,658 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:13:01,659 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:13:01,659 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:13:01,659 DEBUG ~ resolving associations for [models.Instructor#1]
10 Sep 2011 22:13:01,660 DEBUG ~ done materializing entity [models.Instructor#1]
10 Sep 2011 22:13:01,660 DEBUG ~ done entity load
10 Sep 2011 22:13:01,660 DEBUG ~ loading entity: [models.Location#1]
10 Sep 2011 22:13:01,660 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:13:01,660 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:13:01,660 DEBUG ~ result row: EntityKey[models.Location#1]
10 Sep 2011 22:13:01,660 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:13:01,661 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:13:01,661 DEBUG ~ resolving associations for [models.Location#1]
10 Sep 2011 22:13:01,661 DEBUG ~ done materializing entity [models.Location#1]
10 Sep 2011 22:13:01,661 DEBUG ~ done entity load
10 Sep 2011 22:13:01,661 DEBUG ~ done materializing entity [models.Course#1]
10 Sep 2011 22:13:01,661 DEBUG ~ resolving associations for [models.Course#2]
10 Sep 2011 22:13:01,662 DEBUG ~ done materializing entity [models.Course#2]
10 Sep 2011 22:13:01,662 DEBUG ~ resolving associations for [models.Course#3]
10 Sep 2011 22:13:01,662 DEBUG ~ done materializing entity [models.Course#3]
10 Sep 2011 22:13:01,662 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:13:01,765 DEBUG ~ commit
10 Sep 2011 22:13:01,765 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:13:01,765 DEBUG ~ dirty checking collections
10 Sep 2011 22:13:01,765 DEBUG ~ Collection found: [models.Course.participants#1], was: [models.Course.participants#1] (uninitialized)
10 Sep 2011 22:13:01,765 DEBUG ~ Collection found: [models.Course.participants#2], was: [models.Course.participants#2] (uninitialized)
10 Sep 2011 22:13:01,765 DEBUG ~ Collection found: [models.Course.participants#3], was: [models.Course.participants#3] (uninitialized)
10 Sep 2011 22:13:01,765 DEBUG ~ Collection found: [models.Instructor.books#1], was: [models.Instructor.books#1] (uninitialized)
10 Sep 2011 22:13:01,765 DEBUG ~ Collection found: [models.Instructor.courses#1], was: [models.Instructor.courses#1] (uninitialized)
10 Sep 2011 22:13:01,765 DEBUG ~ Collection found: [models.Instructor.presentations#1], was: [models.Instructor.presentations#1] (uninitialized)
10 Sep 2011 22:13:01,765 DEBUG ~ Collection found: [models.Location.courses#1], was: [models.Location.courses#1] (uninitialized)
10 Sep 2011 22:13:01,765 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
10 Sep 2011 22:13:01,765 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 7 collections
10 Sep 2011 22:13:01,765 DEBUG ~ listing entities:
10 Sep 2011 22:13:01,765 DEBUG ~ models.Location{id=1, courses=<uninitialized>, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:13:01,766 DEBUG ~ models.Instructor{id=1, books=<uninitialized>, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=<uninitialized>, courses=<uninitialized>, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=play.db.jpa.Blob@7a4cbcaf, image=play.db.jpa.Blob@60aee53f, twitterId=agilemanager}
10 Sep 2011 22:13:01,766 DEBUG ~ models.Course{id=1, startDate=2011-03-28 02:00:00.0, price=13000, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=2011-02-01 01:00:00.0, description=This is a description
, name=Kanban Training Class, maxNumberOfParticipants=20, endDate=2011-03-29 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:13:01,766 DEBUG ~ models.Course{id=2, startDate=2011-03-30 02:00:00.0, price=0, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=null, description=This is a description
, name=SHIFT-ALT-CTRL Seminar, maxNumberOfParticipants=50, endDate=2011-03-30 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:13:01,766 DEBUG ~ models.Course{id=3, startDate=2011-04-21 02:00:00.0, price=1000, instructor=null, location=null, earlyBirdEndDate=null, description=This is a very small course
, name=Small Course, maxNumberOfParticipants=1, endDate=2011-04-28 02:00:00.0, earlyBird=500, participants=<uninitialized>}
10 Sep 2011 22:13:01,766 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:13:01,766 DEBUG ~ committed JDBC Connection
10 Sep 2011 22:13:01,766 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:13:01,766 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 22:13:18,458 DEBUG ~ opened session at timestamp: 13156855984
10 Sep 2011 22:13:18,458 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:13:18,458 DEBUG ~ begin
10 Sep 2011 22:13:18,458 DEBUG ~ opening JDBC connection
10 Sep 2011 22:13:18,458 DEBUG ~ current autocommit status: true
10 Sep 2011 22:13:18,458 DEBUG ~ disabling autocommit
10 Sep 2011 22:13:18,459 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:13:18,459 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:13:18,459 DEBUG ~ result row: EntityKey[models.Course#1]
10 Sep 2011 22:13:18,460 DEBUG ~ result row: EntityKey[models.Course#2]
10 Sep 2011 22:13:18,460 DEBUG ~ result row: EntityKey[models.Course#3]
10 Sep 2011 22:13:18,460 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:13:18,461 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:13:18,461 DEBUG ~ resolving associations for [models.Course#1]
10 Sep 2011 22:13:18,461 DEBUG ~ loading entity: [models.Instructor#1]
10 Sep 2011 22:13:18,461 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:13:18,461 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:13:18,461 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:13:18,462 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:13:18,462 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:13:18,463 DEBUG ~ resolving associations for [models.Instructor#1]
10 Sep 2011 22:13:18,463 DEBUG ~ done materializing entity [models.Instructor#1]
10 Sep 2011 22:13:18,463 DEBUG ~ done entity load
10 Sep 2011 22:13:18,463 DEBUG ~ loading entity: [models.Location#1]
10 Sep 2011 22:13:18,463 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:13:18,463 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:13:18,463 DEBUG ~ result row: EntityKey[models.Location#1]
10 Sep 2011 22:13:18,463 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:13:18,464 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:13:18,464 DEBUG ~ resolving associations for [models.Location#1]
10 Sep 2011 22:13:18,464 DEBUG ~ done materializing entity [models.Location#1]
10 Sep 2011 22:13:18,464 DEBUG ~ done entity load
10 Sep 2011 22:13:18,465 DEBUG ~ done materializing entity [models.Course#1]
10 Sep 2011 22:13:18,465 DEBUG ~ resolving associations for [models.Course#2]
10 Sep 2011 22:13:18,465 DEBUG ~ done materializing entity [models.Course#2]
10 Sep 2011 22:13:18,465 DEBUG ~ resolving associations for [models.Course#3]
10 Sep 2011 22:13:18,465 DEBUG ~ done materializing entity [models.Course#3]
10 Sep 2011 22:13:18,465 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:13:18,550 DEBUG ~ commit
10 Sep 2011 22:13:18,551 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:13:18,551 DEBUG ~ dirty checking collections
10 Sep 2011 22:13:18,551 DEBUG ~ Collection found: [models.Course.participants#1], was: [models.Course.participants#1] (uninitialized)
10 Sep 2011 22:13:18,551 DEBUG ~ Collection found: [models.Course.participants#2], was: [models.Course.participants#2] (uninitialized)
10 Sep 2011 22:13:18,551 DEBUG ~ Collection found: [models.Course.participants#3], was: [models.Course.participants#3] (uninitialized)
10 Sep 2011 22:13:18,551 DEBUG ~ Collection found: [models.Instructor.books#1], was: [models.Instructor.books#1] (uninitialized)
10 Sep 2011 22:13:18,551 DEBUG ~ Collection found: [models.Instructor.courses#1], was: [models.Instructor.courses#1] (uninitialized)
10 Sep 2011 22:13:18,551 DEBUG ~ Collection found: [models.Instructor.presentations#1], was: [models.Instructor.presentations#1] (uninitialized)
10 Sep 2011 22:13:18,551 DEBUG ~ Collection found: [models.Location.courses#1], was: [models.Location.courses#1] (uninitialized)
10 Sep 2011 22:13:18,551 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
10 Sep 2011 22:13:18,551 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 7 collections
10 Sep 2011 22:13:18,551 DEBUG ~ listing entities:
10 Sep 2011 22:13:18,552 DEBUG ~ models.Location{id=1, courses=<uninitialized>, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:13:18,552 DEBUG ~ models.Instructor{id=1, books=<uninitialized>, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=<uninitialized>, courses=<uninitialized>, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=play.db.jpa.Blob@5a73c7fb, image=play.db.jpa.Blob@f65a5fa, twitterId=agilemanager}
10 Sep 2011 22:13:18,552 DEBUG ~ models.Course{id=1, startDate=2011-03-28 02:00:00.0, price=13000, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=2011-02-01 01:00:00.0, description=This is a description
, name=Kanban Training Class, maxNumberOfParticipants=20, endDate=2011-03-29 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:13:18,552 DEBUG ~ models.Course{id=2, startDate=2011-03-30 02:00:00.0, price=0, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=null, description=This is a description
, name=SHIFT-ALT-CTRL Seminar, maxNumberOfParticipants=50, endDate=2011-03-30 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:13:18,552 DEBUG ~ models.Course{id=3, startDate=2011-04-21 02:00:00.0, price=1000, instructor=null, location=null, earlyBirdEndDate=null, description=This is a very small course
, name=Small Course, maxNumberOfParticipants=1, endDate=2011-04-28 02:00:00.0, earlyBird=500, participants=<uninitialized>}
10 Sep 2011 22:13:18,552 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:13:18,552 DEBUG ~ committed JDBC Connection
10 Sep 2011 22:13:18,552 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:13:18,552 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 22:13:26,953 DEBUG ~ opened session at timestamp: 13156856069
10 Sep 2011 22:13:26,953 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:13:26,953 DEBUG ~ begin
10 Sep 2011 22:13:26,953 DEBUG ~ opening JDBC connection
10 Sep 2011 22:13:26,953 DEBUG ~ current autocommit status: true
10 Sep 2011 22:13:26,953 DEBUG ~ disabling autocommit
10 Sep 2011 22:13:26,954 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:13:26,954 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:13:26,954 DEBUG ~ result row: EntityKey[models.Course#1]
10 Sep 2011 22:13:26,955 DEBUG ~ result row: EntityKey[models.Course#2]
10 Sep 2011 22:13:26,955 DEBUG ~ result row: EntityKey[models.Course#3]
10 Sep 2011 22:13:26,955 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:13:26,956 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:13:26,956 DEBUG ~ resolving associations for [models.Course#1]
10 Sep 2011 22:13:26,956 DEBUG ~ loading entity: [models.Instructor#1]
10 Sep 2011 22:13:26,956 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:13:26,956 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:13:26,956 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:13:26,956 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:13:26,957 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:13:26,957 DEBUG ~ resolving associations for [models.Instructor#1]
10 Sep 2011 22:13:26,957 DEBUG ~ done materializing entity [models.Instructor#1]
10 Sep 2011 22:13:26,957 DEBUG ~ done entity load
10 Sep 2011 22:13:26,957 DEBUG ~ loading entity: [models.Location#1]
10 Sep 2011 22:13:26,957 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:13:26,957 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:13:26,957 DEBUG ~ result row: EntityKey[models.Location#1]
10 Sep 2011 22:13:26,958 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:13:26,958 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:13:26,958 DEBUG ~ resolving associations for [models.Location#1]
10 Sep 2011 22:13:26,959 DEBUG ~ done materializing entity [models.Location#1]
10 Sep 2011 22:13:26,959 DEBUG ~ done entity load
10 Sep 2011 22:13:26,959 DEBUG ~ done materializing entity [models.Course#1]
10 Sep 2011 22:13:26,959 DEBUG ~ resolving associations for [models.Course#2]
10 Sep 2011 22:13:26,959 DEBUG ~ done materializing entity [models.Course#2]
10 Sep 2011 22:13:26,959 DEBUG ~ resolving associations for [models.Course#3]
10 Sep 2011 22:13:26,959 DEBUG ~ done materializing entity [models.Course#3]
10 Sep 2011 22:13:26,959 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:13:26,965 DEBUG ~ commit
10 Sep 2011 22:13:26,965 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:13:26,965 DEBUG ~ dirty checking collections
10 Sep 2011 22:13:26,965 DEBUG ~ Collection found: [models.Course.participants#1], was: [models.Course.participants#1] (uninitialized)
10 Sep 2011 22:13:26,965 DEBUG ~ Collection found: [models.Course.participants#2], was: [models.Course.participants#2] (uninitialized)
10 Sep 2011 22:13:26,965 DEBUG ~ Collection found: [models.Course.participants#3], was: [models.Course.participants#3] (uninitialized)
10 Sep 2011 22:13:26,965 DEBUG ~ Collection found: [models.Instructor.books#1], was: [models.Instructor.books#1] (uninitialized)
10 Sep 2011 22:13:26,965 DEBUG ~ Collection found: [models.Instructor.courses#1], was: [models.Instructor.courses#1] (uninitialized)
10 Sep 2011 22:13:26,965 DEBUG ~ Collection found: [models.Instructor.presentations#1], was: [models.Instructor.presentations#1] (uninitialized)
10 Sep 2011 22:13:26,966 DEBUG ~ Collection found: [models.Location.courses#1], was: [models.Location.courses#1] (uninitialized)
10 Sep 2011 22:13:26,966 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
10 Sep 2011 22:13:26,966 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 7 collections
10 Sep 2011 22:13:26,966 DEBUG ~ listing entities:
10 Sep 2011 22:13:26,966 DEBUG ~ models.Location{id=1, courses=<uninitialized>, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:13:26,966 DEBUG ~ models.Instructor{id=1, books=<uninitialized>, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=<uninitialized>, courses=<uninitialized>, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=play.db.jpa.Blob@375dff59, image=play.db.jpa.Blob@56bf83ad, twitterId=agilemanager}
10 Sep 2011 22:13:26,966 DEBUG ~ models.Course{id=1, startDate=2011-03-28 02:00:00.0, price=13000, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=2011-02-01 01:00:00.0, description=This is a description
, name=Kanban Training Class, maxNumberOfParticipants=20, endDate=2011-03-29 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:13:26,966 DEBUG ~ models.Course{id=2, startDate=2011-03-30 02:00:00.0, price=0, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=null, description=This is a description
, name=SHIFT-ALT-CTRL Seminar, maxNumberOfParticipants=50, endDate=2011-03-30 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:13:26,966 DEBUG ~ models.Course{id=3, startDate=2011-04-21 02:00:00.0, price=1000, instructor=null, location=null, earlyBirdEndDate=null, description=This is a very small course
, name=Small Course, maxNumberOfParticipants=1, endDate=2011-04-28 02:00:00.0, earlyBird=500, participants=<uninitialized>}
10 Sep 2011 22:13:26,966 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:13:26,966 DEBUG ~ committed JDBC Connection
10 Sep 2011 22:13:26,966 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:13:26,966 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 22:13:28,864 DEBUG ~ opened session at timestamp: 13156856088
10 Sep 2011 22:13:28,864 DEBUG ~ Trying to set a property which is not supported on entity manager level
10 Sep 2011 22:13:28,864 DEBUG ~ begin
10 Sep 2011 22:13:28,864 DEBUG ~ opening JDBC connection
10 Sep 2011 22:13:28,864 DEBUG ~ current autocommit status: true
10 Sep 2011 22:13:28,864 DEBUG ~ disabling autocommit
10 Sep 2011 22:13:28,865 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:13:28,865 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:13:28,865 DEBUG ~ result row: EntityKey[models.Course#1]
10 Sep 2011 22:13:28,866 DEBUG ~ result row: EntityKey[models.Course#2]
10 Sep 2011 22:13:28,866 DEBUG ~ result row: EntityKey[models.Course#3]
10 Sep 2011 22:13:28,867 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:13:28,867 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:13:28,867 DEBUG ~ resolving associations for [models.Course#1]
10 Sep 2011 22:13:28,867 DEBUG ~ loading entity: [models.Instructor#1]
10 Sep 2011 22:13:28,867 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:13:28,868 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:13:28,868 DEBUG ~ result row: EntityKey[models.Instructor#1]
10 Sep 2011 22:13:28,868 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:13:28,869 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:13:28,869 DEBUG ~ resolving associations for [models.Instructor#1]
10 Sep 2011 22:13:28,869 DEBUG ~ done materializing entity [models.Instructor#1]
10 Sep 2011 22:13:28,869 DEBUG ~ done entity load
10 Sep 2011 22:13:28,869 DEBUG ~ loading entity: [models.Location#1]
10 Sep 2011 22:13:28,869 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
10 Sep 2011 22:13:28,869 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
10 Sep 2011 22:13:28,869 DEBUG ~ result row: EntityKey[models.Location#1]
10 Sep 2011 22:13:28,869 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
10 Sep 2011 22:13:28,870 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
10 Sep 2011 22:13:28,870 DEBUG ~ resolving associations for [models.Location#1]
10 Sep 2011 22:13:28,870 DEBUG ~ done materializing entity [models.Location#1]
10 Sep 2011 22:13:28,870 DEBUG ~ done entity load
10 Sep 2011 22:13:28,870 DEBUG ~ done materializing entity [models.Course#1]
10 Sep 2011 22:13:28,870 DEBUG ~ resolving associations for [models.Course#2]
10 Sep 2011 22:13:28,870 DEBUG ~ done materializing entity [models.Course#2]
10 Sep 2011 22:13:28,870 DEBUG ~ resolving associations for [models.Course#3]
10 Sep 2011 22:13:28,871 DEBUG ~ done materializing entity [models.Course#3]
10 Sep 2011 22:13:28,871 DEBUG ~ initializing non-lazy collections
10 Sep 2011 22:13:28,876 DEBUG ~ commit
10 Sep 2011 22:13:28,876 DEBUG ~ processing flush-time cascades
10 Sep 2011 22:13:28,876 DEBUG ~ dirty checking collections
10 Sep 2011 22:13:28,876 DEBUG ~ Collection found: [models.Course.participants#1], was: [models.Course.participants#1] (uninitialized)
10 Sep 2011 22:13:28,876 DEBUG ~ Collection found: [models.Course.participants#2], was: [models.Course.participants#2] (uninitialized)
10 Sep 2011 22:13:28,876 DEBUG ~ Collection found: [models.Course.participants#3], was: [models.Course.participants#3] (uninitialized)
10 Sep 2011 22:13:28,876 DEBUG ~ Collection found: [models.Instructor.books#1], was: [models.Instructor.books#1] (uninitialized)
10 Sep 2011 22:13:28,876 DEBUG ~ Collection found: [models.Instructor.courses#1], was: [models.Instructor.courses#1] (uninitialized)
10 Sep 2011 22:13:28,876 DEBUG ~ Collection found: [models.Instructor.presentations#1], was: [models.Instructor.presentations#1] (uninitialized)
10 Sep 2011 22:13:28,877 DEBUG ~ Collection found: [models.Location.courses#1], was: [models.Location.courses#1] (uninitialized)
10 Sep 2011 22:13:28,877 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
10 Sep 2011 22:13:28,877 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 7 collections
10 Sep 2011 22:13:28,877 DEBUG ~ listing entities:
10 Sep 2011 22:13:28,877 DEBUG ~ models.Location{id=1, courses=<uninitialized>, postal=0164 Oslo, address=Kristian IV's gate 7, telephoneNumber=+47 22 82 60 00, name=Bristol Hotel, map=http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14&output=embed, url=http://www.thonhotels.no/hoteller/land/norge/oslo/bristol/?gclid=cmrlnvny8aucfzga3godvdwrpq, mapUrl=http://maps.google.com/maps?f=q&source=embed&hl=en&geocode=&q=Kristian+IV's+gate+7+oslo&sll=37.0625,-95.677068&sspn=38.775203,78.662109&ie=UTF8&amp;hq=&hnear=Kristian+IVs+gate+7,+Sentrum,+0164+Oslo,+Norway&ll=59.913429,10.740681&spn=0.012779,0.025749&z=14}
10 Sep 2011 22:13:28,877 DEBUG ~ models.Instructor{id=1, books=<uninitialized>, resume=Father of Kanban-style software development and one of the worlds most exprienced practitioner. As a founder of the Lean Software and System consortium, David is constantly pushing the limit and the Agile community with him. David is also a pioneer of Real options theory and FDD (feature driven development).
, presentations=<uninitialized>, courses=<uninitialized>, bio=David J. Anderson leads a management consulting firm focused on improving performance of technology companies. He has many years management experience leading teams on agile software development projects. David was a founder of the agile movement through his involvement in the creation of Feature Driven Development. He was also a founder of the APLN, a non-profit dedicated to improving management and leadership in technology companies. Recently David has been focusing his attention on business agility and enterprise scale agile software transitions through a synergy of the CMMI model for organizational maturity with Agile and Lean methods.
, website=http://www.agilemanagement.net, name=David J. Anderson, largeImage=play.db.jpa.Blob@7c0c9a54, image=play.db.jpa.Blob@4f614932, twitterId=agilemanager}
10 Sep 2011 22:13:28,877 DEBUG ~ models.Course{id=1, startDate=2011-03-28 02:00:00.0, price=13000, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=2011-02-01 01:00:00.0, description=This is a description
, name=Kanban Training Class, maxNumberOfParticipants=20, endDate=2011-03-29 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:13:28,877 DEBUG ~ models.Course{id=2, startDate=2011-03-30 02:00:00.0, price=0, instructor=models.Instructor#1, location=models.Location#1, earlyBirdEndDate=null, description=This is a description
, name=SHIFT-ALT-CTRL Seminar, maxNumberOfParticipants=50, endDate=2011-03-30 02:00:00.0, earlyBird=12000, participants=<uninitialized>}
10 Sep 2011 22:13:28,877 DEBUG ~ models.Course{id=3, startDate=2011-04-21 02:00:00.0, price=1000, instructor=null, location=null, earlyBirdEndDate=null, description=This is a very small course
, name=Small Course, maxNumberOfParticipants=1, endDate=2011-04-28 02:00:00.0, earlyBird=500, participants=<uninitialized>}
10 Sep 2011 22:13:28,877 DEBUG ~ re-enabling autocommit
10 Sep 2011 22:13:28,877 DEBUG ~ committed JDBC Connection
10 Sep 2011 22:13:28,877 DEBUG ~ aggressively releasing JDBC connection
10 Sep 2011 22:13:28,877 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
10 Sep 2011 23:14:59,266 INFO  ~ closing
10 Sep 2011 23:14:59,269 INFO  ~ Running hbm2ddl schema export
10 Sep 2011 23:14:59,270 DEBUG ~ import file not found: /import.sql
10 Sep 2011 23:14:59,270 INFO  ~ exporting generated schema to database
10 Sep 2011 23:14:59,312 ERROR ~ schema export unsuccessful
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-149]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:327)
	at org.h2.message.DbException.get(DbException.java:167)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.message.DbException.get(DbException.java:133)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1333)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1308)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:380)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.getAutoCommit(NewProxyConnection.java:985)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:52)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:263)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:229)
	at org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:961)
	at org.hibernate.ejb.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:127)
	at play.db.jpa.JPAPlugin.onApplicationStop(JPAPlugin.java:288)
	at play.plugins.PluginCollection.onApplicationStop(PluginCollection.java:437)
	at play.Play.stop(Play.java:535)
	at play.Play$1.run(Play.java:428)
